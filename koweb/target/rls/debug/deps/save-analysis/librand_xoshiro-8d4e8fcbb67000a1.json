{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0","program":"/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rand_xoshiro","--edition=2018","/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8d4e8fcbb67000a1","-C","extra-filename=-8d4e8fcbb67000a1","--out-dir","/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","-L","dependency=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","--extern","rand_core=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/librand_core-4a4f568d3e86ff94.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/librand_xoshiro-8d4e8fcbb67000a1.rmeta"},"prelude":{"crate_id":{"name":"rand_xoshiro","disambiguator":[5758299398383943476,6529071317920434987]},"crate_root":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src","external_crates":[{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","num":4,"id":{"name":"rand_core","disambiguator":[11244230806111443589,12943829222079289871]}}],"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":356,"byte_end":5519,"line_start":9,"line_end":114,"column_start":1,"column_end":42}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4804,"byte_end":4813,"line_start":98,"line_end":98,"column_start":9,"column_end":18},"alias_span":null,"name":"rand_core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4835,"byte_end":4845,"line_start":99,"line_end":99,"column_start":21,"column_end":31},"alias_span":null,"name":"SplitMix64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":385},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4875,"byte_end":4893,"line_start":100,"line_end":100,"column_start":29,"column_end":47},"alias_span":null,"name":"Xoshiro128StarStar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4923,"byte_end":4941,"line_start":101,"line_end":101,"column_start":29,"column_end":47},"alias_span":null,"name":"Xoshiro128PlusPlus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4967,"byte_end":4981,"line_start":102,"line_end":102,"column_start":25,"column_end":39},"alias_span":null,"name":"Xoshiro128Plus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5011,"byte_end":5029,"line_start":103,"line_end":103,"column_start":29,"column_end":47},"alias_span":null,"name":"Xoshiro256StarStar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5059,"byte_end":5077,"line_start":104,"line_end":104,"column_start":29,"column_end":47},"alias_span":null,"name":"Xoshiro256PlusPlus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":443},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5103,"byte_end":5117,"line_start":105,"line_end":105,"column_start":25,"column_end":39},"alias_span":null,"name":"Xoshiro256Plus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5135,"byte_end":5142,"line_start":106,"line_end":106,"column_start":17,"column_end":24},"alias_span":null,"name":"Seed512","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":374},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5135,"byte_end":5142,"line_start":106,"line_end":106,"column_start":17,"column_end":24},"alias_span":null,"name":"Seed512","value":"","parent":{"krate":0,"index":364}},{"kind":"Use","ref_id":{"krate":0,"index":455},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5172,"byte_end":5190,"line_start":107,"line_end":107,"column_start":29,"column_end":47},"alias_span":null,"name":"Xoshiro512StarStar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5220,"byte_end":5238,"line_start":108,"line_end":108,"column_start":29,"column_end":47},"alias_span":null,"name":"Xoshiro512PlusPlus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":483},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5264,"byte_end":5278,"line_start":109,"line_end":109,"column_start":25,"column_end":39},"alias_span":null,"name":"Xoshiro512Plus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5306,"byte_end":5322,"line_start":110,"line_end":110,"column_start":27,"column_end":43},"alias_span":null,"name":"Xoroshiro128Plus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5354,"byte_end":5374,"line_start":111,"line_end":111,"column_start":31,"column_end":51},"alias_span":null,"name":"Xoroshiro128StarStar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5406,"byte_end":5426,"line_start":112,"line_end":112,"column_start":31,"column_end":51},"alias_span":null,"name":"Xoroshiro128PlusPlus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5457,"byte_end":5476,"line_start":113,"line_end":113,"column_start":30,"column_end":49},"alias_span":null,"name":"Xoroshiro64StarStar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":5503,"byte_end":5518,"line_start":114,"line_end":114,"column_start":26,"column_end":41},"alias_span":null,"name":"Xoroshiro64Star","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":356,"byte_end":5519,"line_start":9,"line_end":114,"column_start":1,"column_end":42},"name":"","qualname":"::","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":28},{"krate":0,"index":48},{"krate":0,"index":72},{"krate":0,"index":96},{"krate":0,"index":119},{"krate":0,"index":141},{"krate":0,"index":163},{"krate":0,"index":185},{"krate":0,"index":206},{"krate":0,"index":227},{"krate":0,"index":248},{"krate":0,"index":270},{"krate":0,"index":292},{"krate":0,"index":314},{"krate":0,"index":335},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":733},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"decl_id":null,"docs":" This crate implements the [xoshiro] family of pseudorandom number generators\n designed by David Blackman and Sebastiano Vigna. They feature high\n perfomance and a small state and superseed the previous xorshift-based\n generators. However, they are no cryptographically secure and their output\n can be predicted by observing a few samples.","sig":null,"attributes":[{"value":"/ This crate implements the [xoshiro] family of pseudorandom number generators","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":356,"byte_end":436,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ designed by David Blackman and Sebastiano Vigna. They feature high","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":437,"byte_end":507,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ perfomance and a small state and superseed the previous xorshift-based","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":508,"byte_end":582,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ generators. However, they are no cryptographically secure and their output","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":583,"byte_end":661,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ can be predicted by observing a few samples.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":662,"byte_end":710,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":711,"byte_end":714,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The following generators are implemented:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":715,"byte_end":760,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":761,"byte_end":764,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # 64-bit generators","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":765,"byte_end":788,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/ - [`Xoshiro256StarStar`]: Recommended for all purposes. Excellent speed and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":789,"byte_end":868,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/   a state space (256 bits) large enough for any parallel application.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":869,"byte_end":942,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ - [`Xoshiro256PlusPlus`]: Recommended for all purposes. Excellent speed and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":943,"byte_end":1022,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   a state space (256 bits) large enough for any parallel application.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1023,"byte_end":1096,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ - [`Xoshiro256Plus`]: Recommended for generating 64-bit floating-point","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1097,"byte_end":1171,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/   numbers. About 15% faster than `Xoshiro256StarStar`, but has a [low linear","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1172,"byte_end":1252,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/   complexity] in the lowest bits (which are discarded when generating","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1253,"byte_end":1326,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/   floats), making it fail linearity tests. This is unlikely to have any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1327,"byte_end":1402,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   impact in practise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1403,"byte_end":1428,"line_start":26,"line_end":26,"column_start":1,"column_end":26}},{"value":"/ - [`Xoroshiro128StarStar`]: An alternative to `Xoshiro256StarStar`, having","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1429,"byte_end":1507,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/   the same speed but using half the state. Only suited for low-scale parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1508,"byte_end":1589,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/   applications.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1590,"byte_end":1609,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/ - [`Xoroshiro128PlusPlus`]: An alternative to `Xoshiro256PlusPlus`, having","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1610,"byte_end":1688,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   the same speed but using half the state. Only suited for low-scale parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1689,"byte_end":1770,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"/   applications.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1771,"byte_end":1790,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ - [`Xoroshiro128Plus`]: An alternative to `Xoshiro256Plus`, having the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1791,"byte_end":1870,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   speed but using half the state. Only suited for low-scale parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1871,"byte_end":1943,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/   applications. Has a [low linear complexity] in the lowest bits (which are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":1944,"byte_end":2023,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/   discarded when generating floats), making it fail linearity tests. This is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2024,"byte_end":2104,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/   unlikely to have any impact in practise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2105,"byte_end":2151,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/ - [`Xoshiro512StarStar`]: An alternative to `Xoshiro256StarStar` with more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2152,"byte_end":2230,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/   state and the same speed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2231,"byte_end":2262,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ - [`Xoshiro512PlusPlus`]: An alternative to `Xoshiro256PlusPlus` with more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2263,"byte_end":2341,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/   state and the same speed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2342,"byte_end":2373,"line_start":41,"line_end":41,"column_start":1,"column_end":32}},{"value":"/ - [`Xoshiro512Plus`]: An alternative to `Xoshiro512Plus` with more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2374,"byte_end":2444,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/   state and the same speed. Has a [low linear complexity] in the lowest bits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2445,"byte_end":2525,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/   (which are discarded when generating floats), making it fail linearity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2526,"byte_end":2602,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/   tests. This is unlikely to have any impact in practise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2603,"byte_end":2664,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/ - [`SplitMix64`]: Recommended for initializing generators of the xoshiro","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2665,"byte_end":2741,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/   familiy from a 64-bit seed. Used for implementing `seed_from_u64`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2742,"byte_end":2814,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2815,"byte_end":2818,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # 32-bit generators","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2819,"byte_end":2842,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/ - [`Xoshiro128StarStar`]: Recommended for all purposes. Excellent speed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2843,"byte_end":2919,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ - [`Xoshiro128PlusPlus`]: Recommended for all purposes. Excellent speed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2920,"byte_end":2996,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ - [`Xoshiro128Plus`]: Recommended for generating 32-bit floating-point","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":2997,"byte_end":3071,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/   numbers. Faster than `Xoshiro128StarStar`, but has a [low linear","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3072,"byte_end":3142,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/   complexity] in the lowest bits (which are discarded when generating","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3143,"byte_end":3216,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/   floats), making it fail linearity tests. This is unlikely to have any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3217,"byte_end":3292,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/   impact in practise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3293,"byte_end":3318,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/ - [`Xoroshiro64StarStar`]: An alternative to `Xoshiro128StarStar`, having","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3319,"byte_end":3396,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/   the same speed but using half the state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3397,"byte_end":3443,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/ - [`Xoroshiro64Star`]: An alternative to `Xoshiro128Plus`, having the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3444,"byte_end":3517,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/   same speed but using half the state. Has a [low linear complexity] in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3518,"byte_end":3597,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/   lowest bits (which are discarded when generating floats), making it fail","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3598,"byte_end":3676,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/   linearity tests. This is unlikely to have any impact in practise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3677,"byte_end":3748,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3749,"byte_end":3752,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The `*PlusPlus` generators perform similarily to the `*StarStar` generators.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3753,"byte_end":3833,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ See the [xoshiro paper], where the differences are discussed in detail.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3834,"byte_end":3909,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3910,"byte_end":3913,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [xoshiro]: http://xoshiro.di.unimi.it/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3914,"byte_end":3956,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/ [xoshiro paper]: http://vigna.di.unimi.it/ftp/papers/ScrambledLinear.pdf","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":3957,"byte_end":4033,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ [low linear complexity]: http://xoshiro.di.unimi.it/lowcomp.php","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4034,"byte_end":4101,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"deny(missing_docs)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4317,"byte_end":4339,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4340,"byte_end":4379,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"allow(clippy :: unreadable_literal)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4380,"byte_end":4417,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"no_std","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/lib.rs","byte_start":4418,"byte_end":4428,"line_start":78,"line_end":78,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12304,"byte_end":12311,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"Seed512","qualname":"::common::Seed512","value":"","parent":null,"children":[],"decl_id":null,"docs":" 512-bit seed for a generator.","sig":null,"attributes":[{"value":"/ 512-bit seed for a generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12126,"byte_end":12159,"line_start":234,"line_end":234,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12160,"byte_end":12163,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ This wrapper is necessary, because some traits required for a seed are not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12164,"byte_end":12242,"line_start":236,"line_end":236,"column_start":1,"column_end":79}},{"value":"/ implemented on large arrays.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12243,"byte_end":12275,"line_start":237,"line_end":237,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":375},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12312,"byte_end":12324,"line_start":239,"line_end":239,"column_start":20,"column_end":32},"name":"0","qualname":"::common::Seed512::0","value":"[u8; 64]","parent":{"krate":0,"index":373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12406,"byte_end":12410,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"name":"iter","qualname":"<Seed512>::iter","value":"pub fn iter(&Self) -> core::slice::Iter<, u8>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the seed.\n","sig":null,"attributes":[{"value":"/ Return an iterator over the seed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12357,"byte_end":12394,"line_start":243,"line_end":243,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13930,"byte_end":13940,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"SplitMix64","qualname":"::splitmix64::SplitMix64","value":"SplitMix64 {  }","parent":null,"children":[{"krate":0,"index":380}],"decl_id":null,"docs":" A splitmix64 random number generator.","sig":null,"attributes":[{"value":"/ A splitmix64 random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13352,"byte_end":13393,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13394,"byte_end":13397,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The splitmix algorithm is not suitable for cryptographic purposes, but is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13398,"byte_end":13475,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ very fast and has a 64 bit state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13476,"byte_end":13513,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13514,"byte_end":13517,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `splitmix64.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13518,"byte_end":13584,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/splitmix64.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13585,"byte_end":13655,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ Sebastiano Vigna. For `next_u32`, a more efficient mixing function taken","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13656,"byte_end":13732,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ from [`dsiutils`](http://dsiutils.di.unimi.it/) is used.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13733,"byte_end":13793,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":13794,"byte_end":13832,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19984,"byte_end":20002,"line_start":24,"line_end":24,"column_start":12,"column_end":30},"name":"Xoshiro128StarStar","qualname":"::xoshiro128starstar::Xoshiro128StarStar","value":"Xoshiro128StarStar {  }","parent":null,"children":[{"krate":0,"index":386}],"decl_id":null,"docs":" A xoshiro128** random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro128** random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19502,"byte_end":19545,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19546,"byte_end":19549,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The xoshiro128** algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19550,"byte_end":19628,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19629,"byte_end":19687,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19688,"byte_end":19691,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro128starstar.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19692,"byte_end":19766,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro128starstar.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19767,"byte_end":19845,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":19846,"byte_end":19886,"line_start":21,"line_end":21,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20555,"byte_end":20559,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro128StarStar>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^64 calls to `next_u32()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^64 calls to `next_u32()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20055,"byte_end":20116,"line_start":29,"line_end":29,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20121,"byte_end":20124,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20129,"byte_end":20199,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20204,"byte_end":20230,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20235,"byte_end":20238,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20243,"byte_end":20250,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20255,"byte_end":20300,"line_start":35,"line_end":35,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoroshiro128StarStar;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20305,"byte_end":20348,"line_start":36,"line_end":36,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20353,"byte_end":20356,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoroshiro128StarStar::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20361,"byte_end":20415,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20420,"byte_end":20452,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20457,"byte_end":20473,"line_start":40,"line_end":40,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20478,"byte_end":20510,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20515,"byte_end":20531,"line_start":42,"line_end":42,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20536,"byte_end":20543,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20936,"byte_end":20945,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoshiro128StarStar>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^96 calls to `next_u32()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^96 calls to `next_u32()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20665,"byte_end":20726,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20731,"byte_end":20734,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^32 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20739,"byte_end":20812,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ `jump()` will generate 2^32 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20817,"byte_end":20890,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20895,"byte_end":20924,"line_start":52,"line_end":52,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23808,"byte_end":23826,"line_start":24,"line_end":24,"column_start":12,"column_end":30},"name":"Xoshiro128PlusPlus","qualname":"::xoshiro128plusplus::Xoshiro128PlusPlus","value":"Xoshiro128PlusPlus {  }","parent":null,"children":[{"krate":0,"index":398}],"decl_id":null,"docs":" A xoshiro128++ random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro128++ random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23326,"byte_end":23369,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23370,"byte_end":23373,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The xoshiro128++ algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23374,"byte_end":23452,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23453,"byte_end":23511,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23512,"byte_end":23515,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro128plusplus.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23516,"byte_end":23590,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro128plusplus.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23591,"byte_end":23669,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23670,"byte_end":23710,"line_start":21,"line_end":21,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24379,"byte_end":24383,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro128PlusPlus>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^64 calls to `next_u32()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^64 calls to `next_u32()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23879,"byte_end":23940,"line_start":29,"line_end":29,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23945,"byte_end":23948,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23953,"byte_end":24023,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24028,"byte_end":24054,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24059,"byte_end":24062,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24067,"byte_end":24074,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24079,"byte_end":24124,"line_start":35,"line_end":35,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoroshiro128PlusPlus;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24129,"byte_end":24172,"line_start":36,"line_end":36,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24177,"byte_end":24180,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoroshiro128PlusPlus::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24185,"byte_end":24239,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24244,"byte_end":24276,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24281,"byte_end":24297,"line_start":40,"line_end":40,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24302,"byte_end":24334,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24339,"byte_end":24355,"line_start":42,"line_end":42,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24360,"byte_end":24367,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24760,"byte_end":24769,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoshiro128PlusPlus>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^96 calls to `next_u32()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^96 calls to `next_u32()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24489,"byte_end":24550,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24555,"byte_end":24558,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^32 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24563,"byte_end":24636,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ `jump()` will generate 2^32 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24641,"byte_end":24714,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24719,"byte_end":24748,"line_start":52,"line_end":52,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27691,"byte_end":27705,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"Xoshiro128Plus","qualname":"::xoshiro128plus::Xoshiro128Plus","value":"Xoshiro128Plus {  }","parent":null,"children":[{"krate":0,"index":410}],"decl_id":null,"docs":" A xoshiro128+ random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro128+ random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27160,"byte_end":27202,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27203,"byte_end":27206,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The xoshiro128+ algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27207,"byte_end":27284,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ is very fast and has good statistical properties, besides a low linear","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27285,"byte_end":27359,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ complexity in the lowest bits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27360,"byte_end":27394,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27395,"byte_end":27398,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro128starstar.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27399,"byte_end":27473,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro128starstar.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27474,"byte_end":27552,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27553,"byte_end":27593,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28254,"byte_end":28258,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro128Plus>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^64 calls to `next_u32()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^64 calls to `next_u32()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27754,"byte_end":27815,"line_start":30,"line_end":30,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27820,"byte_end":27823,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27828,"byte_end":27898,"line_start":32,"line_end":32,"column_start":5,"column_end":75}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27903,"byte_end":27929,"line_start":33,"line_end":33,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27934,"byte_end":27937,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27942,"byte_end":27949,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27954,"byte_end":27999,"line_start":36,"line_end":36,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoroshiro128StarStar;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28004,"byte_end":28047,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28052,"byte_end":28055,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoroshiro128StarStar::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28060,"byte_end":28114,"line_start":39,"line_end":39,"column_start":5,"column_end":59}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28119,"byte_end":28151,"line_start":40,"line_end":40,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28156,"byte_end":28172,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28177,"byte_end":28209,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28214,"byte_end":28230,"line_start":43,"line_end":43,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28235,"byte_end":28242,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":419},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31057,"byte_end":31075,"line_start":24,"line_end":24,"column_start":12,"column_end":30},"name":"Xoshiro256StarStar","qualname":"::xoshiro256starstar::Xoshiro256StarStar","value":"Xoshiro256StarStar {  }","parent":null,"children":[{"krate":0,"index":420}],"decl_id":null,"docs":" A xoshiro256** random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro256** random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":30575,"byte_end":30618,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":30619,"byte_end":30622,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The xoshiro256** algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":30623,"byte_end":30701,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":30702,"byte_end":30760,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":30761,"byte_end":30764,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro256starstar.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":30765,"byte_end":30839,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro256starstar.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":30840,"byte_end":30918,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":30919,"byte_end":30959,"line_start":21,"line_end":21,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31626,"byte_end":31630,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro256StarStar>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^128 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^128 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31128,"byte_end":31190,"line_start":29,"line_end":29,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31195,"byte_end":31198,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^128 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31203,"byte_end":31274,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31279,"byte_end":31305,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31310,"byte_end":31313,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31318,"byte_end":31325,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31330,"byte_end":31375,"line_start":35,"line_end":35,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoshiro256StarStar;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31380,"byte_end":31421,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31426,"byte_end":31429,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoshiro256StarStar::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31434,"byte_end":31486,"line_start":38,"line_end":38,"column_start":5,"column_end":57}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31491,"byte_end":31523,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31528,"byte_end":31544,"line_start":40,"line_end":40,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31549,"byte_end":31581,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31586,"byte_end":31602,"line_start":42,"line_end":42,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31607,"byte_end":31614,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":32074,"byte_end":32083,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoshiro256StarStar>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^192 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^192 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31802,"byte_end":31864,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31869,"byte_end":31872,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31877,"byte_end":31950,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ `jump()` will generate 2^64 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31955,"byte_end":32028,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":32033,"byte_end":32062,"line_start":55,"line_end":55,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":431},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35127,"byte_end":35145,"line_start":24,"line_end":24,"column_start":12,"column_end":30},"name":"Xoshiro256PlusPlus","qualname":"::xoshiro256plusplus::Xoshiro256PlusPlus","value":"Xoshiro256PlusPlus {  }","parent":null,"children":[{"krate":0,"index":432}],"decl_id":null,"docs":" A xoshiro256** random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro256** random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":34645,"byte_end":34688,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":34689,"byte_end":34692,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The xoshiro256** algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":34693,"byte_end":34771,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":34772,"byte_end":34830,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":34831,"byte_end":34834,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro256plusplus.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":34835,"byte_end":34909,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro256plusplus.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":34910,"byte_end":34988,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":34989,"byte_end":35029,"line_start":21,"line_end":21,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35696,"byte_end":35700,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro256PlusPlus>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^128 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^128 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35198,"byte_end":35260,"line_start":29,"line_end":29,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35265,"byte_end":35268,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^128 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35273,"byte_end":35344,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35349,"byte_end":35375,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35380,"byte_end":35383,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35388,"byte_end":35395,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35400,"byte_end":35445,"line_start":35,"line_end":35,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoshiro256PlusPlus;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35450,"byte_end":35491,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35496,"byte_end":35499,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoshiro256PlusPlus::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35504,"byte_end":35556,"line_start":38,"line_end":38,"column_start":5,"column_end":57}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35561,"byte_end":35593,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35598,"byte_end":35614,"line_start":40,"line_end":40,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35619,"byte_end":35651,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35656,"byte_end":35672,"line_start":42,"line_end":42,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35677,"byte_end":35684,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":36144,"byte_end":36153,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoshiro256PlusPlus>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^192 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^192 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35872,"byte_end":35934,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35939,"byte_end":35942,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35947,"byte_end":36020,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ `jump()` will generate 2^64 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":36025,"byte_end":36098,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":36103,"byte_end":36132,"line_start":55,"line_end":55,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39269,"byte_end":39283,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"Xoshiro256Plus","qualname":"::xoshiro256plus::Xoshiro256Plus","value":"Xoshiro256Plus {  }","parent":null,"children":[{"krate":0,"index":444}],"decl_id":null,"docs":" A xoshiro256+ random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro256+ random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":38746,"byte_end":38788,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":38789,"byte_end":38792,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The xoshiro256+ algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":38793,"byte_end":38870,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ is very fast and has good statistical properties, besides a low linear","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":38871,"byte_end":38945,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ complexity in the lowest bits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":38946,"byte_end":38980,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":38981,"byte_end":38984,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro256plus.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":38985,"byte_end":39055,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro256plus.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39056,"byte_end":39130,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39131,"byte_end":39171,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39822,"byte_end":39826,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro256Plus>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^128 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^128 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39332,"byte_end":39394,"line_start":30,"line_end":30,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39399,"byte_end":39402,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^128 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39407,"byte_end":39478,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39483,"byte_end":39509,"line_start":33,"line_end":33,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39514,"byte_end":39517,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39522,"byte_end":39529,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39534,"byte_end":39579,"line_start":36,"line_end":36,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoshiro256Plus;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39584,"byte_end":39621,"line_start":37,"line_end":37,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39626,"byte_end":39629,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoshiro256Plus::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39634,"byte_end":39682,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39687,"byte_end":39719,"line_start":40,"line_end":40,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39724,"byte_end":39740,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39745,"byte_end":39777,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39782,"byte_end":39798,"line_start":43,"line_end":43,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39803,"byte_end":39810,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":40270,"byte_end":40279,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoshiro256Plus>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^192 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^192 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39998,"byte_end":40060,"line_start":52,"line_end":52,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":40065,"byte_end":40068,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":40073,"byte_end":40146,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ `jump()` will generate 2^64 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":40151,"byte_end":40224,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":40229,"byte_end":40258,"line_start":56,"line_end":56,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":455},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43433,"byte_end":43451,"line_start":26,"line_end":26,"column_start":12,"column_end":30},"name":"Xoshiro512StarStar","qualname":"::xoshiro512starstar::Xoshiro512StarStar","value":"Xoshiro512StarStar {  }","parent":null,"children":[{"krate":0,"index":456}],"decl_id":null,"docs":" A xoshiro512** random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro512** random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":42951,"byte_end":42994,"line_start":16,"line_end":16,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":42995,"byte_end":42998,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The xoshiro512** algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":42999,"byte_end":43077,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43078,"byte_end":43136,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43137,"byte_end":43140,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro512starstar.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43141,"byte_end":43215,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro512starstar.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43216,"byte_end":43294,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43295,"byte_end":43335,"line_start":23,"line_end":23,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44002,"byte_end":44006,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro512StarStar>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^256 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^256 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43504,"byte_end":43566,"line_start":31,"line_end":31,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43571,"byte_end":43574,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^256 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43579,"byte_end":43650,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43655,"byte_end":43681,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43686,"byte_end":43689,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43694,"byte_end":43701,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43706,"byte_end":43751,"line_start":37,"line_end":37,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoshiro512StarStar;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43756,"byte_end":43797,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43802,"byte_end":43805,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoshiro512StarStar::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43810,"byte_end":43862,"line_start":40,"line_end":40,"column_start":5,"column_end":57}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43867,"byte_end":43899,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43904,"byte_end":43920,"line_start":42,"line_end":42,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43925,"byte_end":43957,"line_start":43,"line_end":43,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43962,"byte_end":43978,"line_start":44,"line_end":44,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43983,"byte_end":43990,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44544,"byte_end":44553,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoshiro512StarStar>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^384 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^384 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44270,"byte_end":44332,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44337,"byte_end":44340,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^128 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44345,"byte_end":44419,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ `jump()` will generate 2^128 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44424,"byte_end":44498,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44503,"byte_end":44532,"line_start":58,"line_end":58,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47815,"byte_end":47833,"line_start":26,"line_end":26,"column_start":12,"column_end":30},"name":"Xoshiro512PlusPlus","qualname":"::xoshiro512plusplus::Xoshiro512PlusPlus","value":"Xoshiro512PlusPlus {  }","parent":null,"children":[{"krate":0,"index":470}],"decl_id":null,"docs":" A xoshiro512++ random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro512++ random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47333,"byte_end":47376,"line_start":16,"line_end":16,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47377,"byte_end":47380,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The xoshiro512++ algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47381,"byte_end":47459,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47460,"byte_end":47518,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47519,"byte_end":47522,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro512plusplus.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47523,"byte_end":47597,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro512plusplus.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47598,"byte_end":47676,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47677,"byte_end":47717,"line_start":23,"line_end":23,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48384,"byte_end":48388,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro512PlusPlus>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^256 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^256 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47886,"byte_end":47948,"line_start":31,"line_end":31,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47953,"byte_end":47956,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^256 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47961,"byte_end":48032,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48037,"byte_end":48063,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48068,"byte_end":48071,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48076,"byte_end":48083,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48088,"byte_end":48133,"line_start":37,"line_end":37,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoshiro512PlusPlus;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48138,"byte_end":48179,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48184,"byte_end":48187,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoshiro512PlusPlus::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48192,"byte_end":48244,"line_start":40,"line_end":40,"column_start":5,"column_end":57}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48249,"byte_end":48281,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48286,"byte_end":48302,"line_start":42,"line_end":42,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48307,"byte_end":48339,"line_start":43,"line_end":43,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48344,"byte_end":48360,"line_start":44,"line_end":44,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48365,"byte_end":48372,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48926,"byte_end":48935,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoshiro512PlusPlus>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^384 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^384 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48652,"byte_end":48714,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48719,"byte_end":48722,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^128 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48727,"byte_end":48801,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ `jump()` will generate 2^128 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48806,"byte_end":48880,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":48885,"byte_end":48914,"line_start":58,"line_end":58,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":483},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52285,"byte_end":52299,"line_start":27,"line_end":27,"column_start":12,"column_end":26},"name":"Xoshiro512Plus","qualname":"::xoshiro512plus::Xoshiro512Plus","value":"Xoshiro512Plus {  }","parent":null,"children":[{"krate":0,"index":484}],"decl_id":null,"docs":" A xoshiro512+ random number generator.","sig":null,"attributes":[{"value":"/ A xoshiro512+ random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":51762,"byte_end":51804,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":51805,"byte_end":51808,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The xoshiro512+ algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":51809,"byte_end":51886,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ is very fast and has good statistical properties, besides a low linear","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":51887,"byte_end":51961,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ complexity in the lowest bits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":51962,"byte_end":51996,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":51997,"byte_end":52000,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoshiro512plus.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52001,"byte_end":52071,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoshiro512plus.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52072,"byte_end":52146,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52147,"byte_end":52187,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52838,"byte_end":52842,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoshiro512Plus>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^256 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^256 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52348,"byte_end":52410,"line_start":32,"line_end":32,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52415,"byte_end":52418,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^256 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52423,"byte_end":52494,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52499,"byte_end":52525,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52530,"byte_end":52533,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52538,"byte_end":52545,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52550,"byte_end":52595,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoshiro512Plus;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52600,"byte_end":52637,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52642,"byte_end":52645,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoshiro512Plus::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52650,"byte_end":52698,"line_start":41,"line_end":41,"column_start":5,"column_end":53}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52703,"byte_end":52735,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52740,"byte_end":52756,"line_start":43,"line_end":43,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52761,"byte_end":52793,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52798,"byte_end":52814,"line_start":45,"line_end":45,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52819,"byte_end":52826,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":53380,"byte_end":53389,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoshiro512Plus>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^384 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^384 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":53106,"byte_end":53168,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":53173,"byte_end":53176,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^128 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":53181,"byte_end":53255,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ `jump()` will generate 2^128 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":53260,"byte_end":53334,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":53339,"byte_end":53368,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":497},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56688,"byte_end":56704,"line_start":27,"line_end":27,"column_start":12,"column_end":28},"name":"Xoroshiro128Plus","qualname":"::xoroshiro128plus::Xoroshiro128Plus","value":"Xoroshiro128Plus {  }","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" A xoroshiro128+ random number generator.","sig":null,"attributes":[{"value":"/ A xoroshiro128+ random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56118,"byte_end":56162,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56163,"byte_end":56166,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The xoroshiro128+ algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56167,"byte_end":56246,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ is very fast and has good statistical properties, besides a low linear","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56247,"byte_end":56321,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ complexity in the lowest bits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56322,"byte_end":56356,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56357,"byte_end":56360,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoroshiro128plus.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56361,"byte_end":56433,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoroshiro128plus.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56434,"byte_end":56510,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56511,"byte_end":56551,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56552,"byte_end":56590,"line_start":24,"line_end":24,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57256,"byte_end":57260,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoroshiro128Plus>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^64 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^64 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56764,"byte_end":56825,"line_start":33,"line_end":33,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56830,"byte_end":56833,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56838,"byte_end":56908,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56913,"byte_end":56939,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56944,"byte_end":56947,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56952,"byte_end":56959,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56964,"byte_end":57009,"line_start":39,"line_end":39,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoroshiro128Plus;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57014,"byte_end":57053,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57058,"byte_end":57061,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoroshiro128Plus::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57066,"byte_end":57116,"line_start":42,"line_end":42,"column_start":5,"column_end":55}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57121,"byte_end":57153,"line_start":43,"line_end":43,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57158,"byte_end":57174,"line_start":44,"line_end":44,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57179,"byte_end":57211,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57216,"byte_end":57232,"line_start":46,"line_end":46,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57237,"byte_end":57244,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57629,"byte_end":57638,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoroshiro128Plus>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^96 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^96 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57358,"byte_end":57419,"line_start":52,"line_end":52,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57424,"byte_end":57427,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^32 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57432,"byte_end":57505,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ `jump()` will generate 2^32 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57510,"byte_end":57583,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57588,"byte_end":57617,"line_start":56,"line_end":56,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60727,"byte_end":60747,"line_start":26,"line_end":26,"column_start":12,"column_end":32},"name":"Xoroshiro128PlusPlus","qualname":"::xoroshiro128plusplus::Xoroshiro128PlusPlus","value":"Xoroshiro128PlusPlus {  }","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"decl_id":null,"docs":" A xoroshiro128++ random number generator.","sig":null,"attributes":[{"value":"/ A xoroshiro128++ random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60198,"byte_end":60243,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60244,"byte_end":60247,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The xoroshiro128++ algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60248,"byte_end":60328,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60329,"byte_end":60387,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60388,"byte_end":60391,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoroshiro128plusplus.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60392,"byte_end":60468,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoroshiro128plusplus.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60469,"byte_end":60549,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60550,"byte_end":60590,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60591,"byte_end":60629,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61311,"byte_end":61315,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoroshiro128PlusPlus>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^64 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^64 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60811,"byte_end":60872,"line_start":32,"line_end":32,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60877,"byte_end":60880,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60885,"byte_end":60955,"line_start":34,"line_end":34,"column_start":5,"column_end":75}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60960,"byte_end":60986,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60991,"byte_end":60994,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60999,"byte_end":61006,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61011,"byte_end":61056,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoroshiro128PlusPlus;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61061,"byte_end":61104,"line_start":39,"line_end":39,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61109,"byte_end":61112,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoroshiro128PlusPlus::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61117,"byte_end":61171,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61176,"byte_end":61208,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61213,"byte_end":61229,"line_start":43,"line_end":43,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61234,"byte_end":61266,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61271,"byte_end":61287,"line_start":45,"line_end":45,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61292,"byte_end":61299,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61684,"byte_end":61693,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoroshiro128PlusPlus>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^96 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^96 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61413,"byte_end":61474,"line_start":51,"line_end":51,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61479,"byte_end":61482,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^32 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61487,"byte_end":61560,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ `jump()` will generate 2^32 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61565,"byte_end":61638,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61643,"byte_end":61672,"line_start":55,"line_end":55,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64727,"byte_end":64747,"line_start":26,"line_end":26,"column_start":12,"column_end":32},"name":"Xoroshiro128StarStar","qualname":"::xoroshiro128starstar::Xoroshiro128StarStar","value":"Xoroshiro128StarStar {  }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"decl_id":null,"docs":" A xoroshiro128** random number generator.","sig":null,"attributes":[{"value":"/ A xoroshiro128** random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64198,"byte_end":64243,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64244,"byte_end":64247,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The xoroshiro128** algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64248,"byte_end":64328,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64329,"byte_end":64387,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64388,"byte_end":64391,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoroshiro128starstar.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64392,"byte_end":64468,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoroshiro128starstar.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64469,"byte_end":64549,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64550,"byte_end":64590,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64591,"byte_end":64629,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65311,"byte_end":65315,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"jump","qualname":"<Xoroshiro128StarStar>::jump","value":"pub fn jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^64 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^64 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64811,"byte_end":64872,"line_start":32,"line_end":32,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64877,"byte_end":64880,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^64 non-overlapping subsequences for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64885,"byte_end":64955,"line_start":34,"line_end":34,"column_start":5,"column_end":75}},{"value":"/ parallel computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64960,"byte_end":64986,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64991,"byte_end":64994,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64999,"byte_end":65006,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use rand_xoshiro::rand_core::SeedableRng;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65011,"byte_end":65056,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ use rand_xoshiro::Xoroshiro128StarStar;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65061,"byte_end":65104,"line_start":39,"line_end":39,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65109,"byte_end":65112,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let rng1 = Xoroshiro128StarStar::seed_from_u64(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65117,"byte_end":65171,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"/ let mut rng2 = rng1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65176,"byte_end":65208,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/ rng2.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65213,"byte_end":65229,"line_start":43,"line_end":43,"column_start":5,"column_end":21}},{"value":"/ let mut rng3 = rng2.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65234,"byte_end":65266,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ rng3.jump();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65271,"byte_end":65287,"line_start":45,"line_end":45,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65292,"byte_end":65299,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65684,"byte_end":65693,"line_start":56,"line_end":56,"column_start":12,"column_end":21},"name":"long_jump","qualname":"<Xoroshiro128StarStar>::long_jump","value":"pub fn long_jump(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Jump forward, equivalently to 2^96 calls to `next_u64()`.","sig":null,"attributes":[{"value":"/ Jump forward, equivalently to 2^96 calls to `next_u64()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65413,"byte_end":65474,"line_start":51,"line_end":51,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65479,"byte_end":65482,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This can be used to generate 2^32 starting points, from each of which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65487,"byte_end":65560,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ `jump()` will generate 2^32 non-overlapping subsequences for parallel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65565,"byte_end":65638,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ distributed computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65643,"byte_end":65672,"line_start":55,"line_end":55,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":533},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68712,"byte_end":68731,"line_start":26,"line_end":26,"column_start":12,"column_end":31},"name":"Xoroshiro64StarStar","qualname":"::xoroshiro64starstar::Xoroshiro64StarStar","value":"Xoroshiro64StarStar {  }","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535}],"decl_id":null,"docs":" A xoroshiro64** random number generator.","sig":null,"attributes":[{"value":"/ A xoroshiro64** random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68189,"byte_end":68233,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68234,"byte_end":68237,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The xoshiro64** algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68238,"byte_end":68315,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ is very fast and has excellent statistical properties.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68316,"byte_end":68374,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68375,"byte_end":68378,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoroshiro64starstar.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68379,"byte_end":68454,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoroshiro64starstar.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68455,"byte_end":68534,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68535,"byte_end":68575,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68576,"byte_end":68614,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":541},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71738,"byte_end":71753,"line_start":27,"line_end":27,"column_start":12,"column_end":27},"name":"Xoroshiro64Star","qualname":"::xoroshiro64star::Xoroshiro64Star","value":"Xoroshiro64Star {  }","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543}],"decl_id":null,"docs":" A xoroshiro64* random number generator.","sig":null,"attributes":[{"value":"/ A xoroshiro64* random number generator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71172,"byte_end":71215,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71216,"byte_end":71219,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The xoroshiro64* algorithm is not suitable for cryptographic purposes, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71220,"byte_end":71298,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ is very fast and has good statistical properties, besides a low linear","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71299,"byte_end":71373,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ complexity in the lowest bits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71374,"byte_end":71408,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71409,"byte_end":71412,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The algorithm used here is translated from [the `xoroshiro64star.c`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71413,"byte_end":71484,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ reference source code](http://xoshiro.di.unimi.it/xoroshiro64star.c) by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71485,"byte_end":71560,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ David Blackman and Sebastiano Vigna.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71561,"byte_end":71601,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71602,"byte_end":71640,"line_start":24,"line_end":24,"column_start":1,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12343,"byte_end":12350,"line_start":242,"line_end":242,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12502,"byte_end":12509,"line_start":249,"line_end":249,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12635,"byte_end":12642,"line_start":255,"line_end":255,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12730,"byte_end":12737,"line_start":261,"line_end":261,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":14013,"byte_end":14023,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":15066,"byte_end":15076,"line_start":67,"line_end":67,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20030,"byte_end":20048,"line_start":28,"line_end":28,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":21070,"byte_end":21088,"line_start":58,"line_end":58,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":21648,"byte_end":21666,"line_start":77,"line_end":77,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23854,"byte_end":23872,"line_start":28,"line_end":28,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24894,"byte_end":24912,"line_start":58,"line_end":58,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":25472,"byte_end":25490,"line_start":77,"line_end":77,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27733,"byte_end":27747,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28383,"byte_end":28397,"line_start":50,"line_end":50,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28937,"byte_end":28951,"line_start":69,"line_end":69,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31103,"byte_end":31121,"line_start":28,"line_end":28,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":32274,"byte_end":32292,"line_start":64,"line_end":64,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":32852,"byte_end":32870,"line_start":83,"line_end":83,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35173,"byte_end":35191,"line_start":28,"line_end":28,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":36344,"byte_end":36362,"line_start":64,"line_end":64,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":36922,"byte_end":36940,"line_start":83,"line_end":83,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39311,"byte_end":39325,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":40470,"byte_end":40484,"line_start":65,"line_end":65,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":41024,"byte_end":41038,"line_start":84,"line_end":84,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43479,"byte_end":43497,"line_start":30,"line_end":30,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44837,"byte_end":44855,"line_start":69,"line_end":69,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":45415,"byte_end":45433,"line_start":88,"line_end":88,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47861,"byte_end":47879,"line_start":30,"line_end":30,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":49219,"byte_end":49237,"line_start":69,"line_end":69,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":49797,"byte_end":49815,"line_start":88,"line_end":88,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52327,"byte_end":52341,"line_start":31,"line_end":31,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":53672,"byte_end":53686,"line_start":69,"line_end":69,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":54226,"byte_end":54240,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56741,"byte_end":56757,"line_start":32,"line_end":32,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57751,"byte_end":57767,"line_start":62,"line_end":62,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":58406,"byte_end":58422,"line_start":89,"line_end":89,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60784,"byte_end":60804,"line_start":31,"line_end":31,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61806,"byte_end":61826,"line_start":61,"line_end":61,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":62365,"byte_end":62385,"line_start":86,"line_end":86,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64784,"byte_end":64804,"line_start":31,"line_end":31,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65806,"byte_end":65826,"line_start":61,"line_end":61,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":66343,"byte_end":66363,"line_start":86,"line_end":86,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68780,"byte_end":68799,"line_start":31,"line_end":31,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":69316,"byte_end":69335,"line_start":56,"line_end":56,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71802,"byte_end":71817,"line_start":32,"line_end":32,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":72344,"byte_end":72359,"line_start":57,"line_end":57,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12343,"byte_end":12350,"line_start":242,"line_end":242,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12502,"byte_end":12509,"line_start":249,"line_end":249,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":373},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12635,"byte_end":12642,"line_start":255,"line_end":255,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":373},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/common.rs","byte_start":12730,"byte_end":12737,"line_start":261,"line_end":261,"column_start":22,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":373},"to":{"krate":1,"index":1991}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":14013,"byte_end":14023,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":379},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/splitmix64.rs","byte_start":15066,"byte_end":15076,"line_start":67,"line_end":67,"column_start":22,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":379},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":20030,"byte_end":20048,"line_start":28,"line_end":28,"column_start":6,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":21070,"byte_end":21088,"line_start":58,"line_end":58,"column_start":22,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":385},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128starstar.rs","byte_start":21648,"byte_end":21666,"line_start":77,"line_end":77,"column_start":18,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":385},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":23854,"byte_end":23872,"line_start":28,"line_end":28,"column_start":6,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":24894,"byte_end":24912,"line_start":58,"line_end":58,"column_start":22,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":397},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plusplus.rs","byte_start":25472,"byte_end":25490,"line_start":77,"line_end":77,"column_start":18,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":397},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":27733,"byte_end":27747,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28383,"byte_end":28397,"line_start":50,"line_end":50,"column_start":22,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":409},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro128plus.rs","byte_start":28937,"byte_end":28951,"line_start":69,"line_end":69,"column_start":18,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":409},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":31103,"byte_end":31121,"line_start":28,"line_end":28,"column_start":6,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":32274,"byte_end":32292,"line_start":64,"line_end":64,"column_start":22,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":419},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256starstar.rs","byte_start":32852,"byte_end":32870,"line_start":83,"line_end":83,"column_start":18,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":419},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":35173,"byte_end":35191,"line_start":28,"line_end":28,"column_start":6,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":36344,"byte_end":36362,"line_start":64,"line_end":64,"column_start":22,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":431},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plusplus.rs","byte_start":36922,"byte_end":36940,"line_start":83,"line_end":83,"column_start":18,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":431},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":39311,"byte_end":39325,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":40470,"byte_end":40484,"line_start":65,"line_end":65,"column_start":22,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":443},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro256plus.rs","byte_start":41024,"byte_end":41038,"line_start":84,"line_end":84,"column_start":18,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":443},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":43479,"byte_end":43497,"line_start":30,"line_end":30,"column_start":6,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":44837,"byte_end":44855,"line_start":69,"line_end":69,"column_start":22,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":455},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512starstar.rs","byte_start":45415,"byte_end":45433,"line_start":88,"line_end":88,"column_start":18,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":455},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":47861,"byte_end":47879,"line_start":30,"line_end":30,"column_start":6,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":49219,"byte_end":49237,"line_start":69,"line_end":69,"column_start":22,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":469},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plusplus.rs","byte_start":49797,"byte_end":49815,"line_start":88,"line_end":88,"column_start":18,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":469},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":52327,"byte_end":52341,"line_start":31,"line_end":31,"column_start":6,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":53672,"byte_end":53686,"line_start":69,"line_end":69,"column_start":22,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":483},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoshiro512plus.rs","byte_start":54226,"byte_end":54240,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":483},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":56741,"byte_end":56757,"line_start":32,"line_end":32,"column_start":6,"column_end":22},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":57751,"byte_end":57767,"line_start":62,"line_end":62,"column_start":18,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":497},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plus.rs","byte_start":58406,"byte_end":58422,"line_start":89,"line_end":89,"column_start":22,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":497},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":60784,"byte_end":60804,"line_start":31,"line_end":31,"column_start":6,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":61806,"byte_end":61826,"line_start":61,"line_end":61,"column_start":18,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":509},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128plusplus.rs","byte_start":62365,"byte_end":62385,"line_start":86,"line_end":86,"column_start":22,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":509},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":64784,"byte_end":64804,"line_start":31,"line_end":31,"column_start":6,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":65806,"byte_end":65826,"line_start":61,"line_end":61,"column_start":18,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":521},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro128starstar.rs","byte_start":66343,"byte_end":66363,"line_start":86,"line_end":86,"column_start":22,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":521},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":68780,"byte_end":68799,"line_start":31,"line_end":31,"column_start":18,"column_end":37},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":533},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64starstar.rs","byte_start":69316,"byte_end":69335,"line_start":56,"line_end":56,"column_start":22,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":533},"to":{"krate":4,"index":120}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":71802,"byte_end":71817,"line_start":32,"line_end":32,"column_start":18,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":541},"to":{"krate":4,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_xoshiro-0.4.0/src/xoroshiro64star.rs","byte_start":72344,"byte_end":72359,"line_start":57,"line_end":57,"column_start":22,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":541},"to":{"krate":4,"index":120}}]}