{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14","program":"/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a4a905a868382e46","-C","extra-filename=-a4a905a868382e46","--out-dir","/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","-L","dependency=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","--extern","futures_core=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libfutures_core-be617ae354712a4f.rmeta","--extern","futures_task=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libfutures_task-74df417a1cbf22fd.rmeta","--extern","pin_project_lite=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libpin_project_lite-42d82ba4e3590262.rmeta","--extern","pin_utils=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libpin_utils-ce7ed2cea79f2964.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libfutures_util-a4a905a868382e46.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[4137588937969732629,13782265758647835260]},"crate_root":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src","external_crates":[{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[15238721404711228036,17007472593199546307]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","num":19,"id":{"name":"pin_utils","disambiguator":[13444118050061961394,15792921254750249749]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","num":20,"id":{"name":"futures_task","disambiguator":[8533125691320333312,12630430003848695475]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","num":21,"id":{"name":"pin_project_lite","disambiguator":[6242653208481502721,5903162098939332941]}}],"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":0,"byte_end":12445,"line_start":1,"line_end":349,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":1485,"byte_end":1490,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":7},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":1511,"byte_end":1518,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":9578},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12914,"byte_end":12920,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13039,"byte_end":13050,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13052,"byte_end":13061,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":20,"index":89},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13087,"byte_end":13096,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":20,"index":55},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13098,"byte_end":13112,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13114,"byte_end":13129,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2828},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13244,"byte_end":13251,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2742},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13253,"byte_end":13257,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13259,"byte_end":13268,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3171},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13270,"byte_end":13277,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2986},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13279,"byte_end":13289,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2926},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13291,"byte_end":13294,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3231},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13296,"byte_end":13306,"line_start":24,"line_end":24,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3098},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13308,"byte_end":13312,"line_start":24,"line_end":24,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3279},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13314,"byte_end":13323,"line_start":24,"line_end":24,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3036},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13325,"byte_end":13332,"line_start":24,"line_end":24,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":2876},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13428,"byte_end":13441,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3630},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13771,"byte_end":13778,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3777},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13780,"byte_end":13787,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3838},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13789,"byte_end":13795,"line_start":43,"line_end":43,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3960},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13797,"byte_end":13807,"line_start":43,"line_end":43,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3899},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13809,"byte_end":13818,"line_start":43,"line_end":43,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3330},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13820,"byte_end":13830,"line_start":43,"line_end":43,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4082},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13832,"byte_end":13838,"line_start":43,"line_end":43,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4021},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13840,"byte_end":13845,"line_start":43,"line_end":43,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3704},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13847,"byte_end":13853,"line_start":43,"line_end":43,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3579},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13855,"byte_end":13871,"line_start":43,"line_end":43,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13877,"byte_end":13889,"line_start":44,"line_end":44,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4217},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13891,"byte_end":13903,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4144},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13905,"byte_end":13916,"line_start":44,"line_end":44,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":3458},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":13918,"byte_end":13928,"line_start":44,"line_end":44,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14100,"byte_end":14104,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4275},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14106,"byte_end":14110,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":350},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14151,"byte_end":14158,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4281},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14160,"byte_end":14167,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14214,"byte_end":14224,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4287},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14226,"byte_end":14235,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14290,"byte_end":14304,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4300},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14306,"byte_end":14318,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4318},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14356,"byte_end":14368,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14408,"byte_end":14415,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":451},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14417,"byte_end":14423,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14460,"byte_end":14463,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14465,"byte_end":14467,"line_start":72,"line_end":72,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":491},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14469,"byte_end":14474,"line_start":72,"line_end":72,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4352},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14476,"byte_end":14481,"line_start":72,"line_end":72,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":519},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14516,"byte_end":14520,"line_start":75,"line_end":75,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":522},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14522,"byte_end":14527,"line_start":75,"line_end":75,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14529,"byte_end":14534,"line_start":75,"line_end":75,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14536,"byte_end":14541,"line_start":75,"line_end":75,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4454},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14543,"byte_end":14547,"line_start":75,"line_end":75,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4499},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14549,"byte_end":14554,"line_start":75,"line_end":75,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4556},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14556,"byte_end":14561,"line_start":75,"line_end":75,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4625},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14563,"byte_end":14568,"line_start":75,"line_end":75,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14719,"byte_end":14725,"line_start":83,"line_end":83,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4706},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14727,"byte_end":14733,"line_start":83,"line_end":83,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14901,"byte_end":14909,"line_start":92,"line_end":92,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":594},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14911,"byte_end":14920,"line_start":92,"line_end":92,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":598},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14922,"byte_end":14931,"line_start":92,"line_end":92,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":603},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14933,"byte_end":14942,"line_start":92,"line_end":92,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4784},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14944,"byte_end":14951,"line_start":92,"line_end":92,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4829},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14953,"byte_end":14961,"line_start":92,"line_end":92,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4886},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14963,"byte_end":14971,"line_start":92,"line_end":92,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":4955},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":14973,"byte_end":14981,"line_start":92,"line_end":92,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":15157,"byte_end":15167,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":5036},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":15169,"byte_end":15178,"line_start":101,"line_end":101,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":0,"index":5044},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":15332,"byte_end":15338,"line_start":109,"line_end":109,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":11}},{"kind":"Use","ref_id":{"krate":1,"index":9578},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11632,"byte_end":11638,"line_start":312,"line_end":312,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11640,"byte_end":11649,"line_start":312,"line_end":312,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11651,"byte_end":11660,"line_start":312,"line_end":312,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11662,"byte_end":11674,"line_start":312,"line_end":312,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116708,"byte_end":116719,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116721,"byte_end":116727,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116729,"byte_end":116738,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5068},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116854,"byte_end":116859,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5117},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116861,"byte_end":116868,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5226},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116870,"byte_end":116876,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116878,"byte_end":116883,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116885,"byte_end":116894,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5345},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116896,"byte_end":116902,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5410},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116904,"byte_end":116913,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5877},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116915,"byte_end":116922,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5526},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116924,"byte_end":116931,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5579},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116933,"byte_end":116937,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5648},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116939,"byte_end":116946,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5710},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116952,"byte_end":116956,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5758},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116958,"byte_end":116965,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5824},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116967,"byte_end":116970,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5956},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116972,"byte_end":116976,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6057},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116978,"byte_end":116984,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6106},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116986,"byte_end":116994,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6016},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116996,"byte_end":117000,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5977},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117002,"byte_end":117010,"line_start":22,"line_end":22,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6556},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117012,"byte_end":117016,"line_start":22,"line_end":22,"column_start":65,"column_end":69},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5964},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117018,"byte_end":117032,"line_start":22,"line_end":22,"column_start":71,"column_end":85},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6160},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117034,"byte_end":117038,"line_start":22,"line_end":22,"column_start":87,"column_end":91},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6199},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117040,"byte_end":117049,"line_start":22,"line_end":22,"column_start":93,"column_end":102},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117051,"byte_end":117060,"line_start":22,"line_end":22,"column_start":104,"column_end":113},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5749},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117066,"byte_end":117078,"line_start":23,"line_end":23,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6273},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117080,"byte_end":117084,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6381},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117086,"byte_end":117095,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6312},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117097,"byte_end":117106,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6438},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117108,"byte_end":117112,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":5168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117114,"byte_end":117119,"line_start":23,"line_end":23,"column_start":53,"column_end":58},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6506},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117121,"byte_end":117124,"line_start":23,"line_end":23,"column_start":60,"column_end":63},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2014},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117879,"byte_end":117889,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6625},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117891,"byte_end":117898,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6689},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117900,"byte_end":117907,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6827},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117909,"byte_end":117919,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6758},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117921,"byte_end":117930,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6898},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117932,"byte_end":117942,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7005},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117944,"byte_end":117950,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":6936},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117952,"byte_end":117957,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7071},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117959,"byte_end":117965,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7374},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117971,"byte_end":117981,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7421},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117983,"byte_end":117992,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7197},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":117994,"byte_end":118003,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7262},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118005,"byte_end":118017,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7328},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118019,"byte_end":118029,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7456},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118031,"byte_end":118038,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7140},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118040,"byte_end":118050,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7132},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118052,"byte_end":118059,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7582},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118065,"byte_end":118077,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2108},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118079,"byte_end":118091,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7651},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118093,"byte_end":118105,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7525},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118107,"byte_end":118116,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2185},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118499,"byte_end":118503,"line_start":68,"line_end":68,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7720},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118505,"byte_end":118509,"line_start":68,"line_end":68,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2204},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118548,"byte_end":118554,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7729},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118556,"byte_end":118562,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118611,"byte_end":118622,"line_start":74,"line_end":74,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7738},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118624,"byte_end":118634,"line_start":74,"line_end":74,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118671,"byte_end":118676,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7747},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118678,"byte_end":118683,"line_start":77,"line_end":77,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2287},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118718,"byte_end":118722,"line_start":80,"line_end":80,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7758},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118724,"byte_end":118728,"line_start":80,"line_end":80,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2313},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118769,"byte_end":118776,"line_start":83,"line_end":83,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7789},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118778,"byte_end":118785,"line_start":83,"line_end":83,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2347},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118826,"byte_end":118833,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2339},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118835,"byte_end":118841,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2371},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118880,"byte_end":118886,"line_start":89,"line_end":89,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7802},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118888,"byte_end":118894,"line_start":89,"line_end":89,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":2410},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118933,"byte_end":118939,"line_start":92,"line_end":92,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":0,"index":7848},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":118941,"byte_end":118947,"line_start":92,"line_end":92,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":699}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11733,"byte_end":11739,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11741,"byte_end":11750,"line_start":316,"line_end":316,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11752,"byte_end":11761,"line_start":316,"line_end":316,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2108},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11763,"byte_end":11775,"line_start":316,"line_end":316,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":9753},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331504,"byte_end":331511,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":1,"index":37301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331513,"byte_end":331517,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":1,"index":9763},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331519,"byte_end":331524,"line_start":14,"line_end":14,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":1,"index":37341},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331526,"byte_end":331534,"line_start":14,"line_end":14,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":1,"index":37350},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331536,"byte_end":331550,"line_start":14,"line_end":14,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":20,"index":10},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331582,"byte_end":331587,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":20,"index":13},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331589,"byte_end":331599,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":20,"index":16},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331601,"byte_end":331611,"line_start":17,"line_end":17,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":20,"index":89},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331617,"byte_end":331626,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":20,"index":55},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331628,"byte_end":331642,"line_start":18,"line_end":18,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331644,"byte_end":331659,"line_start":18,"line_end":18,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":20,"index":151},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331687,"byte_end":331697,"line_start":21,"line_end":21,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":4,"index":142},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":332041,"byte_end":332052,"line_start":35,"line_end":35,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":0,"index":2467},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":332090,"byte_end":332098,"line_start":39,"line_end":39,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2444}},{"kind":"Use","ref_id":{"krate":0,"index":2468},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":332100,"byte_end":332113,"line_start":39,"line_end":39,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2444}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":0,"byte_end":12445,"line_start":1,"line_end":349,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":11},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2682}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":384,"byte_end":390,"line_start":7,"line_end":7,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":393,"byte_end":499,"line_start":8,"line_end":13,"column_start":1,"column_end":3}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":667,"byte_end":688,"line_start":16,"line_end":16,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":690},{"krate":0,"index":691}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12447,"byte_end":12471,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12472,"byte_end":12475,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12476,"byte_end":12501,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12502,"byte_end":12505,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12506,"byte_end":12533,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12534,"byte_end":12613,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12614,"byte_end":12651,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12652,"byte_end":12731,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12732,"byte_end":12807,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/mod.rs","byte_start":12808,"byte_end":12872,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":2697},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36062,"byte_end":36067,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":2694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2699},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36096,"byte_end":36102,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":2694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2701},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36131,"byte_end":36136,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":2694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2694},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36032,"byte_end":36039,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2699},{"krate":0,"index":2701}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2742},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40571,"byte_end":40575,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":2744}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42394,"byte_end":42404,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40772,"byte_end":40840,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40845,"byte_end":40848,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40853,"byte_end":40921,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40926,"byte_end":40971,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40976,"byte_end":40979,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40984,"byte_end":40998,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41003,"byte_end":41006,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41011,"byte_end":41018,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41023,"byte_end":41064,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41069,"byte_end":41100,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41105,"byte_end":41161,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41166,"byte_end":41190,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41195,"byte_end":41230,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41235,"byte_end":41260,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41265,"byte_end":41268,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41273,"byte_end":41322,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41327,"byte_end":41330,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41335,"byte_end":41377,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41382,"byte_end":41421,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41426,"byte_end":41465,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41470,"byte_end":41487,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41492,"byte_end":41495,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41500,"byte_end":41570,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41575,"byte_end":41614,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41619,"byte_end":41660,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41665,"byte_end":41691,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41696,"byte_end":41699,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41704,"byte_end":41714,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41719,"byte_end":41736,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41741,"byte_end":41775,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41780,"byte_end":41827,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41832,"byte_end":41881,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41886,"byte_end":41948,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41953,"byte_end":41977,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":41982,"byte_end":42025,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42030,"byte_end":42087,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42092,"byte_end":42167,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42172,"byte_end":42202,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42207,"byte_end":42224,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42229,"byte_end":42243,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42248,"byte_end":42332,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42337,"byte_end":42346,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42351,"byte_end":42356,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42361,"byte_end":42370,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42375,"byte_end":42382,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":2780},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":43463,"byte_end":43473,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2783},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":43557,"byte_end":43565,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2777},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":43441,"byte_end":43444,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2783}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7272084,"byte_end":7272093,"line_start":542,"line_end":542,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2828},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":16488,"byte_end":16495,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":2830}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2876},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":16746,"byte_end":16759,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2878}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2926},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":17099,"byte_end":17102,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2929}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2986},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":17309,"byte_end":17319,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":2988}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3036},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":17525,"byte_end":17532,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":3039}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3098},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":17725,"byte_end":17729,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3102}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3171},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":17974,"byte_end":17981,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3174}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3231},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":18222,"byte_end":18232,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3233}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3279},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":18445,"byte_end":18454,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3281}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":124},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19436,"byte_end":19445,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19337,"byte_end":19411,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19412,"byte_end":19425,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20277,"byte_end":20280,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19460,"byte_end":19535,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19540,"byte_end":19563,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19568,"byte_end":19571,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19576,"byte_end":19650,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19655,"byte_end":19726,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19731,"byte_end":19793,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19798,"byte_end":19801,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19806,"byte_end":19877,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19882,"byte_end":19953,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19958,"byte_end":19979,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19984,"byte_end":19987,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19992,"byte_end":20006,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20011,"byte_end":20014,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20019,"byte_end":20026,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20031,"byte_end":20072,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20077,"byte_end":20112,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20117,"byte_end":20120,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20125,"byte_end":20154,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20159,"byte_end":20202,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20207,"byte_end":20243,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20248,"byte_end":20257,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20262,"byte_end":20269,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20677,"byte_end":20685,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20450,"byte_end":20525,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20530,"byte_end":20553,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20558,"byte_end":20561,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20566,"byte_end":20644,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20649,"byte_end":20669,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21697,"byte_end":21701,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20844,"byte_end":20920,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20925,"byte_end":20968,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20973,"byte_end":20976,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":20981,"byte_end":21052,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21057,"byte_end":21131,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21136,"byte_end":21152,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21157,"byte_end":21160,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21165,"byte_end":21240,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21245,"byte_end":21256,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21261,"byte_end":21264,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21269,"byte_end":21340,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21345,"byte_end":21371,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21376,"byte_end":21379,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21384,"byte_end":21398,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21403,"byte_end":21406,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21411,"byte_end":21418,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21423,"byte_end":21464,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21469,"byte_end":21504,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21509,"byte_end":21512,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21517,"byte_end":21551,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21556,"byte_end":21621,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21626,"byte_end":21663,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21668,"byte_end":21677,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21682,"byte_end":21689,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22571,"byte_end":22582,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21913,"byte_end":21988,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":21993,"byte_end":22014,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22019,"byte_end":22022,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22027,"byte_end":22107,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22112,"byte_end":22184,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22189,"byte_end":22192,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22197,"byte_end":22211,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22216,"byte_end":22219,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22224,"byte_end":22231,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22236,"byte_end":22277,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22282,"byte_end":22317,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22322,"byte_end":22325,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22330,"byte_end":22344,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22349,"byte_end":22377,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22382,"byte_end":22418,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22423,"byte_end":22435,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22440,"byte_end":22478,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22483,"byte_end":22489,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22494,"byte_end":22497,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22502,"byte_end":22537,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22542,"byte_end":22551,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22556,"byte_end":22563,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23421,"byte_end":23433,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22762,"byte_end":22838,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22843,"byte_end":22864,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22869,"byte_end":22872,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22877,"byte_end":22956,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":22961,"byte_end":23033,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23038,"byte_end":23041,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23046,"byte_end":23060,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23065,"byte_end":23068,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23073,"byte_end":23080,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23085,"byte_end":23126,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23131,"byte_end":23166,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23171,"byte_end":23174,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23179,"byte_end":23193,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23198,"byte_end":23226,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23231,"byte_end":23267,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23272,"byte_end":23284,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23289,"byte_end":23327,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23332,"byte_end":23338,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23343,"byte_end":23346,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23351,"byte_end":23387,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23392,"byte_end":23401,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23406,"byte_end":23413,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24212,"byte_end":24223,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23614,"byte_end":23667,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23672,"byte_end":23675,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23680,"byte_end":23754,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23759,"byte_end":23822,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23827,"byte_end":23830,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23835,"byte_end":23849,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23854,"byte_end":23857,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23862,"byte_end":23869,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23874,"byte_end":23915,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23920,"byte_end":23955,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":23960,"byte_end":23995,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24000,"byte_end":24003,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24008,"byte_end":24038,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24043,"byte_end":24081,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24086,"byte_end":24137,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24142,"byte_end":24178,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24183,"byte_end":24192,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24197,"byte_end":24204,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25088,"byte_end":25095,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24362,"byte_end":24426,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24431,"byte_end":24467,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24472,"byte_end":24475,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24480,"byte_end":24549,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24554,"byte_end":24591,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24596,"byte_end":24599,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24604,"byte_end":24664,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24669,"byte_end":24672,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24677,"byte_end":24748,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24753,"byte_end":24779,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24784,"byte_end":24787,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24792,"byte_end":24806,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24811,"byte_end":24814,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24819,"byte_end":24826,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24831,"byte_end":24872,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24877,"byte_end":24912,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24917,"byte_end":24920,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24925,"byte_end":24971,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":24976,"byte_end":25017,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25022,"byte_end":25054,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25059,"byte_end":25068,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25073,"byte_end":25080,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26200,"byte_end":26214,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25309,"byte_end":25384,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25389,"byte_end":25412,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25417,"byte_end":25420,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25425,"byte_end":25497,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25502,"byte_end":25575,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25580,"byte_end":25594,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25599,"byte_end":25602,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25607,"byte_end":25677,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25682,"byte_end":25700,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25705,"byte_end":25708,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25713,"byte_end":25727,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25732,"byte_end":25735,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25740,"byte_end":25747,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25752,"byte_end":25793,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25798,"byte_end":25833,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25838,"byte_end":25881,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25886,"byte_end":25889,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25894,"byte_end":25934,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":25939,"byte_end":26005,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26010,"byte_end":26013,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26018,"byte_end":26071,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26076,"byte_end":26122,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26127,"byte_end":26166,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26171,"byte_end":26180,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26185,"byte_end":26192,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27302,"byte_end":27306,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26407,"byte_end":26480,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26485,"byte_end":26551,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26556,"byte_end":26574,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26579,"byte_end":26582,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26587,"byte_end":26654,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26659,"byte_end":26724,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26729,"byte_end":26801,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26806,"byte_end":26880,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26885,"byte_end":26911,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26916,"byte_end":26919,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":26924,"byte_end":26995,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27000,"byte_end":27075,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27080,"byte_end":27134,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27139,"byte_end":27142,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27147,"byte_end":27221,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27226,"byte_end":27294,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":28146,"byte_end":28153,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27452,"byte_end":27518,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27523,"byte_end":27526,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27531,"byte_end":27606,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27611,"byte_end":27684,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27689,"byte_end":27758,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27763,"byte_end":27813,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27818,"byte_end":27821,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27826,"byte_end":27840,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27845,"byte_end":27848,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27853,"byte_end":27860,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27865,"byte_end":27906,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27911,"byte_end":27946,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27951,"byte_end":27954,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27959,"byte_end":27988,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":27993,"byte_end":28071,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":28076,"byte_end":28112,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":28117,"byte_end":28126,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":28131,"byte_end":28138,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":33389,"byte_end":33399,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":33256,"byte_end":33305,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":33310,"byte_end":33381,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":33684,"byte_end":33695,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":33548,"byte_end":33597,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":33602,"byte_end":33676,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":33926,"byte_end":33936,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":33849,"byte_end":33918,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35332,"byte_end":35344,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34072,"byte_end":34144,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34149,"byte_end":34212,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34217,"byte_end":34220,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34225,"byte_end":34291,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34296,"byte_end":34299,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34304,"byte_end":34377,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34382,"byte_end":34451,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34456,"byte_end":34526,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34531,"byte_end":34534,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34539,"byte_end":34553,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34558,"byte_end":34561,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34566,"byte_end":34573,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34578,"byte_end":34608,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34613,"byte_end":34663,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34668,"byte_end":34707,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34712,"byte_end":34763,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34768,"byte_end":34771,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34776,"byte_end":34836,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34841,"byte_end":34893,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34898,"byte_end":34905,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34910,"byte_end":34913,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34918,"byte_end":34987,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":34992,"byte_end":35065,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35070,"byte_end":35102,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35107,"byte_end":35110,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35115,"byte_end":35122,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35127,"byte_end":35174,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35179,"byte_end":35218,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35223,"byte_end":35226,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35231,"byte_end":35312,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":35317,"byte_end":35324,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3330},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/into_future.rs","byte_start":66763,"byte_end":66773,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3332}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":3368},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":67758,"byte_end":67763,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":3365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3370},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":67792,"byte_end":67798,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":3365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3372},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":67827,"byte_end":67832,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":3365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3365},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":67725,"byte_end":67735,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3368},{"krate":0,"index":3370},{"krate":0,"index":3372}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3415},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":72957,"byte_end":72962,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":3412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3417},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":72991,"byte_end":72997,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":3412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3419},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":73026,"byte_end":73031,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":3412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3412},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":72921,"byte_end":72934,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3419}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3458},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":45598,"byte_end":45608,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3461}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3519},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":45856,"byte_end":45869,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3522}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3579},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":46137,"byte_end":46153,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3581}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3630},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":46741,"byte_end":46748,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3634}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3704},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":46988,"byte_end":46994,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3708}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3777},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":47244,"byte_end":47251,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3780}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3838},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":47459,"byte_end":47465,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":3841}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3899},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":47684,"byte_end":47693,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":3902}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3960},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":47965,"byte_end":47975,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3963}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4021},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":48348,"byte_end":48353,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":4024}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4082},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":48594,"byte_end":48600,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4085}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4144},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":48857,"byte_end":48868,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4148}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4217},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":49152,"byte_end":49164,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4220}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":49454,"byte_end":49466,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":49390,"byte_end":49443,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52226,"byte_end":52232,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":50854,"byte_end":50912,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":50917,"byte_end":50920,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":50925,"byte_end":51000,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51005,"byte_end":51075,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51080,"byte_end":51153,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51158,"byte_end":51187,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51192,"byte_end":51195,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51200,"byte_end":51275,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51280,"byte_end":51355,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51360,"byte_end":51407,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51412,"byte_end":51415,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51420,"byte_end":51495,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51500,"byte_end":51526,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51531,"byte_end":51534,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51539,"byte_end":51553,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51558,"byte_end":51561,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51566,"byte_end":51573,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51578,"byte_end":51616,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51621,"byte_end":51624,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51629,"byte_end":51670,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51675,"byte_end":51720,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51725,"byte_end":51767,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51772,"byte_end":51808,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51813,"byte_end":51822,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51827,"byte_end":51834,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51839,"byte_end":51842,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51847,"byte_end":51919,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51924,"byte_end":51935,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51940,"byte_end":51943,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51948,"byte_end":51955,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":51960,"byte_end":51998,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52003,"byte_end":52006,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52011,"byte_end":52052,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52057,"byte_end":52103,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52108,"byte_end":52150,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52155,"byte_end":52192,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52197,"byte_end":52206,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52211,"byte_end":52218,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53791,"byte_end":53805,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52423,"byte_end":52540,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52545,"byte_end":52548,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52553,"byte_end":52675,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52680,"byte_end":52730,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52735,"byte_end":52738,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52743,"byte_end":52818,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52823,"byte_end":52898,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52903,"byte_end":52950,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52955,"byte_end":52958,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":52963,"byte_end":53038,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53043,"byte_end":53118,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53123,"byte_end":53170,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53175,"byte_end":53178,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53183,"byte_end":53258,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53263,"byte_end":53289,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53294,"byte_end":53297,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53302,"byte_end":53316,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53321,"byte_end":53324,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53329,"byte_end":53336,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53341,"byte_end":53379,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53384,"byte_end":53387,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53392,"byte_end":53433,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53438,"byte_end":53483,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53488,"byte_end":53549,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53554,"byte_end":53586,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53591,"byte_end":53594,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53599,"byte_end":53645,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53650,"byte_end":53711,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53716,"byte_end":53749,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53754,"byte_end":53763,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53768,"byte_end":53775,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":53780,"byte_end":53783,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55488,"byte_end":55495,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54039,"byte_end":54095,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54100,"byte_end":54103,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54108,"byte_end":54182,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54187,"byte_end":54248,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54253,"byte_end":54323,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54328,"byte_end":54403,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54408,"byte_end":54443,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54448,"byte_end":54451,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54456,"byte_end":54531,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54536,"byte_end":54611,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54616,"byte_end":54663,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54668,"byte_end":54671,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54676,"byte_end":54751,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54756,"byte_end":54782,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54787,"byte_end":54790,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54795,"byte_end":54809,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54814,"byte_end":54817,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54822,"byte_end":54829,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54834,"byte_end":54872,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54877,"byte_end":54880,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54885,"byte_end":54926,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54931,"byte_end":54977,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":54982,"byte_end":55025,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55030,"byte_end":55067,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55072,"byte_end":55081,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55086,"byte_end":55093,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55098,"byte_end":55101,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55106,"byte_end":55179,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55184,"byte_end":55198,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55203,"byte_end":55206,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55211,"byte_end":55218,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55223,"byte_end":55261,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55266,"byte_end":55269,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55274,"byte_end":55315,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55320,"byte_end":55365,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55370,"byte_end":55413,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55418,"byte_end":55454,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55459,"byte_end":55468,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55473,"byte_end":55480,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56585,"byte_end":56593,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55688,"byte_end":55758,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55763,"byte_end":55812,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55817,"byte_end":55820,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55825,"byte_end":55888,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55893,"byte_end":55961,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":55966,"byte_end":56039,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56044,"byte_end":56120,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56125,"byte_end":56170,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56175,"byte_end":56178,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56183,"byte_end":56258,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56263,"byte_end":56289,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56294,"byte_end":56297,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56302,"byte_end":56316,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56321,"byte_end":56324,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56329,"byte_end":56336,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56341,"byte_end":56379,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56384,"byte_end":56387,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56392,"byte_end":56433,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56438,"byte_end":56489,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56494,"byte_end":56551,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56556,"byte_end":56565,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56570,"byte_end":56577,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56889,"byte_end":56896,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56769,"byte_end":56827,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":56832,"byte_end":56881,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58451,"byte_end":58459,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57070,"byte_end":57139,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57144,"byte_end":57218,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57223,"byte_end":57226,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57231,"byte_end":57306,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57311,"byte_end":57381,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57386,"byte_end":57451,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57456,"byte_end":57522,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57527,"byte_end":57561,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57566,"byte_end":57569,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57574,"byte_end":57649,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57654,"byte_end":57680,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57685,"byte_end":57688,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57693,"byte_end":57707,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57712,"byte_end":57715,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57720,"byte_end":57727,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57732,"byte_end":57770,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57775,"byte_end":57778,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57783,"byte_end":57824,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57829,"byte_end":57874,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57879,"byte_end":57954,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":57959,"byte_end":57995,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58000,"byte_end":58009,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58014,"byte_end":58021,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58026,"byte_end":58029,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58034,"byte_end":58110,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58115,"byte_end":58126,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58131,"byte_end":58134,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58139,"byte_end":58146,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58151,"byte_end":58189,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58194,"byte_end":58197,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58202,"byte_end":58243,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58248,"byte_end":58294,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58299,"byte_end":58375,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58380,"byte_end":58417,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58422,"byte_end":58431,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58436,"byte_end":58443,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60080,"byte_end":60087,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58713,"byte_end":58778,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58783,"byte_end":58855,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58860,"byte_end":58863,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58868,"byte_end":58943,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":58948,"byte_end":59018,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59023,"byte_end":59088,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59093,"byte_end":59169,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59174,"byte_end":59192,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59197,"byte_end":59200,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59205,"byte_end":59280,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59285,"byte_end":59311,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59316,"byte_end":59319,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59324,"byte_end":59338,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59343,"byte_end":59346,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59351,"byte_end":59358,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59363,"byte_end":59401,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59406,"byte_end":59409,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59414,"byte_end":59455,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59460,"byte_end":59506,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59511,"byte_end":59586,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59591,"byte_end":59628,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59633,"byte_end":59642,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59647,"byte_end":59654,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59659,"byte_end":59662,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59667,"byte_end":59740,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59745,"byte_end":59759,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59764,"byte_end":59767,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59772,"byte_end":59779,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59784,"byte_end":59822,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59827,"byte_end":59830,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59835,"byte_end":59876,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59881,"byte_end":59926,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":59931,"byte_end":60005,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60010,"byte_end":60046,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60051,"byte_end":60060,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60065,"byte_end":60072,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61063,"byte_end":61073,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60336,"byte_end":60409,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60414,"byte_end":60417,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60422,"byte_end":60497,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60502,"byte_end":60575,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60580,"byte_end":60649,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60654,"byte_end":60707,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60712,"byte_end":60715,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60720,"byte_end":60734,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60739,"byte_end":60742,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60747,"byte_end":60754,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60759,"byte_end":60800,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60805,"byte_end":60843,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60848,"byte_end":60851,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60856,"byte_end":60898,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60903,"byte_end":60984,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":60989,"byte_end":61029,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61034,"byte_end":61043,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61048,"byte_end":61055,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61999,"byte_end":62010,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61272,"byte_end":61343,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61348,"byte_end":61351,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61356,"byte_end":61431,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61436,"byte_end":61509,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61514,"byte_end":61583,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61588,"byte_end":61642,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61647,"byte_end":61650,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61655,"byte_end":61669,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61674,"byte_end":61677,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61682,"byte_end":61689,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61694,"byte_end":61735,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61740,"byte_end":61778,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61783,"byte_end":61786,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61791,"byte_end":61834,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61839,"byte_end":61919,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61924,"byte_end":61965,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61970,"byte_end":61979,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":61984,"byte_end":61991,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62395,"byte_end":62406,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62214,"byte_end":62289,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62294,"byte_end":62323,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62328,"byte_end":62331,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62336,"byte_end":62387,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63585,"byte_end":63603,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62641,"byte_end":62716,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62721,"byte_end":62744,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62749,"byte_end":62752,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62757,"byte_end":62829,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62834,"byte_end":62907,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62912,"byte_end":62926,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62931,"byte_end":62934,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":62939,"byte_end":63009,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63014,"byte_end":63032,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63037,"byte_end":63040,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63045,"byte_end":63059,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63064,"byte_end":63067,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63072,"byte_end":63079,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63084,"byte_end":63125,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63130,"byte_end":63168,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63173,"byte_end":63219,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63224,"byte_end":63227,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63232,"byte_end":63292,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63297,"byte_end":63376,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63381,"byte_end":63384,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63389,"byte_end":63446,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63451,"byte_end":63503,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63508,"byte_end":63551,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63556,"byte_end":63565,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63570,"byte_end":63577,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64694,"byte_end":64708,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63863,"byte_end":63934,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63939,"byte_end":63976,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":63981,"byte_end":64030,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64035,"byte_end":64038,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64043,"byte_end":64112,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64117,"byte_end":64190,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64195,"byte_end":64265,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64270,"byte_end":64288,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64293,"byte_end":64296,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64301,"byte_end":64369,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64374,"byte_end":64377,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64382,"byte_end":64396,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64401,"byte_end":64404,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64409,"byte_end":64416,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64421,"byte_end":64459,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64464,"byte_end":64467,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64472,"byte_end":64513,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64518,"byte_end":64570,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64575,"byte_end":64622,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64627,"byte_end":64660,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64665,"byte_end":64674,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":64679,"byte_end":64686,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65963,"byte_end":65974,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65262,"byte_end":65315,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65320,"byte_end":65356,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65361,"byte_end":65364,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65369,"byte_end":65418,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65423,"byte_end":65490,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65495,"byte_end":65508,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65513,"byte_end":65516,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65521,"byte_end":65535,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65540,"byte_end":65543,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65548,"byte_end":65555,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65560,"byte_end":65619,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65624,"byte_end":65627,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65632,"byte_end":65651,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65656,"byte_end":65674,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65679,"byte_end":65751,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65756,"byte_end":65788,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65793,"byte_end":65800,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65805,"byte_end":65881,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65886,"byte_end":65889,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65894,"byte_end":65943,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":65948,"byte_end":65955,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":66233,"byte_end":66247,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":66130,"byte_end":66203,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":66208,"byte_end":66225,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4275},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":74756,"byte_end":74760,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4277}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":74622,"byte_end":74659,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":74677,"byte_end":74744,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75301,"byte_end":75305,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":74864,"byte_end":74932,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":74933,"byte_end":74936,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":74937,"byte_end":75000,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75001,"byte_end":75004,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75005,"byte_end":75019,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75020,"byte_end":75023,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75024,"byte_end":75031,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75032,"byte_end":75073,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75074,"byte_end":75098,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75099,"byte_end":75102,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75103,"byte_end":75135,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75136,"byte_end":75163,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75164,"byte_end":75167,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75168,"byte_end":75205,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75206,"byte_end":75230,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75231,"byte_end":75238,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75239,"byte_end":75275,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75276,"byte_end":75285,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75286,"byte_end":75293,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4281},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76120,"byte_end":76127,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4283}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":75981,"byte_end":76023,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76041,"byte_end":76108,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":350},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76646,"byte_end":76653,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76268,"byte_end":76348,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76349,"byte_end":76362,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76363,"byte_end":76366,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76367,"byte_end":76429,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76430,"byte_end":76433,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76434,"byte_end":76448,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76449,"byte_end":76452,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76453,"byte_end":76466,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76467,"byte_end":76508,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76509,"byte_end":76533,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76534,"byte_end":76537,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76538,"byte_end":76573,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76574,"byte_end":76600,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76601,"byte_end":76620,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76621,"byte_end":76630,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76631,"byte_end":76638,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4289},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77439,"byte_end":77445,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":4287},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77404,"byte_end":77434,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4292},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77512,"byte_end":77516,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":4287},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77469,"byte_end":77507,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4295},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77678,"byte_end":77682,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":4287},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77535,"byte_end":77601,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77606,"byte_end":77673,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":4287},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77375,"byte_end":77384,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4289},{"krate":0,"index":4292},{"krate":0,"index":4295}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77253,"byte_end":77290,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77291,"byte_end":77294,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77295,"byte_end":77348,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":377},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78203,"byte_end":78213,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77742,"byte_end":77779,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77780,"byte_end":77783,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77784,"byte_end":77798,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77799,"byte_end":77802,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77803,"byte_end":77810,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77811,"byte_end":77852,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77853,"byte_end":77877,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77878,"byte_end":77903,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77904,"byte_end":77907,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77908,"byte_end":77957,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77958,"byte_end":77979,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77980,"byte_end":78032,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78033,"byte_end":78068,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78069,"byte_end":78124,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78125,"byte_end":78177,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78178,"byte_end":78187,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78188,"byte_end":78195,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78654,"byte_end":78664,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78356,"byte_end":78441,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78446,"byte_end":78517,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78522,"byte_end":78595,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78600,"byte_end":78628,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78633,"byte_end":78642,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":79012,"byte_end":79023,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78892,"byte_end":78958,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78963,"byte_end":78986,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78991,"byte_end":79000,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4302},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80648,"byte_end":80654,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":4300},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80613,"byte_end":80643,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4305},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80721,"byte_end":80725,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":4300},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80678,"byte_end":80716,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4308},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80933,"byte_end":80937,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":4300},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80740,"byte_end":80809,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80814,"byte_end":80884,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80889,"byte_end":80928,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":4300},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80578,"byte_end":80590,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4308}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80438,"byte_end":80489,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80490,"byte_end":80493,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80494,"byte_end":80551,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81051,"byte_end":81065,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81003,"byte_end":81043,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81552,"byte_end":81562,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81243,"byte_end":81328,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81333,"byte_end":81404,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81409,"byte_end":81493,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81498,"byte_end":81526,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81531,"byte_end":81540,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81912,"byte_end":81923,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81789,"byte_end":81858,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81863,"byte_end":81886,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81891,"byte_end":81900,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4318},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/option.rs","byte_start":84199,"byte_end":84211,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":4320}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":451},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85249,"byte_end":85255,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":453}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85129,"byte_end":85169,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85170,"byte_end":85237,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85842,"byte_end":85849,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85306,"byte_end":85377,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85378,"byte_end":85381,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85382,"byte_end":85448,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85449,"byte_end":85452,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85453,"byte_end":85467,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85468,"byte_end":85471,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85472,"byte_end":85479,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85480,"byte_end":85521,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85522,"byte_end":85555,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85556,"byte_end":85595,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85596,"byte_end":85599,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85600,"byte_end":85657,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85658,"byte_end":85701,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85702,"byte_end":85707,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85708,"byte_end":85711,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85712,"byte_end":85753,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85754,"byte_end":85816,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85817,"byte_end":85826,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85827,"byte_end":85834,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4352},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86618,"byte_end":86623,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86467,"byte_end":86514,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86539,"byte_end":86606,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86746,"byte_end":86756,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86663,"byte_end":86720,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86725,"byte_end":86734,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87422,"byte_end":87427,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87176,"byte_end":87236,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87237,"byte_end":87240,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87241,"byte_end":87255,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87256,"byte_end":87259,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87260,"byte_end":87267,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87268,"byte_end":87309,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87310,"byte_end":87334,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87335,"byte_end":87338,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87339,"byte_end":87368,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87369,"byte_end":87396,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87397,"byte_end":87406,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87407,"byte_end":87414,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87762,"byte_end":87764,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87496,"byte_end":87563,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87564,"byte_end":87567,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87568,"byte_end":87582,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87583,"byte_end":87586,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87587,"byte_end":87594,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87595,"byte_end":87636,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87637,"byte_end":87661,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87662,"byte_end":87665,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87666,"byte_end":87704,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87705,"byte_end":87736,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87737,"byte_end":87746,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87747,"byte_end":87754,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":496},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":88095,"byte_end":88098,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87828,"byte_end":87894,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87895,"byte_end":87898,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87899,"byte_end":87913,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87914,"byte_end":87917,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87918,"byte_end":87925,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87926,"byte_end":87967,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87968,"byte_end":87992,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87993,"byte_end":87996,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":87997,"byte_end":88036,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":88037,"byte_end":88069,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":88070,"byte_end":88079,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":88080,"byte_end":88087,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4454},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90384,"byte_end":90388,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4458}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4499},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90454,"byte_end":90459,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4556},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90531,"byte_end":90536,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":4561},{"krate":0,"index":4562},{"krate":0,"index":4563},{"krate":0,"index":4564}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4625},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90614,"byte_end":90619,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91234,"byte_end":91238,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90657,"byte_end":90728,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90729,"byte_end":90732,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90733,"byte_end":90804,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90805,"byte_end":90880,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90881,"byte_end":90884,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90885,"byte_end":90954,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90955,"byte_end":90981,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90982,"byte_end":90985,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":90986,"byte_end":91000,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91001,"byte_end":91004,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91005,"byte_end":91012,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91013,"byte_end":91054,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91055,"byte_end":91079,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91080,"byte_end":91083,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91084,"byte_end":91108,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91109,"byte_end":91133,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91134,"byte_end":91168,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91169,"byte_end":91172,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91173,"byte_end":91208,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91209,"byte_end":91218,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91219,"byte_end":91226,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":522},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91784,"byte_end":91789,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91445,"byte_end":91497,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91498,"byte_end":91501,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91502,"byte_end":91516,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91517,"byte_end":91520,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91521,"byte_end":91528,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91529,"byte_end":91570,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91571,"byte_end":91595,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91596,"byte_end":91599,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91600,"byte_end":91624,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91625,"byte_end":91649,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91650,"byte_end":91674,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91675,"byte_end":91714,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91715,"byte_end":91718,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91719,"byte_end":91758,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91759,"byte_end":91768,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":91769,"byte_end":91776,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":526},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92451,"byte_end":92456,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92081,"byte_end":92133,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92134,"byte_end":92137,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92138,"byte_end":92152,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92153,"byte_end":92156,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92157,"byte_end":92164,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92165,"byte_end":92206,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92207,"byte_end":92231,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92232,"byte_end":92235,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92236,"byte_end":92260,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92261,"byte_end":92285,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92286,"byte_end":92310,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92311,"byte_end":92335,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92336,"byte_end":92378,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92379,"byte_end":92382,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92383,"byte_end":92425,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92426,"byte_end":92435,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92436,"byte_end":92443,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":531},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93221,"byte_end":93226,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92820,"byte_end":92872,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92873,"byte_end":92876,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92877,"byte_end":92891,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92892,"byte_end":92895,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92896,"byte_end":92903,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92904,"byte_end":92945,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92946,"byte_end":92970,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92971,"byte_end":92974,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":92975,"byte_end":92999,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93000,"byte_end":93024,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93025,"byte_end":93049,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93050,"byte_end":93074,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93075,"byte_end":93099,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93100,"byte_end":93145,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93146,"byte_end":93149,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93150,"byte_end":93195,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93196,"byte_end":93205,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/join.rs","byte_start":93206,"byte_end":93213,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94071,"byte_end":94077,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4709}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":93933,"byte_end":93974,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":93975,"byte_end":94042,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":561},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96343,"byte_end":96349,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94168,"byte_end":94238,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94239,"byte_end":94242,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94243,"byte_end":94321,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94322,"byte_end":94398,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94399,"byte_end":94471,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94472,"byte_end":94475,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94476,"byte_end":94548,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94549,"byte_end":94577,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94578,"byte_end":94581,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94582,"byte_end":94649,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94650,"byte_end":94714,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94715,"byte_end":94765,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94766,"byte_end":94769,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94770,"byte_end":94784,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94785,"byte_end":94788,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94789,"byte_end":94809,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94810,"byte_end":94813,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94814,"byte_end":94821,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94822,"byte_end":94863,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94864,"byte_end":94882,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94883,"byte_end":94899,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94900,"byte_end":94923,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94924,"byte_end":94945,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94946,"byte_end":94952,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/ ","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94953,"byte_end":94957,"line_start":40,"line_end":40,"column_start":1,"column_end":5}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94958,"byte_end":95049,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95050,"byte_end":95075,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95076,"byte_end":95135,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95136,"byte_end":95145,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95146,"byte_end":95152,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async { ","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95153,"byte_end":95179,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95180,"byte_end":95210,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95211,"byte_end":95217,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95218,"byte_end":95221,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95222,"byte_end":95268,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95269,"byte_end":95291,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95292,"byte_end":95314,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95315,"byte_end":95318,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95319,"byte_end":95381,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95382,"byte_end":95466,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95467,"byte_end":95540,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95541,"byte_end":95625,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95626,"byte_end":95699,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95700,"byte_end":95706,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95707,"byte_end":95710,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95711,"byte_end":95735,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95736,"byte_end":95745,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95746,"byte_end":95753,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95754,"byte_end":95757,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95758,"byte_end":95784,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95785,"byte_end":95788,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95789,"byte_end":95796,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95797,"byte_end":95856,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95857,"byte_end":95860,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95861,"byte_end":95914,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95915,"byte_end":95918,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95919,"byte_end":95994,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":95995,"byte_end":96027,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96028,"byte_end":96060,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96061,"byte_end":96066,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96067,"byte_end":96111,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96112,"byte_end":96138,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96139,"byte_end":96216,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96217,"byte_end":96296,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96297,"byte_end":96310,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96311,"byte_end":96321,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96322,"byte_end":96327,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96328,"byte_end":96335,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4784},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100309,"byte_end":100316,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":4787},{"krate":0,"index":4788}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4829},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100386,"byte_end":100394,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4886},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100470,"byte_end":100478,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":4891},{"krate":0,"index":4892},{"krate":0,"index":4893},{"krate":0,"index":4894}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4955},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100560,"byte_end":100568,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":4961},{"krate":0,"index":4962},{"krate":0,"index":4963},{"krate":0,"index":4964},{"krate":0,"index":4965}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":591},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101841,"byte_end":101849,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100606,"byte_end":100679,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100680,"byte_end":100712,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100713,"byte_end":100716,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100717,"byte_end":100788,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100789,"byte_end":100865,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100866,"byte_end":100938,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100939,"byte_end":100955,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100956,"byte_end":100959,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":100960,"byte_end":101029,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101030,"byte_end":101056,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101057,"byte_end":101060,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101061,"byte_end":101075,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101076,"byte_end":101079,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101080,"byte_end":101156,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101157,"byte_end":101193,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101194,"byte_end":101197,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101198,"byte_end":101205,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101206,"byte_end":101247,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101248,"byte_end":101272,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101273,"byte_end":101276,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101277,"byte_end":101322,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101323,"byte_end":101368,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101369,"byte_end":101407,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101408,"byte_end":101411,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101412,"byte_end":101451,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101452,"byte_end":101461,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101462,"byte_end":101469,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101470,"byte_end":101473,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101474,"byte_end":101544,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101545,"byte_end":101560,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101561,"byte_end":101564,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101565,"byte_end":101572,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101573,"byte_end":101614,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101615,"byte_end":101639,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101640,"byte_end":101643,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101644,"byte_end":101689,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101690,"byte_end":101736,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101737,"byte_end":101775,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101776,"byte_end":101779,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101780,"byte_end":101815,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101816,"byte_end":101825,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":101826,"byte_end":101833,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":594},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102505,"byte_end":102514,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102087,"byte_end":102147,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102148,"byte_end":102151,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102152,"byte_end":102166,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102167,"byte_end":102170,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102171,"byte_end":102178,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102179,"byte_end":102220,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102221,"byte_end":102245,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102246,"byte_end":102249,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102250,"byte_end":102295,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102296,"byte_end":102341,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102342,"byte_end":102387,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102388,"byte_end":102431,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102432,"byte_end":102435,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102436,"byte_end":102479,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102480,"byte_end":102489,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102490,"byte_end":102497,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":598},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103342,"byte_end":103351,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102872,"byte_end":102932,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102933,"byte_end":102936,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102937,"byte_end":102951,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102952,"byte_end":102955,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102956,"byte_end":102963,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":102964,"byte_end":103005,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103006,"byte_end":103030,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103031,"byte_end":103034,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103035,"byte_end":103080,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103081,"byte_end":103126,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103127,"byte_end":103172,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103173,"byte_end":103218,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103219,"byte_end":103265,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103266,"byte_end":103269,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103270,"byte_end":103316,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103317,"byte_end":103326,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103327,"byte_end":103334,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":603},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104323,"byte_end":104332,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103801,"byte_end":103861,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103862,"byte_end":103865,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103866,"byte_end":103880,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103881,"byte_end":103884,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103885,"byte_end":103892,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103893,"byte_end":103934,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103935,"byte_end":103959,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103960,"byte_end":103963,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":103964,"byte_end":104009,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104010,"byte_end":104055,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104056,"byte_end":104101,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104102,"byte_end":104147,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104148,"byte_end":104193,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104194,"byte_end":104243,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104244,"byte_end":104247,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104248,"byte_end":104297,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104298,"byte_end":104307,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_join.rs","byte_start":104308,"byte_end":104315,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5036},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105168,"byte_end":105177,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":5039}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105026,"byte_end":105071,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105072,"byte_end":105139,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":632},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106762,"byte_end":106772,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105271,"byte_end":105341,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105342,"byte_end":105345,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105346,"byte_end":105424,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105425,"byte_end":105501,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105502,"byte_end":105574,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105575,"byte_end":105578,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105579,"byte_end":105651,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105652,"byte_end":105680,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105681,"byte_end":105684,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105685,"byte_end":105752,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105753,"byte_end":105824,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105825,"byte_end":105875,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105876,"byte_end":105879,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105880,"byte_end":105894,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105895,"byte_end":105898,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105899,"byte_end":105906,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105907,"byte_end":105991,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105992,"byte_end":105995,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105996,"byte_end":106053,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106054,"byte_end":106057,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106058,"byte_end":106140,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106141,"byte_end":106198,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106199,"byte_end":106256,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106257,"byte_end":106283,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106284,"byte_end":106289,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106290,"byte_end":106385,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106386,"byte_end":106409,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106410,"byte_end":106490,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106491,"byte_end":106572,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106573,"byte_end":106643,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106644,"byte_end":106715,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106716,"byte_end":106729,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106730,"byte_end":106740,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106741,"byte_end":106746,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":106747,"byte_end":106754,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5047},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108439,"byte_end":108443,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":5044},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108406,"byte_end":108434,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5050},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108499,"byte_end":108504,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":5044},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108465,"byte_end":108494,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5044},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108387,"byte_end":108393,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(A),\n\n    /// Second branch of the type\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":5047},{"krate":0,"index":5050}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108243,"byte_end":108343,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108344,"byte_end":108353,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109058,"byte_end":109070,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108910,"byte_end":108968,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108973,"byte_end":108976,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108981,"byte_end":109046,"line_start":32,"line_end":32,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109450,"byte_end":109463,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109301,"byte_end":109359,"line_start":42,"line_end":42,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109364,"byte_end":109367,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109372,"byte_end":109438,"line_start":44,"line_end":44,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109751,"byte_end":109761,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109678,"byte_end":109739,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":699},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2272},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116208,"byte_end":116233,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116234,"byte_end":116237,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116238,"byte_end":116263,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116264,"byte_end":116267,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116268,"byte_end":116341,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116342,"byte_end":116367,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116368,"byte_end":116447,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116448,"byte_end":116485,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116486,"byte_end":116559,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/mod.rs","byte_start":116560,"byte_end":116590,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5068},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/chain.rs","byte_start":170706,"byte_end":170711,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5071},{"krate":0,"index":5072}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5117},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/collect.rs","byte_start":172880,"byte_end":172887,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":5120},{"krate":0,"index":5121}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/unzip.rs","byte_start":174350,"byte_end":174355,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":5172},{"krate":0,"index":5173},{"krate":0,"index":5174}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5226},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/concat.rs","byte_start":176270,"byte_end":176276,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":5228},{"krate":0,"index":5229}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/cycle.rs","byte_start":178031,"byte_end":178036,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":5268},{"krate":0,"index":5269}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/enumerate.rs","byte_start":179716,"byte_end":179725,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5308},{"krate":0,"index":5309}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5345},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":181413,"byte_end":181419,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5349},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5410},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":184925,"byte_end":184934,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5416}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5478},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/flatten.rs","byte_start":188005,"byte_end":188012,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5481},{"krate":0,"index":5482}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5526},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":121379,"byte_end":121386,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5528}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5579},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":189829,"byte_end":189833,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5648},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":192396,"byte_end":192403,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":5652},{"krate":0,"index":5653},{"krate":0,"index":5654}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5710},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194429,"byte_end":194433,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5712},{"krate":0,"index":5713}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194885,"byte_end":194892,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194616,"byte_end":194678,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194683,"byte_end":194686,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194691,"byte_end":194759,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194764,"byte_end":194830,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194835,"byte_end":194873,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5749},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196274,"byte_end":196286,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":5751}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196104,"byte_end":196177,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196195,"byte_end":196262,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196849,"byte_end":196856,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196457,"byte_end":196530,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196535,"byte_end":196552,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196557,"byte_end":196560,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196565,"byte_end":196646,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196651,"byte_end":196733,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196738,"byte_end":196817,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196822,"byte_end":196837,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197467,"byte_end":197474,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196921,"byte_end":196988,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196993,"byte_end":197024,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197029,"byte_end":197032,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197037,"byte_end":197110,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197115,"byte_end":197170,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197175,"byte_end":197178,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197183,"byte_end":197264,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197269,"byte_end":197351,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197356,"byte_end":197435,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197440,"byte_end":197455,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198100,"byte_end":198111,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197547,"byte_end":197621,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197626,"byte_end":197657,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197662,"byte_end":197665,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197670,"byte_end":197743,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197748,"byte_end":197803,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197808,"byte_end":197811,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197816,"byte_end":197897,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197902,"byte_end":197984,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":197989,"byte_end":198068,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198073,"byte_end":198088,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198744,"byte_end":198754,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198224,"byte_end":198286,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198291,"byte_end":198294,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198299,"byte_end":198371,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198376,"byte_end":198447,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198452,"byte_end":198455,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198460,"byte_end":198541,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198546,"byte_end":198628,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198633,"byte_end":198712,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198717,"byte_end":198732,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5758},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":122506,"byte_end":122513,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5761}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5824},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":199801,"byte_end":199804,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5827},{"krate":0,"index":5828}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5877},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":122874,"byte_end":122881,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":5881}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5956},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201531,"byte_end":201535,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":5959}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201375,"byte_end":201434,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201452,"byte_end":201519,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5964},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202566,"byte_end":202580,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":5967}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202382,"byte_end":202457,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202458,"byte_end":202469,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202487,"byte_end":202554,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5977},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204171,"byte_end":204179,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":5979},{"krate":0,"index":5980}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204652,"byte_end":204656,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204497,"byte_end":204570,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204575,"byte_end":204640,"line_start":40,"line_end":40,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204981,"byte_end":204990,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204743,"byte_end":204805,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204810,"byte_end":204813,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204818,"byte_end":204891,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204896,"byte_end":204969,"line_start":48,"line_end":48,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206954,"byte_end":206961,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205426,"byte_end":205499,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205504,"byte_end":205538,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205543,"byte_end":205546,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205551,"byte_end":205626,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205631,"byte_end":205671,"line_start":67,"line_end":67,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205676,"byte_end":205679,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205684,"byte_end":205698,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205703,"byte_end":205706,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205711,"byte_end":205751,"line_start":71,"line_end":71,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205756,"byte_end":205759,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205764,"byte_end":205771,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205776,"byte_end":205817,"line_start":74,"line_end":74,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205822,"byte_end":205865,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205870,"byte_end":205895,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205900,"byte_end":205903,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205908,"byte_end":205955,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205960,"byte_end":205981,"line_start":79,"line_end":79,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":205986,"byte_end":206039,"line_start":80,"line_end":80,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206044,"byte_end":206112,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206117,"byte_end":206190,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206195,"byte_end":206260,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206265,"byte_end":206349,"line_start":84,"line_end":84,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206354,"byte_end":206399,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206404,"byte_end":206413,"line_start":86,"line_end":86,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206418,"byte_end":206425,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206430,"byte_end":206433,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206438,"byte_end":206474,"line_start":89,"line_end":89,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206479,"byte_end":206482,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206487,"byte_end":206494,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206499,"byte_end":206540,"line_start":92,"line_end":92,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206545,"byte_end":206588,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206593,"byte_end":206618,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206623,"byte_end":206626,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206631,"byte_end":206679,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206684,"byte_end":206705,"line_start":97,"line_end":97,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206710,"byte_end":206749,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206754,"byte_end":206819,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206824,"byte_end":206865,"line_start":100,"line_end":100,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206870,"byte_end":206916,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206921,"byte_end":206930,"line_start":102,"line_end":102,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":206935,"byte_end":206942,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":208006,"byte_end":208016,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T: ?Sized>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207148,"byte_end":207221,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207226,"byte_end":207250,"line_start":114,"line_end":114,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207255,"byte_end":207258,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207263,"byte_end":207276,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207281,"byte_end":207284,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207289,"byte_end":207329,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207334,"byte_end":207337,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207342,"byte_end":207349,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207354,"byte_end":207395,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207400,"byte_end":207443,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207448,"byte_end":207473,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207478,"byte_end":207481,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207486,"byte_end":207533,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207538,"byte_end":207559,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207564,"byte_end":207617,"line_start":127,"line_end":127,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207622,"byte_end":207684,"line_start":128,"line_end":128,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207689,"byte_end":207762,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207767,"byte_end":207826,"line_start":130,"line_end":130,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207831,"byte_end":207918,"line_start":131,"line_end":131,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207923,"byte_end":207968,"line_start":132,"line_end":132,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207973,"byte_end":207982,"line_start":133,"line_end":133,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":207987,"byte_end":207994,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6016},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":209691,"byte_end":209695,"line_start":197,"line_end":197,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":6019}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6057},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":210751,"byte_end":210757,"line_start":239,"line_end":239,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":6061}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6106},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":212647,"byte_end":212655,"line_start":300,"line_end":300,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":6110}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6160},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip.rs","byte_start":214272,"byte_end":214276,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6162},{"krate":0,"index":6163}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6199},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":216095,"byte_end":216104,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205},{"krate":0,"index":6206},{"krate":0,"index":6207}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6273},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take.rs","byte_start":219748,"byte_end":219752,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6275},{"krate":0,"index":6276}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6312},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":221843,"byte_end":221852,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6316},{"krate":0,"index":6317},{"krate":0,"index":6318},{"krate":0,"index":6319},{"krate":0,"index":6320}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6381},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":225460,"byte_end":225469,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386},{"krate":0,"index":6387}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":226849,"byte_end":226860,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":226549,"byte_end":226603,"line_start":60,"line_end":60,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":226608,"byte_end":226702,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":226707,"byte_end":226770,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":226775,"byte_end":226837,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228144,"byte_end":228155,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":226997,"byte_end":227062,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227067,"byte_end":227124,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227129,"byte_end":227132,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227137,"byte_end":227202,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227207,"byte_end":227267,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227272,"byte_end":227275,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227280,"byte_end":227348,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227353,"byte_end":227396,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227401,"byte_end":227404,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227409,"byte_end":227423,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227428,"byte_end":227431,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227436,"byte_end":227443,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227448,"byte_end":227489,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227494,"byte_end":227518,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227523,"byte_end":227566,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227571,"byte_end":227599,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227604,"byte_end":227607,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227612,"byte_end":227650,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227655,"byte_end":227658,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227663,"byte_end":227681,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227686,"byte_end":227728,"line_start":92,"line_end":92,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227733,"byte_end":227748,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227753,"byte_end":227772,"line_start":94,"line_end":94,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227777,"byte_end":227802,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227807,"byte_end":227823,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227828,"byte_end":227861,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227866,"byte_end":227875,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227880,"byte_end":227887,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227892,"byte_end":227895,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227900,"byte_end":227949,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":227954,"byte_end":228008,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228013,"byte_end":228016,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228021,"byte_end":228068,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228073,"byte_end":228106,"line_start":105,"line_end":105,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228111,"byte_end":228120,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228125,"byte_end":228132,"line_start":107,"line_end":107,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228331,"byte_end":228341,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228234,"byte_end":228295,"line_start":112,"line_end":112,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228300,"byte_end":228319,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6438},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":230273,"byte_end":230277,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":6442},{"krate":0,"index":6443},{"krate":0,"index":6444}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6506},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":232954,"byte_end":232957,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6509},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6512}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233532,"byte_end":233539,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233424,"byte_end":233498,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233503,"byte_end":233520,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233895,"byte_end":233902,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233633,"byte_end":233701,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233706,"byte_end":233737,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233742,"byte_end":233745,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233750,"byte_end":233823,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233828,"byte_end":233883,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234277,"byte_end":234288,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234008,"byte_end":234083,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234088,"byte_end":234119,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234124,"byte_end":234127,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234132,"byte_end":234205,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234210,"byte_end":234265,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234694,"byte_end":234704,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234458,"byte_end":234521,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234526,"byte_end":234529,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234534,"byte_end":234606,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234611,"byte_end":234682,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6556},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":237559,"byte_end":237563,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6561},{"krate":0,"index":6562},{"krate":0,"index":6563}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1548},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126180,"byte_end":126189,"line_start":212,"line_end":212,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":1562},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1614}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126069,"byte_end":126143,"line_start":210,"line_end":210,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126144,"byte_end":126169,"line_start":211,"line_end":211,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127099,"byte_end":127103,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126204,"byte_end":126270,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126275,"byte_end":126278,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126283,"byte_end":126351,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126356,"byte_end":126431,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126436,"byte_end":126511,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126516,"byte_end":126570,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126575,"byte_end":126650,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126655,"byte_end":126665,"line_start":220,"line_end":220,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126670,"byte_end":126673,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126678,"byte_end":126692,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126697,"byte_end":126700,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126705,"byte_end":126712,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126717,"byte_end":126758,"line_start":225,"line_end":225,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126763,"byte_end":126806,"line_start":226,"line_end":226,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126811,"byte_end":126814,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126819,"byte_end":126860,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126865,"byte_end":126868,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126873,"byte_end":126918,"line_start":230,"line_end":230,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126923,"byte_end":126968,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126973,"byte_end":127018,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127023,"byte_end":127065,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127070,"byte_end":127079,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127084,"byte_end":127091,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128342,"byte_end":128353,"line_start":271,"line_end":271,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127245,"byte_end":127317,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127322,"byte_end":127383,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127388,"byte_end":127391,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127396,"byte_end":127471,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127476,"byte_end":127530,"line_start":247,"line_end":247,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127535,"byte_end":127538,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127543,"byte_end":127616,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127621,"byte_end":127683,"line_start":250,"line_end":250,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127688,"byte_end":127763,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127768,"byte_end":127822,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127827,"byte_end":127902,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127907,"byte_end":127917,"line_start":254,"line_end":254,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127922,"byte_end":127925,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127930,"byte_end":127944,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127949,"byte_end":127952,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127957,"byte_end":127964,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":127969,"byte_end":128010,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128015,"byte_end":128058,"line_start":260,"line_end":260,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128063,"byte_end":128066,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128071,"byte_end":128108,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128113,"byte_end":128116,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128121,"byte_end":128173,"line_start":264,"line_end":264,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128178,"byte_end":128208,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128213,"byte_end":128216,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128221,"byte_end":128273,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128278,"byte_end":128308,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128313,"byte_end":128322,"line_start":269,"line_end":269,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128327,"byte_end":128334,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129354,"byte_end":129357,"line_start":301,"line_end":301,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128518,"byte_end":128593,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128598,"byte_end":128621,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128626,"byte_end":128629,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128634,"byte_end":128706,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128711,"byte_end":128775,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128780,"byte_end":128817,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128822,"byte_end":128825,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128830,"byte_end":128906,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128911,"byte_end":128982,"line_start":286,"line_end":286,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":128987,"byte_end":129008,"line_start":287,"line_end":287,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129013,"byte_end":129016,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129021,"byte_end":129035,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129040,"byte_end":129043,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129048,"byte_end":129055,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129060,"byte_end":129101,"line_start":292,"line_end":292,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129106,"byte_end":129149,"line_start":293,"line_end":293,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129154,"byte_end":129157,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129162,"byte_end":129199,"line_start":295,"line_end":295,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129204,"byte_end":129243,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129248,"byte_end":129251,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129256,"byte_end":129320,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129325,"byte_end":129334,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129339,"byte_end":129346,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130917,"byte_end":130926,"line_start":347,"line_end":347,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129524,"byte_end":129595,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129600,"byte_end":129619,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129624,"byte_end":129627,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129632,"byte_end":129697,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129702,"byte_end":129771,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129776,"byte_end":129787,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129792,"byte_end":129795,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129800,"byte_end":129875,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129880,"byte_end":129962,"line_start":317,"line_end":317,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129967,"byte_end":129985,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129990,"byte_end":129993,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":129998,"byte_end":130021,"line_start":320,"line_end":320,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130026,"byte_end":130029,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130034,"byte_end":130109,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130114,"byte_end":130201,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130206,"byte_end":130262,"line_start":324,"line_end":324,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130267,"byte_end":130270,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130275,"byte_end":130287,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130292,"byte_end":130295,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130300,"byte_end":130369,"line_start":328,"line_end":328,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130374,"byte_end":130399,"line_start":329,"line_end":329,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130404,"byte_end":130407,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130412,"byte_end":130426,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130431,"byte_end":130434,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130439,"byte_end":130446,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130451,"byte_end":130492,"line_start":334,"line_end":334,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130497,"byte_end":130540,"line_start":335,"line_end":335,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130545,"byte_end":130548,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130553,"byte_end":130604,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130609,"byte_end":130612,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130617,"byte_end":130657,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130662,"byte_end":130665,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130670,"byte_end":130722,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130727,"byte_end":130779,"line_start":342,"line_end":342,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130784,"byte_end":130836,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130841,"byte_end":130883,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130888,"byte_end":130897,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":130902,"byte_end":130909,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132155,"byte_end":132161,"line_start":380,"line_end":380,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131070,"byte_end":131142,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131147,"byte_end":131174,"line_start":355,"line_end":355,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131179,"byte_end":131182,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131187,"byte_end":131262,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131267,"byte_end":131338,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131343,"byte_end":131415,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131420,"byte_end":131494,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131499,"byte_end":131557,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131562,"byte_end":131565,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131570,"byte_end":131646,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131651,"byte_end":131725,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131730,"byte_end":131751,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131756,"byte_end":131759,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131764,"byte_end":131778,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131783,"byte_end":131786,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131791,"byte_end":131798,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131803,"byte_end":131844,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131849,"byte_end":131873,"line_start":371,"line_end":371,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131878,"byte_end":131921,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131926,"byte_end":131929,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131934,"byte_end":131972,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":131977,"byte_end":132038,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132043,"byte_end":132046,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132051,"byte_end":132121,"line_start":377,"line_end":377,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132126,"byte_end":132135,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132140,"byte_end":132147,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133486,"byte_end":133496,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132389,"byte_end":132464,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132469,"byte_end":132545,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132550,"byte_end":132553,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132558,"byte_end":132633,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132638,"byte_end":132713,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132718,"byte_end":132794,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132799,"byte_end":132864,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132869,"byte_end":132872,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132877,"byte_end":132953,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":132958,"byte_end":133032,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133037,"byte_end":133062,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133067,"byte_end":133070,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133075,"byte_end":133089,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133094,"byte_end":133101,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133106,"byte_end":133147,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133152,"byte_end":133195,"line_start":404,"line_end":404,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133200,"byte_end":133203,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133208,"byte_end":133246,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133251,"byte_end":133301,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133306,"byte_end":133357,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133362,"byte_end":133369,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133374,"byte_end":133377,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133382,"byte_end":133452,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133457,"byte_end":133466,"line_start":412,"line_end":412,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133471,"byte_end":133478,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134525,"byte_end":134529,"line_start":445,"line_end":445,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133728,"byte_end":133801,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133806,"byte_end":133834,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133839,"byte_end":133842,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133847,"byte_end":133921,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133926,"byte_end":133993,"line_start":427,"line_end":427,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":133998,"byte_end":134043,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134048,"byte_end":134051,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134056,"byte_end":134132,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134137,"byte_end":134163,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134168,"byte_end":134171,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134176,"byte_end":134190,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134195,"byte_end":134198,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134203,"byte_end":134210,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134215,"byte_end":134256,"line_start":436,"line_end":436,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134261,"byte_end":134304,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134309,"byte_end":134312,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134317,"byte_end":134354,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134359,"byte_end":134414,"line_start":440,"line_end":440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134419,"byte_end":134422,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134427,"byte_end":134491,"line_start":442,"line_end":442,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134496,"byte_end":134505,"line_start":443,"line_end":443,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134510,"byte_end":134517,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135463,"byte_end":135470,"line_start":479,"line_end":479,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134738,"byte_end":134792,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134797,"byte_end":134852,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134857,"byte_end":134860,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134865,"byte_end":134933,"line_start":457,"line_end":457,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134938,"byte_end":134941,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134946,"byte_end":134960,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134965,"byte_end":134968,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134973,"byte_end":134980,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":134985,"byte_end":135026,"line_start":462,"line_end":462,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135031,"byte_end":135062,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135067,"byte_end":135102,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135107,"byte_end":135127,"line_start":465,"line_end":465,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135132,"byte_end":135135,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135140,"byte_end":135177,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135182,"byte_end":135185,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135190,"byte_end":135217,"line_start":469,"line_end":469,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135222,"byte_end":135246,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135251,"byte_end":135293,"line_start":471,"line_end":471,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135298,"byte_end":135307,"line_start":472,"line_end":472,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135312,"byte_end":135319,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135324,"byte_end":135327,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135332,"byte_end":135380,"line_start":475,"line_end":475,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135385,"byte_end":135429,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135434,"byte_end":135443,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135448,"byte_end":135455,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136589,"byte_end":136594,"line_start":516,"line_end":516,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135628,"byte_end":135679,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135684,"byte_end":135719,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135724,"byte_end":135727,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135732,"byte_end":135786,"line_start":489,"line_end":489,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135791,"byte_end":135848,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135853,"byte_end":135889,"line_start":491,"line_end":491,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135894,"byte_end":135897,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135902,"byte_end":135970,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135975,"byte_end":135978,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":135983,"byte_end":135997,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136002,"byte_end":136005,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136010,"byte_end":136017,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136022,"byte_end":136063,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136068,"byte_end":136099,"line_start":499,"line_end":499,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136104,"byte_end":136139,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136144,"byte_end":136164,"line_start":501,"line_end":501,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136169,"byte_end":136172,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136177,"byte_end":136214,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136219,"byte_end":136222,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136227,"byte_end":136254,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136259,"byte_end":136302,"line_start":506,"line_end":506,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136307,"byte_end":136350,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136355,"byte_end":136398,"line_start":508,"line_end":508,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136403,"byte_end":136410,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136415,"byte_end":136418,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136423,"byte_end":136477,"line_start":511,"line_end":511,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136482,"byte_end":136516,"line_start":512,"line_end":512,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136521,"byte_end":136555,"line_start":513,"line_end":513,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136560,"byte_end":136569,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136574,"byte_end":136581,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137890,"byte_end":137896,"line_start":557,"line_end":557,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136855,"byte_end":136917,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136922,"byte_end":136986,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136991,"byte_end":136994,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":136999,"byte_end":137063,"line_start":528,"line_end":528,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137068,"byte_end":137133,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137138,"byte_end":137184,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137189,"byte_end":137192,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137197,"byte_end":137246,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137251,"byte_end":137291,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137296,"byte_end":137299,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137304,"byte_end":137318,"line_start":535,"line_end":535,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137323,"byte_end":137326,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137331,"byte_end":137338,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137343,"byte_end":137384,"line_start":538,"line_end":538,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137389,"byte_end":137420,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137425,"byte_end":137460,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137465,"byte_end":137485,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137490,"byte_end":137493,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137498,"byte_end":137535,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137540,"byte_end":137543,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137548,"byte_end":137575,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137580,"byte_end":137611,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137616,"byte_end":137642,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137647,"byte_end":137713,"line_start":548,"line_end":548,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137718,"byte_end":137727,"line_start":549,"line_end":549,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137732,"byte_end":137739,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137744,"byte_end":137747,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137752,"byte_end":137787,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137792,"byte_end":137795,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137800,"byte_end":137856,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137861,"byte_end":137870,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":137875,"byte_end":137882,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138960,"byte_end":138965,"line_start":588,"line_end":588,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138126,"byte_end":138157,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138162,"byte_end":138165,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138170,"byte_end":138237,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138242,"byte_end":138314,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138319,"byte_end":138376,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138381,"byte_end":138384,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138389,"byte_end":138403,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138408,"byte_end":138411,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138416,"byte_end":138423,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138428,"byte_end":138469,"line_start":574,"line_end":574,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138474,"byte_end":138517,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138522,"byte_end":138544,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138549,"byte_end":138596,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138601,"byte_end":138604,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138609,"byte_end":138650,"line_start":579,"line_end":579,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138655,"byte_end":138696,"line_start":580,"line_end":580,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138701,"byte_end":138742,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138747,"byte_end":138788,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138793,"byte_end":138834,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138839,"byte_end":138880,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138885,"byte_end":138926,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138931,"byte_end":138940,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":138945,"byte_end":138952,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139915,"byte_end":139919,"line_start":615,"line_end":615,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139100,"byte_end":139167,"line_start":595,"line_end":595,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139172,"byte_end":139224,"line_start":596,"line_end":596,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139229,"byte_end":139232,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139237,"byte_end":139307,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139312,"byte_end":139388,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139393,"byte_end":139469,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139474,"byte_end":139544,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139549,"byte_end":139575,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139580,"byte_end":139583,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139588,"byte_end":139602,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139607,"byte_end":139610,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139615,"byte_end":139622,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139627,"byte_end":139668,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139673,"byte_end":139716,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139721,"byte_end":139724,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139729,"byte_end":139772,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139777,"byte_end":139846,"line_start":611,"line_end":611,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139851,"byte_end":139881,"line_start":612,"line_end":612,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139886,"byte_end":139895,"line_start":613,"line_end":613,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":139900,"byte_end":139907,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141113,"byte_end":141120,"line_start":655,"line_end":655,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140154,"byte_end":140219,"line_start":624,"line_end":624,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140224,"byte_end":140227,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140232,"byte_end":140246,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140251,"byte_end":140254,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140259,"byte_end":140266,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140271,"byte_end":140312,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140317,"byte_end":140348,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140353,"byte_end":140388,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140393,"byte_end":140413,"line_start":632,"line_end":632,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140418,"byte_end":140421,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140426,"byte_end":140465,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140470,"byte_end":140509,"line_start":635,"line_end":635,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140514,"byte_end":140553,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140558,"byte_end":140561,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140566,"byte_end":140593,"line_start":638,"line_end":638,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140598,"byte_end":140637,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140642,"byte_end":140681,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140686,"byte_end":140693,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140698,"byte_end":140725,"line_start":642,"line_end":642,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140730,"byte_end":140769,"line_start":643,"line_end":643,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140774,"byte_end":140813,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140818,"byte_end":140825,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140830,"byte_end":140857,"line_start":646,"line_end":646,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140862,"byte_end":140903,"line_start":647,"line_end":647,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140908,"byte_end":140949,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140954,"byte_end":140961,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140966,"byte_end":140969,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":140974,"byte_end":141033,"line_start":651,"line_end":651,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141038,"byte_end":141079,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141084,"byte_end":141093,"line_start":653,"line_end":653,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141098,"byte_end":141105,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142382,"byte_end":142390,"line_start":688,"line_end":688,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141297,"byte_end":141369,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141374,"byte_end":141377,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141382,"byte_end":141459,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141464,"byte_end":141539,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141544,"byte_end":141620,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141625,"byte_end":141628,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141633,"byte_end":141715,"line_start":669,"line_end":669,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141720,"byte_end":141803,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141808,"byte_end":141811,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141816,"byte_end":141892,"line_start":672,"line_end":672,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141897,"byte_end":141973,"line_start":673,"line_end":673,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":141978,"byte_end":141999,"line_start":674,"line_end":674,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142004,"byte_end":142007,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142012,"byte_end":142026,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142031,"byte_end":142034,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142039,"byte_end":142046,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142051,"byte_end":142092,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142097,"byte_end":142140,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142145,"byte_end":142148,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142153,"byte_end":142190,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142195,"byte_end":142262,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142267,"byte_end":142270,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142275,"byte_end":142348,"line_start":685,"line_end":685,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142353,"byte_end":142362,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142367,"byte_end":142374,"line_start":687,"line_end":687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143402,"byte_end":143406,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142593,"byte_end":142664,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142669,"byte_end":142699,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142704,"byte_end":142707,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142712,"byte_end":142787,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142792,"byte_end":142863,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142868,"byte_end":142908,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142913,"byte_end":142916,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142921,"byte_end":142935,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142940,"byte_end":142943,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142948,"byte_end":142955,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":142960,"byte_end":143001,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143006,"byte_end":143030,"line_start":708,"line_end":708,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143035,"byte_end":143078,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143083,"byte_end":143086,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143091,"byte_end":143129,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143134,"byte_end":143137,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143142,"byte_end":143186,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143191,"byte_end":143211,"line_start":714,"line_end":714,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143216,"byte_end":143279,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143284,"byte_end":143291,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143296,"byte_end":143299,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143304,"byte_end":143368,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143373,"byte_end":143382,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143387,"byte_end":143394,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144453,"byte_end":144463,"line_start":752,"line_end":752,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143675,"byte_end":143749,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143754,"byte_end":143777,"line_start":731,"line_end":731,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143782,"byte_end":143785,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143790,"byte_end":143863,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143868,"byte_end":143940,"line_start":734,"line_end":734,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":143945,"byte_end":144022,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144027,"byte_end":144038,"line_start":736,"line_end":736,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144043,"byte_end":144046,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144051,"byte_end":144065,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144070,"byte_end":144073,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144078,"byte_end":144085,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144090,"byte_end":144131,"line_start":741,"line_end":741,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144136,"byte_end":144160,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144165,"byte_end":144208,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144213,"byte_end":144216,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144221,"byte_end":144259,"line_start":745,"line_end":745,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144264,"byte_end":144267,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144272,"byte_end":144335,"line_start":747,"line_end":747,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144340,"byte_end":144343,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144348,"byte_end":144419,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144424,"byte_end":144433,"line_start":750,"line_end":750,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144438,"byte_end":144445,"line_start":751,"line_end":751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145452,"byte_end":145462,"line_start":782,"line_end":782,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144697,"byte_end":144773,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144778,"byte_end":144801,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144806,"byte_end":144809,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144814,"byte_end":144889,"line_start":764,"line_end":764,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144894,"byte_end":144966,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":144971,"byte_end":145038,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145043,"byte_end":145046,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145051,"byte_end":145065,"line_start":768,"line_end":768,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145070,"byte_end":145073,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145078,"byte_end":145085,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145090,"byte_end":145131,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145136,"byte_end":145160,"line_start":772,"line_end":772,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145165,"byte_end":145208,"line_start":773,"line_end":773,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145213,"byte_end":145216,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145221,"byte_end":145259,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145264,"byte_end":145267,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145272,"byte_end":145335,"line_start":777,"line_end":777,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145340,"byte_end":145343,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145348,"byte_end":145418,"line_start":779,"line_end":779,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145423,"byte_end":145432,"line_start":780,"line_end":780,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145437,"byte_end":145444,"line_start":781,"line_end":781,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146978,"byte_end":146988,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145696,"byte_end":145766,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145771,"byte_end":145774,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145779,"byte_end":145850,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145855,"byte_end":145927,"line_start":794,"line_end":794,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":145932,"byte_end":146002,"line_start":795,"line_end":795,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146007,"byte_end":146010,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146015,"byte_end":146086,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146091,"byte_end":146177,"line_start":798,"line_end":798,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146182,"byte_end":146249,"line_start":799,"line_end":799,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146254,"byte_end":146318,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146323,"byte_end":146326,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146331,"byte_end":146345,"line_start":802,"line_end":802,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146350,"byte_end":146353,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146358,"byte_end":146365,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146370,"byte_end":146411,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146416,"byte_end":146440,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146445,"byte_end":146488,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146493,"byte_end":146521,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146526,"byte_end":146529,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146534,"byte_end":146572,"line_start":810,"line_end":810,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146577,"byte_end":146580,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146585,"byte_end":146603,"line_start":812,"line_end":812,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146608,"byte_end":146650,"line_start":813,"line_end":813,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146655,"byte_end":146670,"line_start":814,"line_end":814,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146675,"byte_end":146694,"line_start":815,"line_end":815,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146699,"byte_end":146724,"line_start":816,"line_end":816,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146729,"byte_end":146745,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146750,"byte_end":146777,"line_start":818,"line_end":818,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146782,"byte_end":146791,"line_start":819,"line_end":819,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146796,"byte_end":146803,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146808,"byte_end":146811,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146816,"byte_end":146861,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146866,"byte_end":146869,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146874,"byte_end":146944,"line_start":824,"line_end":824,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146949,"byte_end":146958,"line_start":825,"line_end":825,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":146963,"byte_end":146970,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148227,"byte_end":148235,"line_start":868,"line_end":868,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147169,"byte_end":147240,"line_start":835,"line_end":835,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147245,"byte_end":147288,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147293,"byte_end":147296,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147301,"byte_end":147376,"line_start":838,"line_end":838,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147381,"byte_end":147451,"line_start":839,"line_end":839,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147456,"byte_end":147494,"line_start":840,"line_end":840,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147499,"byte_end":147502,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147507,"byte_end":147582,"line_start":842,"line_end":842,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147587,"byte_end":147630,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147635,"byte_end":147638,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147643,"byte_end":147716,"line_start":845,"line_end":845,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147721,"byte_end":147764,"line_start":846,"line_end":846,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147769,"byte_end":147772,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147777,"byte_end":147791,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147796,"byte_end":147799,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147804,"byte_end":147811,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147816,"byte_end":147857,"line_start":851,"line_end":851,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147862,"byte_end":147886,"line_start":852,"line_end":852,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147891,"byte_end":147934,"line_start":853,"line_end":853,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147939,"byte_end":147942,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147947,"byte_end":147965,"line_start":855,"line_end":855,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147970,"byte_end":147973,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147978,"byte_end":147983,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":147988,"byte_end":148049,"line_start":858,"line_end":858,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148054,"byte_end":148076,"line_start":859,"line_end":859,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148081,"byte_end":148110,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148115,"byte_end":148126,"line_start":861,"line_end":861,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148131,"byte_end":148149,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148154,"byte_end":148159,"line_start":863,"line_end":863,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148164,"byte_end":148167,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148172,"byte_end":148193,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148198,"byte_end":148207,"line_start":866,"line_end":866,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":148212,"byte_end":148219,"line_start":867,"line_end":867,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151285,"byte_end":151289,"line_start":953,"line_end":953,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":150777,"byte_end":150848,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":150853,"byte_end":150856,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":150861,"byte_end":150934,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":150939,"byte_end":150974,"line_start":940,"line_end":940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":150979,"byte_end":150982,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":150987,"byte_end":151001,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151006,"byte_end":151009,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151014,"byte_end":151021,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151026,"byte_end":151067,"line_start":945,"line_end":945,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151072,"byte_end":151115,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151120,"byte_end":151123,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151128,"byte_end":151174,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151179,"byte_end":151182,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151187,"byte_end":151251,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151256,"byte_end":151265,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151270,"byte_end":151277,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151954,"byte_end":151958,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151427,"byte_end":151499,"line_start":960,"line_end":960,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151504,"byte_end":151507,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151512,"byte_end":151585,"line_start":962,"line_end":962,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151590,"byte_end":151636,"line_start":963,"line_end":963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151641,"byte_end":151644,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151649,"byte_end":151663,"line_start":965,"line_end":965,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151668,"byte_end":151671,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151676,"byte_end":151683,"line_start":967,"line_end":967,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151688,"byte_end":151729,"line_start":968,"line_end":968,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151734,"byte_end":151777,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151782,"byte_end":151785,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151790,"byte_end":151836,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151841,"byte_end":151844,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151849,"byte_end":151920,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151925,"byte_end":151934,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":151939,"byte_end":151946,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153579,"byte_end":153583,"line_start":1022,"line_end":1022,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152096,"byte_end":152167,"line_start":983,"line_end":983,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152172,"byte_end":152245,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152250,"byte_end":152288,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152293,"byte_end":152296,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152301,"byte_end":152355,"line_start":987,"line_end":987,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152360,"byte_end":152432,"line_start":988,"line_end":988,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152437,"byte_end":152513,"line_start":989,"line_end":989,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152518,"byte_end":152586,"line_start":990,"line_end":990,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152591,"byte_end":152667,"line_start":991,"line_end":991,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152672,"byte_end":152694,"line_start":992,"line_end":992,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152699,"byte_end":152702,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152707,"byte_end":152774,"line_start":994,"line_end":994,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152779,"byte_end":152847,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152852,"byte_end":152865,"line_start":996,"line_end":996,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152870,"byte_end":152873,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152878,"byte_end":152892,"line_start":998,"line_end":998,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152897,"byte_end":152900,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152905,"byte_end":152912,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152917,"byte_end":152960,"line_start":1001,"line_end":1001,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":152965,"byte_end":153008,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153013,"byte_end":153041,"line_start":1003,"line_end":1003,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153046,"byte_end":153049,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153054,"byte_end":153072,"line_start":1005,"line_end":1005,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153077,"byte_end":153115,"line_start":1006,"line_end":1006,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153120,"byte_end":153135,"line_start":1007,"line_end":1007,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153140,"byte_end":153157,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153162,"byte_end":153204,"line_start":1009,"line_end":1009,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153209,"byte_end":153244,"line_start":1010,"line_end":1010,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153249,"byte_end":153293,"line_start":1011,"line_end":1011,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153298,"byte_end":153307,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153312,"byte_end":153326,"line_start":1013,"line_end":1013,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153331,"byte_end":153334,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153339,"byte_end":153382,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153387,"byte_end":153424,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153429,"byte_end":153466,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153471,"byte_end":153505,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153510,"byte_end":153544,"line_start":1019,"line_end":1019,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153549,"byte_end":153559,"line_start":1020,"line_end":1020,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153564,"byte_end":153571,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154512,"byte_end":154518,"line_start":1055,"line_end":1055,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153708,"byte_end":153755,"line_start":1029,"line_end":1029,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153760,"byte_end":153763,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153768,"byte_end":153842,"line_start":1031,"line_end":1031,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153847,"byte_end":153884,"line_start":1032,"line_end":1032,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153889,"byte_end":153892,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153897,"byte_end":153911,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153916,"byte_end":153919,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153924,"byte_end":153931,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153936,"byte_end":153977,"line_start":1037,"line_end":1037,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":153982,"byte_end":154025,"line_start":1038,"line_end":1038,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154030,"byte_end":154033,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154038,"byte_end":154078,"line_start":1040,"line_end":1040,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154083,"byte_end":154086,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154091,"byte_end":154120,"line_start":1042,"line_end":1042,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154125,"byte_end":154153,"line_start":1043,"line_end":1043,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154158,"byte_end":154215,"line_start":1044,"line_end":1044,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154220,"byte_end":154247,"line_start":1045,"line_end":1045,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154252,"byte_end":154275,"line_start":1046,"line_end":1046,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154280,"byte_end":154283,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154288,"byte_end":154323,"line_start":1048,"line_end":1048,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154328,"byte_end":154356,"line_start":1049,"line_end":1049,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154361,"byte_end":154418,"line_start":1050,"line_end":1050,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154423,"byte_end":154450,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154455,"byte_end":154478,"line_start":1052,"line_end":1052,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154483,"byte_end":154492,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":154497,"byte_end":154504,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160718,"byte_end":160721,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160030,"byte_end":160078,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160083,"byte_end":160086,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160091,"byte_end":160164,"line_start":1202,"line_end":1202,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160169,"byte_end":160241,"line_start":1203,"line_end":1203,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160246,"byte_end":160259,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160264,"byte_end":160267,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160272,"byte_end":160286,"line_start":1206,"line_end":1206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160291,"byte_end":160294,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160299,"byte_end":160306,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160311,"byte_end":160352,"line_start":1209,"line_end":1209,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160357,"byte_end":160400,"line_start":1210,"line_end":1210,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160405,"byte_end":160408,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160413,"byte_end":160451,"line_start":1212,"line_end":1212,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160456,"byte_end":160495,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160500,"byte_end":160503,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160508,"byte_end":160542,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160547,"byte_end":160588,"line_start":1216,"line_end":1216,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160593,"byte_end":160621,"line_start":1217,"line_end":1217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160626,"byte_end":160676,"line_start":1218,"line_end":1218,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160681,"byte_end":160690,"line_start":1219,"line_end":1219,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160695,"byte_end":160702,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160707,"byte_end":160710,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161629,"byte_end":161634,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160902,"byte_end":160939,"line_start":1230,"line_end":1230,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160944,"byte_end":160947,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":160952,"byte_end":161023,"line_start":1232,"line_end":1232,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161028,"byte_end":161104,"line_start":1233,"line_end":1233,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161109,"byte_end":161112,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161117,"byte_end":161124,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161129,"byte_end":161170,"line_start":1236,"line_end":1236,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161175,"byte_end":161218,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161223,"byte_end":161226,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161231,"byte_end":161288,"line_start":1239,"line_end":1239,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161293,"byte_end":161349,"line_start":1240,"line_end":1240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161354,"byte_end":161357,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161362,"byte_end":161402,"line_start":1242,"line_end":1242,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161407,"byte_end":161410,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161415,"byte_end":161463,"line_start":1244,"line_end":1244,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161468,"byte_end":161496,"line_start":1245,"line_end":1245,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161501,"byte_end":161516,"line_start":1246,"line_end":1246,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161521,"byte_end":161540,"line_start":1247,"line_end":1247,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161545,"byte_end":161563,"line_start":1248,"line_end":1248,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161568,"byte_end":161583,"line_start":1249,"line_end":1249,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161588,"byte_end":161595,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161600,"byte_end":161609,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161614,"byte_end":161621,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161972,"byte_end":161980,"line_start":1264,"line_end":1264,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161826,"byte_end":161881,"line_start":1261,"line_end":1261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161886,"byte_end":161889,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":161894,"byte_end":161964,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":166852,"byte_end":166859,"line_start":1375,"line_end":1375,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":166549,"byte_end":166622,"line_start":1370,"line_end":1370,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":166627,"byte_end":166630,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":166635,"byte_end":166704,"line_start":1372,"line_end":1372,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":166709,"byte_end":166778,"line_start":1373,"line_end":1373,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":166783,"byte_end":166844,"line_start":1374,"line_end":1374,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167315,"byte_end":167326,"line_start":1388,"line_end":1388,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167036,"byte_end":167111,"line_start":1383,"line_end":1383,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167116,"byte_end":167137,"line_start":1384,"line_end":1384,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167142,"byte_end":167145,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167150,"byte_end":167230,"line_start":1386,"line_end":1386,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167235,"byte_end":167307,"line_start":1387,"line_end":1387,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167779,"byte_end":167791,"line_start":1401,"line_end":1401,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167500,"byte_end":167576,"line_start":1396,"line_end":1396,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167581,"byte_end":167602,"line_start":1397,"line_end":1397,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167607,"byte_end":167610,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167615,"byte_end":167694,"line_start":1399,"line_end":1399,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167699,"byte_end":167771,"line_start":1400,"line_end":1400,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168067,"byte_end":168082,"line_start":1411,"line_end":1411,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":167966,"byte_end":168037,"line_start":1409,"line_end":1409,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168042,"byte_end":168059,"line_start":1410,"line_end":1410,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":170183,"byte_end":170199,"line_start":1466,"line_end":1466,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168229,"byte_end":168304,"line_start":1418,"line_end":1418,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168309,"byte_end":168319,"line_start":1419,"line_end":1419,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168324,"byte_end":168327,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168332,"byte_end":168405,"line_start":1421,"line_end":1421,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168410,"byte_end":168478,"line_start":1422,"line_end":1422,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168483,"byte_end":168531,"line_start":1423,"line_end":1423,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168536,"byte_end":168611,"line_start":1424,"line_end":1424,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168616,"byte_end":168692,"line_start":1425,"line_end":1425,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168697,"byte_end":168723,"line_start":1426,"line_end":1426,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168728,"byte_end":168731,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168736,"byte_end":168809,"line_start":1428,"line_end":1428,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168814,"byte_end":168884,"line_start":1429,"line_end":1429,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168889,"byte_end":168929,"line_start":1430,"line_end":1430,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168934,"byte_end":168937,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":168942,"byte_end":168996,"line_start":1432,"line_end":1432,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169001,"byte_end":169085,"line_start":1433,"line_end":1433,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169090,"byte_end":169093,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169098,"byte_end":169112,"line_start":1435,"line_end":1435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169117,"byte_end":169120,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169125,"byte_end":169132,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169137,"byte_end":169178,"line_start":1438,"line_end":1438,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169183,"byte_end":169217,"line_start":1439,"line_end":1439,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169222,"byte_end":169277,"line_start":1440,"line_end":1440,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169282,"byte_end":169285,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169290,"byte_end":169325,"line_start":1442,"line_end":1442,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169330,"byte_end":169380,"line_start":1443,"line_end":1443,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169385,"byte_end":169407,"line_start":1444,"line_end":1444,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169412,"byte_end":169422,"line_start":1445,"line_end":1445,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169427,"byte_end":169444,"line_start":1446,"line_end":1446,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169449,"byte_end":169475,"line_start":1447,"line_end":1447,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169480,"byte_end":169535,"line_start":1448,"line_end":1448,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169540,"byte_end":169569,"line_start":1449,"line_end":1449,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169574,"byte_end":169637,"line_start":1450,"line_end":1450,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169642,"byte_end":169688,"line_start":1451,"line_end":1451,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169693,"byte_end":169707,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169712,"byte_end":169781,"line_start":1453,"line_end":1453,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169786,"byte_end":169811,"line_start":1454,"line_end":1454,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169816,"byte_end":169869,"line_start":1455,"line_end":1455,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169874,"byte_end":169903,"line_start":1456,"line_end":1456,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169908,"byte_end":169921,"line_start":1457,"line_end":1457,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":169926,"byte_end":169996,"line_start":1458,"line_end":1458,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":170001,"byte_end":170060,"line_start":1459,"line_end":1459,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":170065,"byte_end":170095,"line_start":1460,"line_end":1460,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":170100,"byte_end":170109,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":170114,"byte_end":170119,"line_start":1462,"line_end":1462,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":170124,"byte_end":170149,"line_start":1463,"line_end":1463,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":170154,"byte_end":170163,"line_start":1464,"line_end":1464,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":170168,"byte_end":170175,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6625},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":277298,"byte_end":277305,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":6629},{"krate":0,"index":6630},{"krate":0,"index":6631}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6689},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":241398,"byte_end":241405,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":6692}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6758},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":241653,"byte_end":241662,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":6761}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6827},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":241963,"byte_end":241973,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":6830}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6898},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/into_stream.rs","byte_start":280106,"byte_end":280116,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":6900}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6936},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":242399,"byte_end":242404,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":6939}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7005},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":242681,"byte_end":242687,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":7008}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7071},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":281487,"byte_end":281493,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7075},{"krate":0,"index":7076},{"krate":0,"index":7077}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7132},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284389,"byte_end":284396,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":7135}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284222,"byte_end":284292,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284310,"byte_end":284377,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7140},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_for_each.rs","byte_start":285504,"byte_end":285514,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":7144},{"krate":0,"index":7145},{"krate":0,"index":7146}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7197},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":287457,"byte_end":287466,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":7201},{"krate":0,"index":7202},{"krate":0,"index":7203},{"krate":0,"index":7204}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7262},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":290706,"byte_end":290718,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7266},{"krate":0,"index":7267},{"krate":0,"index":7268}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7328},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_flatten.rs","byte_start":293770,"byte_end":293780,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7330},{"krate":0,"index":7331}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7374},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_collect.rs","byte_start":295958,"byte_end":295968,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":7377},{"krate":0,"index":7378}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7421},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_concat.rs","byte_start":297373,"byte_end":297382,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":7423},{"krate":0,"index":7424}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7456},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":298829,"byte_end":298836,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7461},{"krate":0,"index":7462},{"krate":0,"index":7463},{"krate":0,"index":7464}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2014},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303365,"byte_end":303375,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301508,"byte_end":301584,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301585,"byte_end":301588,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301589,"byte_end":301665,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301666,"byte_end":301736,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301737,"byte_end":301796,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301797,"byte_end":301800,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301801,"byte_end":301879,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301880,"byte_end":301957,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":301958,"byte_end":302022,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302023,"byte_end":302026,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302027,"byte_end":302099,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302100,"byte_end":302178,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302179,"byte_end":302208,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302209,"byte_end":302212,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302213,"byte_end":302290,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302291,"byte_end":302355,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302356,"byte_end":302408,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302409,"byte_end":302412,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302413,"byte_end":302490,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302491,"byte_end":302563,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302564,"byte_end":302633,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302634,"byte_end":302712,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302713,"byte_end":302716,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302717,"byte_end":302730,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302731,"byte_end":302734,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302735,"byte_end":302742,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302743,"byte_end":302776,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302777,"byte_end":302800,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302801,"byte_end":302842,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302843,"byte_end":302889,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302890,"byte_end":302893,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302894,"byte_end":302953,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302954,"byte_end":302976,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":302977,"byte_end":303011,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303012,"byte_end":303021,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303022,"byte_end":303025,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303026,"byte_end":303049,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303050,"byte_end":303089,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303090,"byte_end":303126,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303127,"byte_end":303170,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303171,"byte_end":303187,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303188,"byte_end":303208,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303209,"byte_end":303218,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303219,"byte_end":303226,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303227,"byte_end":303230,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303231,"byte_end":303296,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303297,"byte_end":303339,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303340,"byte_end":303349,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303350,"byte_end":303357,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7525},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303767,"byte_end":303776,"line_start":74,"line_end":74,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7529},{"krate":0,"index":7530},{"krate":0,"index":7531}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7582},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":305746,"byte_end":305758,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7586},{"krate":0,"index":7587},{"krate":0,"index":7588},{"krate":0,"index":7589},{"krate":0,"index":7590}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7651},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":309430,"byte_end":309442,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7657},{"krate":0,"index":7658},{"krate":0,"index":7659}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2108},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245573,"byte_end":245585,"line_start":144,"line_end":144,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2143},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2152},{"krate":0,"index":2153}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245511,"byte_end":245562,"line_start":143,"line_end":143,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246127,"byte_end":246135,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245603,"byte_end":245677,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245682,"byte_end":245708,"line_start":146,"line_end":146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245713,"byte_end":245716,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245721,"byte_end":245735,"line_start":148,"line_end":148,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245740,"byte_end":245743,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245748,"byte_end":245755,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245760,"byte_end":245801,"line_start":151,"line_end":151,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245806,"byte_end":245852,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245857,"byte_end":245860,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245865,"byte_end":245885,"line_start":154,"line_end":154,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245890,"byte_end":245935,"line_start":155,"line_end":155,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245940,"byte_end":245971,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245976,"byte_end":245979,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245984,"byte_end":246038,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246043,"byte_end":246094,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246099,"byte_end":246107,"line_start":160,"line_end":160,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246112,"byte_end":246119,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246831,"byte_end":246837,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246311,"byte_end":246384,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246389,"byte_end":246420,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246425,"byte_end":246428,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246433,"byte_end":246447,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246452,"byte_end":246455,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246460,"byte_end":246467,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246472,"byte_end":246513,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246518,"byte_end":246564,"line_start":177,"line_end":177,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246569,"byte_end":246572,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246577,"byte_end":246597,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246602,"byte_end":246643,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246648,"byte_end":246679,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246684,"byte_end":246687,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246692,"byte_end":246745,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246750,"byte_end":246798,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246803,"byte_end":246811,"line_start":185,"line_end":185,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":246816,"byte_end":246823,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247546,"byte_end":247553,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247027,"byte_end":247098,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247103,"byte_end":247134,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247139,"byte_end":247142,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247147,"byte_end":247161,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247166,"byte_end":247169,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247174,"byte_end":247181,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247186,"byte_end":247227,"line_start":201,"line_end":201,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247232,"byte_end":247278,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247283,"byte_end":247286,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247291,"byte_end":247311,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247316,"byte_end":247357,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247362,"byte_end":247394,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247399,"byte_end":247402,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247407,"byte_end":247460,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247465,"byte_end":247513,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247518,"byte_end":247526,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247531,"byte_end":247538,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249158,"byte_end":249166,"line_start":258,"line_end":258,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247745,"byte_end":247821,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247826,"byte_end":247866,"line_start":221,"line_end":221,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247871,"byte_end":247874,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247879,"byte_end":247955,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":247960,"byte_end":248036,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248041,"byte_end":248114,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248119,"byte_end":248161,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248166,"byte_end":248169,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248174,"byte_end":248247,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248252,"byte_end":248283,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248288,"byte_end":248291,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248296,"byte_end":248370,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248375,"byte_end":248449,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248454,"byte_end":248470,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248475,"byte_end":248478,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248483,"byte_end":248554,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248559,"byte_end":248585,"line_start":236,"line_end":236,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248590,"byte_end":248593,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248598,"byte_end":248670,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248675,"byte_end":248724,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248729,"byte_end":248732,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248737,"byte_end":248751,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248756,"byte_end":248759,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248764,"byte_end":248771,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248776,"byte_end":248807,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248812,"byte_end":248836,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248841,"byte_end":248879,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248884,"byte_end":248887,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248892,"byte_end":248948,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248953,"byte_end":248956,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":248961,"byte_end":248996,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249001,"byte_end":249040,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249045,"byte_end":249069,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249074,"byte_end":249090,"line_start":253,"line_end":253,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249095,"byte_end":249111,"line_start":254,"line_end":254,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249116,"byte_end":249126,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249131,"byte_end":249138,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249143,"byte_end":249150,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250318,"byte_end":250325,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249419,"byte_end":249484,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249489,"byte_end":249538,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249543,"byte_end":249546,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249551,"byte_end":249630,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249635,"byte_end":249709,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249714,"byte_end":249790,"line_start":272,"line_end":272,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249795,"byte_end":249840,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249845,"byte_end":249848,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249853,"byte_end":249928,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249933,"byte_end":249973,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249978,"byte_end":249981,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":249986,"byte_end":250095,"line_start":278,"line_end":278,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250100,"byte_end":250174,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250179,"byte_end":250195,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250200,"byte_end":250203,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250208,"byte_end":250279,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250284,"byte_end":250310,"line_start":283,"line_end":283,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250877,"byte_end":250887,"line_start":299,"line_end":299,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250574,"byte_end":250648,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250653,"byte_end":250663,"line_start":294,"line_end":294,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250668,"byte_end":250671,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250676,"byte_end":250746,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250751,"byte_end":250827,"line_start":297,"line_end":297,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":250832,"byte_end":250869,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251376,"byte_end":251387,"line_start":312,"line_end":312,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251085,"byte_end":251164,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251169,"byte_end":251172,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251177,"byte_end":251247,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251252,"byte_end":251326,"line_start":310,"line_end":310,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251331,"byte_end":251368,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252308,"byte_end":252319,"line_start":341,"line_end":341,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251590,"byte_end":251643,"line_start":320,"line_end":320,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251648,"byte_end":251692,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251697,"byte_end":251700,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251705,"byte_end":251754,"line_start":323,"line_end":323,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251759,"byte_end":251832,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251837,"byte_end":251857,"line_start":325,"line_end":325,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251862,"byte_end":251865,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251870,"byte_end":251884,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251889,"byte_end":251892,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251897,"byte_end":251904,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251909,"byte_end":251968,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251973,"byte_end":251976,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":251981,"byte_end":252000,"line_start":332,"line_end":332,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252005,"byte_end":252023,"line_start":333,"line_end":333,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252028,"byte_end":252100,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252105,"byte_end":252135,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252140,"byte_end":252147,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252152,"byte_end":252226,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252231,"byte_end":252234,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252239,"byte_end":252288,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252293,"byte_end":252300,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253214,"byte_end":253222,"line_start":368,"line_end":368,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252475,"byte_end":252549,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252554,"byte_end":252628,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252633,"byte_end":252645,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252650,"byte_end":252653,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252658,"byte_end":252725,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252730,"byte_end":252802,"line_start":353,"line_end":353,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252807,"byte_end":252846,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252851,"byte_end":252854,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252859,"byte_end":252873,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252878,"byte_end":252881,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252886,"byte_end":252893,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252898,"byte_end":252939,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252944,"byte_end":252990,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":252995,"byte_end":252998,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253003,"byte_end":253060,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253065,"byte_end":253068,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253073,"byte_end":253127,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253132,"byte_end":253181,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253186,"byte_end":253194,"line_start":366,"line_end":366,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253199,"byte_end":253206,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254574,"byte_end":254586,"line_start":408,"line_end":408,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253389,"byte_end":253458,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253463,"byte_end":253519,"line_start":376,"line_end":376,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253524,"byte_end":253527,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253532,"byte_end":253607,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253612,"byte_end":253682,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253687,"byte_end":253725,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253730,"byte_end":253733,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253738,"byte_end":253816,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253821,"byte_end":253881,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253886,"byte_end":253943,"line_start":384,"line_end":384,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":253948,"byte_end":254015,"line_start":385,"line_end":385,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254020,"byte_end":254050,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254055,"byte_end":254058,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254063,"byte_end":254077,"line_start":388,"line_end":388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254082,"byte_end":254085,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254090,"byte_end":254097,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254102,"byte_end":254143,"line_start":391,"line_end":391,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254148,"byte_end":254172,"line_start":392,"line_end":392,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254177,"byte_end":254223,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254228,"byte_end":254231,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254236,"byte_end":254257,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254262,"byte_end":254265,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254270,"byte_end":254275,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254280,"byte_end":254341,"line_start":398,"line_end":398,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254346,"byte_end":254368,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254373,"byte_end":254437,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254442,"byte_end":254453,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254458,"byte_end":254497,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254502,"byte_end":254507,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254512,"byte_end":254515,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254520,"byte_end":254541,"line_start":405,"line_end":405,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254546,"byte_end":254554,"line_start":406,"line_end":406,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254559,"byte_end":254566,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255599,"byte_end":255613,"line_start":438,"line_end":438,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254850,"byte_end":254924,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254929,"byte_end":254952,"line_start":418,"line_end":418,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254957,"byte_end":254960,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":254965,"byte_end":254996,"line_start":420,"line_end":420,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255001,"byte_end":255078,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255083,"byte_end":255112,"line_start":422,"line_end":422,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255117,"byte_end":255120,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255125,"byte_end":255139,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255144,"byte_end":255147,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255152,"byte_end":255159,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255164,"byte_end":255205,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255210,"byte_end":255234,"line_start":428,"line_end":428,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255239,"byte_end":255285,"line_start":429,"line_end":429,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255290,"byte_end":255293,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255298,"byte_end":255367,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255372,"byte_end":255442,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255447,"byte_end":255450,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255455,"byte_end":255522,"line_start":434,"line_end":434,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255527,"byte_end":255566,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255571,"byte_end":255579,"line_start":436,"line_end":436,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255584,"byte_end":255591,"line_start":437,"line_end":437,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256646,"byte_end":256660,"line_start":468,"line_end":468,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255890,"byte_end":255964,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255969,"byte_end":255992,"line_start":448,"line_end":448,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":255997,"byte_end":256000,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256005,"byte_end":256036,"line_start":450,"line_end":450,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256041,"byte_end":256118,"line_start":451,"line_end":451,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256123,"byte_end":256152,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256157,"byte_end":256160,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256165,"byte_end":256179,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256184,"byte_end":256187,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256192,"byte_end":256199,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256204,"byte_end":256245,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256250,"byte_end":256274,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256279,"byte_end":256325,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256330,"byte_end":256333,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256338,"byte_end":256414,"line_start":461,"line_end":461,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256419,"byte_end":256489,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256494,"byte_end":256497,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256502,"byte_end":256569,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256574,"byte_end":256613,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256618,"byte_end":256626,"line_start":466,"line_end":466,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":256631,"byte_end":256638,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260091,"byte_end":260102,"line_start":567,"line_end":567,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259052,"byte_end":259104,"line_start":537,"line_end":537,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259109,"byte_end":259176,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259181,"byte_end":259184,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259189,"byte_end":259263,"line_start":540,"line_end":540,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259268,"byte_end":259349,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259354,"byte_end":259424,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259429,"byte_end":259432,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259437,"byte_end":259505,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259510,"byte_end":259513,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259518,"byte_end":259532,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259537,"byte_end":259540,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259545,"byte_end":259552,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259557,"byte_end":259598,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259603,"byte_end":259634,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259639,"byte_end":259677,"line_start":551,"line_end":551,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259682,"byte_end":259702,"line_start":552,"line_end":552,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259707,"byte_end":259710,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259715,"byte_end":259752,"line_start":554,"line_end":554,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259757,"byte_end":259760,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259765,"byte_end":259792,"line_start":556,"line_end":556,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259797,"byte_end":259821,"line_start":557,"line_end":557,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259826,"byte_end":259872,"line_start":558,"line_end":558,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259877,"byte_end":259886,"line_start":559,"line_end":559,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259891,"byte_end":259934,"line_start":560,"line_end":560,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259939,"byte_end":259946,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259951,"byte_end":259954,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":259959,"byte_end":260022,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260027,"byte_end":260058,"line_start":564,"line_end":564,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260063,"byte_end":260071,"line_start":565,"line_end":565,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260076,"byte_end":260083,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261573,"byte_end":261583,"line_start":604,"line_end":604,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260285,"byte_end":260358,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260363,"byte_end":260397,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260402,"byte_end":260405,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260410,"byte_end":260485,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260490,"byte_end":260565,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260570,"byte_end":260643,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260648,"byte_end":260719,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260724,"byte_end":260774,"line_start":581,"line_end":581,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260779,"byte_end":260782,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260787,"byte_end":260858,"line_start":583,"line_end":583,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260863,"byte_end":260866,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260871,"byte_end":260947,"line_start":585,"line_end":585,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":260952,"byte_end":261022,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261027,"byte_end":261052,"line_start":587,"line_end":587,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261057,"byte_end":261060,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261065,"byte_end":261079,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261084,"byte_end":261091,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261096,"byte_end":261137,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261142,"byte_end":261166,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261171,"byte_end":261228,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261233,"byte_end":261236,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261241,"byte_end":261321,"line_start":595,"line_end":595,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261326,"byte_end":261369,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261374,"byte_end":261407,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261412,"byte_end":261419,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261424,"byte_end":261427,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261432,"byte_end":261480,"line_start":600,"line_end":600,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261485,"byte_end":261540,"line_start":601,"line_end":601,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261545,"byte_end":261553,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261558,"byte_end":261565,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263210,"byte_end":263224,"line_start":645,"line_end":645,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261834,"byte_end":261896,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261901,"byte_end":261969,"line_start":614,"line_end":614,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":261974,"byte_end":262008,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262013,"byte_end":262016,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262021,"byte_end":262096,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262101,"byte_end":262176,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262181,"byte_end":262257,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262262,"byte_end":262327,"line_start":620,"line_end":620,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262332,"byte_end":262335,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262340,"byte_end":262411,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262416,"byte_end":262419,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262424,"byte_end":262500,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262505,"byte_end":262579,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262584,"byte_end":262609,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262614,"byte_end":262617,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262622,"byte_end":262636,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262641,"byte_end":262648,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262653,"byte_end":262694,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262699,"byte_end":262756,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262761,"byte_end":262786,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262791,"byte_end":262794,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262799,"byte_end":262869,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262874,"byte_end":262929,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":262934,"byte_end":262996,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263001,"byte_end":263016,"line_start":637,"line_end":637,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263021,"byte_end":263028,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263033,"byte_end":263036,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263041,"byte_end":263062,"line_start":640,"line_end":640,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263067,"byte_end":263116,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263121,"byte_end":263177,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263182,"byte_end":263190,"line_start":643,"line_end":643,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263195,"byte_end":263202,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264916,"byte_end":264927,"line_start":692,"line_end":692,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263501,"byte_end":263566,"line_start":654,"line_end":654,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263571,"byte_end":263574,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263579,"byte_end":263652,"line_start":656,"line_end":656,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263657,"byte_end":263730,"line_start":657,"line_end":657,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263735,"byte_end":263808,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263813,"byte_end":263883,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263888,"byte_end":263891,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263896,"byte_end":263910,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263915,"byte_end":263918,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263923,"byte_end":263930,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263935,"byte_end":263976,"line_start":664,"line_end":664,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":263981,"byte_end":264012,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264017,"byte_end":264068,"line_start":666,"line_end":666,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264073,"byte_end":264093,"line_start":667,"line_end":667,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264098,"byte_end":264101,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264106,"byte_end":264145,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264150,"byte_end":264189,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264194,"byte_end":264233,"line_start":671,"line_end":671,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264238,"byte_end":264241,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264246,"byte_end":264273,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264278,"byte_end":264321,"line_start":674,"line_end":674,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264326,"byte_end":264333,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264338,"byte_end":264365,"line_start":676,"line_end":676,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264370,"byte_end":264413,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264418,"byte_end":264462,"line_start":678,"line_end":678,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264467,"byte_end":264474,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264479,"byte_end":264506,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264511,"byte_end":264556,"line_start":681,"line_end":681,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264561,"byte_end":264606,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264611,"byte_end":264655,"line_start":683,"line_end":683,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264660,"byte_end":264667,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264672,"byte_end":264675,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264680,"byte_end":264719,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264724,"byte_end":264773,"line_start":687,"line_end":687,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264778,"byte_end":264827,"line_start":688,"line_end":688,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264832,"byte_end":264882,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264887,"byte_end":264896,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":264901,"byte_end":264908,"line_start":691,"line_end":691,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266519,"byte_end":266527,"line_start":731,"line_end":731,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265232,"byte_end":265302,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265307,"byte_end":265367,"line_start":704,"line_end":704,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265372,"byte_end":265375,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265380,"byte_end":265450,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265455,"byte_end":265531,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265536,"byte_end":265612,"line_start":708,"line_end":708,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265617,"byte_end":265687,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265692,"byte_end":265718,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265723,"byte_end":265726,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265731,"byte_end":265811,"line_start":712,"line_end":712,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265816,"byte_end":265885,"line_start":713,"line_end":713,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265890,"byte_end":265911,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265916,"byte_end":265919,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265924,"byte_end":265938,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265943,"byte_end":265946,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265951,"byte_end":265958,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":265963,"byte_end":266004,"line_start":719,"line_end":719,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266009,"byte_end":266055,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266060,"byte_end":266063,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266068,"byte_end":266137,"line_start":722,"line_end":722,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266142,"byte_end":266219,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266224,"byte_end":266257,"line_start":724,"line_end":724,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266262,"byte_end":266265,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266270,"byte_end":266356,"line_start":726,"line_end":726,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266361,"byte_end":266447,"line_start":727,"line_end":727,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266452,"byte_end":266486,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266491,"byte_end":266499,"line_start":729,"line_end":729,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266504,"byte_end":266511,"line_start":730,"line_end":730,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":268053,"byte_end":268063,"line_start":774,"line_end":774,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266807,"byte_end":266869,"line_start":740,"line_end":740,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266874,"byte_end":266949,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266954,"byte_end":266957,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":266962,"byte_end":267033,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267038,"byte_end":267114,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267119,"byte_end":267158,"line_start":745,"line_end":745,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267163,"byte_end":267166,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267171,"byte_end":267257,"line_start":747,"line_end":747,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267262,"byte_end":267265,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267270,"byte_end":267354,"line_start":749,"line_end":749,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267359,"byte_end":267415,"line_start":750,"line_end":750,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267420,"byte_end":267423,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267428,"byte_end":267442,"line_start":752,"line_end":752,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267447,"byte_end":267450,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267455,"byte_end":267462,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267467,"byte_end":267508,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267513,"byte_end":267544,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267549,"byte_end":267587,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267592,"byte_end":267612,"line_start":758,"line_end":758,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267617,"byte_end":267620,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267625,"byte_end":267686,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267691,"byte_end":267694,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267699,"byte_end":267726,"line_start":762,"line_end":762,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267731,"byte_end":267762,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267767,"byte_end":267793,"line_start":764,"line_end":764,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267798,"byte_end":267868,"line_start":765,"line_end":765,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267873,"byte_end":267882,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267887,"byte_end":267894,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267899,"byte_end":267902,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267907,"byte_end":267946,"line_start":769,"line_end":769,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267951,"byte_end":267954,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":267959,"byte_end":268019,"line_start":771,"line_end":771,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":268024,"byte_end":268033,"line_start":772,"line_end":772,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":268038,"byte_end":268045,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":274318,"byte_end":274337,"line_start":929,"line_end":929,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":274210,"byte_end":274288,"line_start":927,"line_end":927,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":274293,"byte_end":274310,"line_start":928,"line_end":928,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7720},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":312975,"byte_end":312979,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":7722}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":312853,"byte_end":312890,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":312915,"byte_end":312963,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2185},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313497,"byte_end":313501,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313031,"byte_end":313095,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313096,"byte_end":313124,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313125,"byte_end":313128,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313129,"byte_end":313202,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313203,"byte_end":313258,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313259,"byte_end":313262,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313263,"byte_end":313270,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313271,"byte_end":313312,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313313,"byte_end":313356,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313357,"byte_end":313360,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313361,"byte_end":313405,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313406,"byte_end":313471,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313472,"byte_end":313481,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313482,"byte_end":313489,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7729},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314205,"byte_end":314211,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7731}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314081,"byte_end":314120,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314145,"byte_end":314193,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2204},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314735,"byte_end":314741,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314233,"byte_end":314293,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314294,"byte_end":314297,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314298,"byte_end":314365,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314366,"byte_end":314438,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314439,"byte_end":314496,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314497,"byte_end":314500,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314501,"byte_end":314508,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314509,"byte_end":314550,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314551,"byte_end":314594,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314595,"byte_end":314598,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314599,"byte_end":314634,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314635,"byte_end":314709,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314710,"byte_end":314719,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314720,"byte_end":314727,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7738},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315730,"byte_end":315740,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":7740}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315428,"byte_end":315488,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315489,"byte_end":315541,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315542,"byte_end":315545,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315546,"byte_end":315609,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315610,"byte_end":315645,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315670,"byte_end":315718,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":318028,"byte_end":318039,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316256,"byte_end":316327,"line_start":38,"line_end":38,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316328,"byte_end":316395,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316396,"byte_end":316399,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316400,"byte_end":316472,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316473,"byte_end":316476,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316477,"byte_end":316551,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316552,"byte_end":316604,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316605,"byte_end":316608,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316609,"byte_end":316681,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316682,"byte_end":316755,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316756,"byte_end":316793,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316794,"byte_end":316797,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316798,"byte_end":316812,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316813,"byte_end":316816,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316817,"byte_end":316833,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316834,"byte_end":316837,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316838,"byte_end":316845,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316846,"byte_end":316887,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316888,"byte_end":316931,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316932,"byte_end":316935,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316936,"byte_end":317004,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317005,"byte_end":317083,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317084,"byte_end":317115,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317116,"byte_end":317137,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317138,"byte_end":317141,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317142,"byte_end":317176,"line_start":63,"line_end":63,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317177,"byte_end":317232,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317233,"byte_end":317236,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317237,"byte_end":317290,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317291,"byte_end":317344,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317345,"byte_end":317398,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317399,"byte_end":317408,"line_start":69,"line_end":69,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317409,"byte_end":317416,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317417,"byte_end":317420,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317421,"byte_end":317457,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317458,"byte_end":317461,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317462,"byte_end":317473,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317474,"byte_end":317515,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317516,"byte_end":317559,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317560,"byte_end":317563,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317564,"byte_end":317613,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317614,"byte_end":317635,"line_start":79,"line_end":79,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317636,"byte_end":317713,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317714,"byte_end":317747,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317748,"byte_end":317751,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317752,"byte_end":317795,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317796,"byte_end":317839,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317840,"byte_end":317883,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317884,"byte_end":317927,"line_start":86,"line_end":86,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317928,"byte_end":317931,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317932,"byte_end":317961,"line_start":88,"line_end":88,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":317962,"byte_end":318002,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":318003,"byte_end":318012,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":318013,"byte_end":318020,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7747},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318430,"byte_end":318435,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":7749}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318314,"byte_end":318352,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318370,"byte_end":318418,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318603,"byte_end":318608,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318473,"byte_end":318521,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318522,"byte_end":318525,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318526,"byte_end":318595,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2287},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319705,"byte_end":319709,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319398,"byte_end":319439,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319440,"byte_end":319443,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319444,"byte_end":319451,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319452,"byte_end":319493,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319494,"byte_end":319537,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319538,"byte_end":319541,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319542,"byte_end":319586,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319587,"byte_end":319642,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319643,"byte_end":319679,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319680,"byte_end":319689,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319690,"byte_end":319697,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7758},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":319971,"byte_end":319975,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7760}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7789},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321151,"byte_end":321158,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":7791}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321031,"byte_end":321073,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321091,"byte_end":321139,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2313},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321334,"byte_end":321341,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321202,"byte_end":321256,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321257,"byte_end":321260,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321261,"byte_end":321326,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2339},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322184,"byte_end":322190,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2341}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322083,"byte_end":322123,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322124,"byte_end":322172,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2347},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322878,"byte_end":322885,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322390,"byte_end":322463,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322464,"byte_end":322467,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322468,"byte_end":322527,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322528,"byte_end":322531,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322532,"byte_end":322546,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322547,"byte_end":322550,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322551,"byte_end":322558,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322559,"byte_end":322592,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322593,"byte_end":322621,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322622,"byte_end":322625,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322626,"byte_end":322655,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322656,"byte_end":322659,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322660,"byte_end":322724,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322725,"byte_end":322778,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322779,"byte_end":322800,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322801,"byte_end":322854,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322855,"byte_end":322862,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322863,"byte_end":322870,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7802},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":323605,"byte_end":323611,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":7805},{"krate":0,"index":7806},{"krate":0,"index":7807}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":2371},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324215,"byte_end":324221,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":323739,"byte_end":323807,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":323808,"byte_end":323884,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":323885,"byte_end":323933,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":323934,"byte_end":323937,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":323938,"byte_end":324012,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324013,"byte_end":324082,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324083,"byte_end":324110,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324111,"byte_end":324114,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324115,"byte_end":324186,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324187,"byte_end":324207,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324631,"byte_end":324638,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324523,"byte_end":324597,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324602,"byte_end":324619,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324994,"byte_end":325001,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324732,"byte_end":324800,"line_start":49,"line_end":49,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324805,"byte_end":324836,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324841,"byte_end":324844,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324849,"byte_end":324922,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324927,"byte_end":324982,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325376,"byte_end":325387,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325107,"byte_end":325182,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325187,"byte_end":325218,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325223,"byte_end":325226,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325231,"byte_end":325304,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325309,"byte_end":325364,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325793,"byte_end":325803,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325557,"byte_end":325620,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325625,"byte_end":325628,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325633,"byte_end":325705,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325710,"byte_end":325781,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2410},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329070,"byte_end":329076,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":327628,"byte_end":327698,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":327699,"byte_end":327702,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":327703,"byte_end":327772,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":327773,"byte_end":327854,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":327855,"byte_end":327886,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":327887,"byte_end":327890,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":327891,"byte_end":327970,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":327971,"byte_end":328050,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328051,"byte_end":328105,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328106,"byte_end":328109,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328110,"byte_end":328190,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328191,"byte_end":328261,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328262,"byte_end":328284,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328285,"byte_end":328288,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328289,"byte_end":328366,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328367,"byte_end":328439,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328440,"byte_end":328517,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328518,"byte_end":328578,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328579,"byte_end":328582,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328583,"byte_end":328596,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328597,"byte_end":328600,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328601,"byte_end":328608,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328609,"byte_end":328650,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328651,"byte_end":328694,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328695,"byte_end":328698,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328699,"byte_end":328754,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328755,"byte_end":328778,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328779,"byte_end":328818,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328819,"byte_end":328856,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328857,"byte_end":328896,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328897,"byte_end":328913,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328914,"byte_end":328930,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328931,"byte_end":328940,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328941,"byte_end":328948,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328949,"byte_end":328952,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":328953,"byte_end":329005,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329006,"byte_end":329044,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329045,"byte_end":329054,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329055,"byte_end":329062,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7848},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329444,"byte_end":329450,"line_start":64,"line_end":64,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":7852},{"krate":0,"index":7853}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":7264195,"byte_end":7264204,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":2444},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":7901},{"krate":0,"index":2459},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331044,"byte_end":331077,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331078,"byte_end":331081,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331082,"byte_end":331107,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331108,"byte_end":331111,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331112,"byte_end":331160,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331161,"byte_end":331214,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331215,"byte_end":331263,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331264,"byte_end":331311,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331312,"byte_end":331315,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331316,"byte_end":331390,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/mod.rs","byte_start":331391,"byte_end":331463,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":2467},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":332663,"byte_end":332671,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":332620,"byte_end":332652,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2468},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":335427,"byte_end":335440,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":335379,"byte_end":335416,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2472},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","parent":null,"children":[{"krate":0,"index":2473}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":337899,"byte_end":337941,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":337942,"byte_end":337945,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":337946,"byte_end":338012,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":2473},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338649,"byte_end":338654,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338014,"byte_end":338049,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338050,"byte_end":338053,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338054,"byte_end":338129,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338130,"byte_end":338167,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338168,"byte_end":338171,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338172,"byte_end":338236,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338237,"byte_end":338240,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338241,"byte_end":338312,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338313,"byte_end":338364,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338365,"byte_end":338457,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338458,"byte_end":338461,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338462,"byte_end":338533,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/never.rs","byte_start":338534,"byte_end":338639,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":2479},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":338757,"byte_end":338764,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2481},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":338779,"byte_end":338785,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":2479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":338794,"byte_end":338803,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":2479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2489},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":338995,"byte_end":339001,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2491}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":339026,"byte_end":339034,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2506},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340338,"byte_end":340342,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7920},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340698,"byte_end":340705,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7941},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":341439,"byte_end":341452,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7957},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":341794,"byte_end":341803,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7972},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":342752,"byte_end":342759,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7987},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343470,"byte_end":343478,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8002},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":344198,"byte_end":344209,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8014},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":345027,"byte_end":345039,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8026},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346120,"byte_end":346134,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2670},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346893,"byte_end":346899,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36164,"byte_end":36171,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36301,"byte_end":36308,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36539,"byte_end":36546,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":37328,"byte_end":37335,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":37566,"byte_end":37573,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40645,"byte_end":40649,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40756,"byte_end":40760,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42489,"byte_end":42493,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42606,"byte_end":42610,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":43589,"byte_end":43592,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":43761,"byte_end":43764,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":44026,"byte_end":44029,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19315,"byte_end":19316,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/into_future.rs","byte_start":66836,"byte_end":66846,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/into_future.rs","byte_start":66997,"byte_end":67007,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/into_future.rs","byte_start":67118,"byte_end":67128,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":67860,"byte_end":67870,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":68000,"byte_end":68010,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":68257,"byte_end":68267,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":69289,"byte_end":69299,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":69546,"byte_end":69556,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":73059,"byte_end":73072,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":73202,"byte_end":73215,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":73462,"byte_end":73475,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":49382,"byte_end":49385,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":74852,"byte_end":74856,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75452,"byte_end":75456,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75588,"byte_end":75592,"line_start":47,"line_end":47,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76195,"byte_end":76202,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76776,"byte_end":76783,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76928,"byte_end":76935,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76962,"byte_end":76969,"line_start":53,"line_end":53,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77723,"byte_end":77732,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78335,"byte_end":78344,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":79442,"byte_end":79451,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":79652,"byte_end":79661,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80981,"byte_end":80993,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81219,"byte_end":81231,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":82344,"byte_end":82356,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":82560,"byte_end":82572,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/option.rs","byte_start":84294,"byte_end":84306,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/option.rs","byte_start":84643,"byte_end":84655,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/option.rs","byte_start":84842,"byte_end":84854,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85292,"byte_end":85298,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85991,"byte_end":85997,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":86139,"byte_end":86145,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86648,"byte_end":86653,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86832,"byte_end":86837,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86869,"byte_end":86874,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86971,"byte_end":86976,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94151,"byte_end":94157,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96577,"byte_end":96583,"line_start":90,"line_end":90,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":97286,"byte_end":97292,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105251,"byte_end":105260,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":107094,"byte_end":107103,"line_start":59,"line_end":59,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108536,"byte_end":108542,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108881,"byte_end":108887,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109272,"byte_end":109278,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109659,"byte_end":109665,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109906,"byte_end":109912,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":110251,"byte_end":110257,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":110533,"byte_end":110539,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":111074,"byte_end":111080,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/chain.rs","byte_start":170903,"byte_end":170908,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/chain.rs","byte_start":171165,"byte_end":171170,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/chain.rs","byte_start":171375,"byte_end":171380,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/collect.rs","byte_start":172993,"byte_end":173000,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/collect.rs","byte_start":173298,"byte_end":173305,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/collect.rs","byte_start":173481,"byte_end":173488,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/unzip.rs","byte_start":174512,"byte_end":174517,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/unzip.rs","byte_start":174991,"byte_end":174996,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/unzip.rs","byte_start":175246,"byte_end":175251,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/concat.rs","byte_start":176377,"byte_end":176383,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/concat.rs","byte_start":176650,"byte_end":176656,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/concat.rs","byte_start":177431,"byte_end":177437,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/cycle.rs","byte_start":178114,"byte_end":178119,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/cycle.rs","byte_start":178308,"byte_end":178313,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/cycle.rs","byte_start":179062,"byte_end":179067,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/enumerate.rs","byte_start":179815,"byte_end":179824,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5343},{"krate":0,"index":5344}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/enumerate.rs","byte_start":180043,"byte_end":180052,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/enumerate.rs","byte_start":180170,"byte_end":180179,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":181643,"byte_end":181649,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":182122,"byte_end":182128,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":182506,"byte_end":182512,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":182861,"byte_end":182867,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":185084,"byte_end":185093,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":185390,"byte_end":185399,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":5470}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":185678,"byte_end":185687,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":185964,"byte_end":185973,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/flatten.rs","byte_start":188118,"byte_end":188125,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/flatten.rs","byte_start":188294,"byte_end":188301,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/flatten.rs","byte_start":188493,"byte_end":188500,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":190014,"byte_end":190018,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":190374,"byte_end":190378,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":190696,"byte_end":190700,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":190947,"byte_end":190951,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":192552,"byte_end":192559,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":192852,"byte_end":192859,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":193135,"byte_end":193142,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":193393,"byte_end":193400,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194513,"byte_end":194517,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":195014,"byte_end":195018,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":195116,"byte_end":195120,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196345,"byte_end":196357,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198847,"byte_end":198859,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198979,"byte_end":198991,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":199899,"byte_end":199902,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":200117,"byte_end":200120,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":200289,"byte_end":200292,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":200466,"byte_end":200469,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201616,"byte_end":201620,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201671,"byte_end":201675,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201826,"byte_end":201830,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201969,"byte_end":201973,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202647,"byte_end":202661,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202812,"byte_end":202826,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202970,"byte_end":202984,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204295,"byte_end":204303,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":6012},{"krate":0,"index":6013},{"krate":0,"index":6014},{"krate":0,"index":6015},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":208480,"byte_end":208488,"line_start":154,"line_end":154,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":208630,"byte_end":208638,"line_start":160,"line_end":160,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":209797,"byte_end":209801,"line_start":202,"line_end":202,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":210046,"byte_end":210050,"line_start":212,"line_end":212,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":210161,"byte_end":210165,"line_start":218,"line_end":218,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":210870,"byte_end":210876,"line_start":244,"line_end":244,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":211254,"byte_end":211260,"line_start":257,"line_end":257,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":211529,"byte_end":211535,"line_start":268,"line_end":268,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":212796,"byte_end":212804,"line_start":306,"line_end":306,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":213124,"byte_end":213132,"line_start":319,"line_end":319,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":213316,"byte_end":213324,"line_start":330,"line_end":330,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":213695,"byte_end":213705,"line_start":348,"line_end":348,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip.rs","byte_start":214370,"byte_end":214374,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6198}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip.rs","byte_start":214598,"byte_end":214602,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip.rs","byte_start":214720,"byte_end":214724,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":216344,"byte_end":216353,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":216805,"byte_end":216814,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":6264},{"krate":0,"index":6265},{"krate":0,"index":6266},{"krate":0,"index":6267}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":217221,"byte_end":217230,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":217490,"byte_end":217499,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take.rs","byte_start":219846,"byte_end":219850,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take.rs","byte_start":220056,"byte_end":220060,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take.rs","byte_start":221054,"byte_end":221058,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":222081,"byte_end":222090,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":222538,"byte_end":222547,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":222947,"byte_end":222956,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":224510,"byte_end":224519,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":225915,"byte_end":225924,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":226251,"byte_end":226260,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6437},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228434,"byte_end":228443,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":229475,"byte_end":229484,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":230426,"byte_end":230430,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":230720,"byte_end":230724,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":231021,"byte_end":231025,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":231263,"byte_end":231267,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233184,"byte_end":233187,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234830,"byte_end":234833,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":235024,"byte_end":235027,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":237752,"byte_end":237756,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":238242,"byte_end":238246,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":238410,"byte_end":238414,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":238866,"byte_end":238870,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":240097,"byte_end":240101,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126047,"byte_end":126048,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":277454,"byte_end":277461,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":277754,"byte_end":277761,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":6682},{"krate":0,"index":6683},{"krate":0,"index":6684},{"krate":0,"index":6685}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":278054,"byte_end":278061,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":279239,"byte_end":279246,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/into_stream.rs","byte_start":280176,"byte_end":280186,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":6929},{"krate":0,"index":6930},{"krate":0,"index":6931},{"krate":0,"index":6932}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/into_stream.rs","byte_start":280379,"byte_end":280389,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/into_stream.rs","byte_start":280510,"byte_end":280520,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":281642,"byte_end":281648,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":281940,"byte_end":281946,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":7128},{"krate":0,"index":7129},{"krate":0,"index":7130},{"krate":0,"index":7131}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":282236,"byte_end":282242,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":283555,"byte_end":283561,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284477,"byte_end":284484,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284538,"byte_end":284545,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284708,"byte_end":284715,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284857,"byte_end":284864,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_for_each.rs","byte_start":285663,"byte_end":285673,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_for_each.rs","byte_start":285969,"byte_end":285979,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_for_each.rs","byte_start":286269,"byte_end":286279,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":287690,"byte_end":287699,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":288095,"byte_end":288104,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1844},{"krate":0,"index":7258},{"krate":0,"index":7259},{"krate":0,"index":7260},{"krate":0,"index":7261}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":288403,"byte_end":288412,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":288681,"byte_end":288690,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":290868,"byte_end":290880,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":291180,"byte_end":291192,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":7319},{"krate":0,"index":7320},{"krate":0,"index":7321},{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":291389,"byte_end":291401,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":291691,"byte_end":291703,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_flatten.rs","byte_start":293922,"byte_end":293932,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1910},{"krate":0,"index":7363},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7366}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_flatten.rs","byte_start":294197,"byte_end":294207,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_flatten.rs","byte_start":294453,"byte_end":294463,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_collect.rs","byte_start":296072,"byte_end":296082,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_collect.rs","byte_start":296255,"byte_end":296265,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_collect.rs","byte_start":296453,"byte_end":296463,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_concat.rs","byte_start":297484,"byte_end":297493,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_concat.rs","byte_start":297745,"byte_end":297754,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":299017,"byte_end":299024,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":299383,"byte_end":299390,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":299727,"byte_end":299734,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":300000,"byte_end":300007,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303911,"byte_end":303920,"line_start":82,"line_end":82,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":304221,"byte_end":304230,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":305999,"byte_end":306011,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":306467,"byte_end":306479,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":7647},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7650}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":306900,"byte_end":306912,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":308446,"byte_end":308458,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":309698,"byte_end":309710,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":310162,"byte_end":310174,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2092},{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7718},{"krate":0,"index":7719}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":310581,"byte_end":310593,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":312200,"byte_end":312212,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245505,"byte_end":245506,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313019,"byte_end":313023,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313658,"byte_end":313662,"line_start":37,"line_end":37,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314852,"byte_end":314858,"line_start":33,"line_end":33,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314885,"byte_end":314891,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":315198,"byte_end":315204,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315801,"byte_end":315811,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315855,"byte_end":315865,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316179,"byte_end":316189,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318720,"byte_end":318725,"line_start":23,"line_end":23,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318757,"byte_end":318762,"line_start":25,"line_end":25,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318847,"byte_end":318852,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":319101,"byte_end":319106,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":320045,"byte_end":320049,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":320178,"byte_end":320182,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":320787,"byte_end":320791,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321450,"byte_end":321457,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321489,"byte_end":321496,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321581,"byte_end":321588,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321833,"byte_end":321840,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322227,"byte_end":322233,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322264,"byte_end":322270,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":323035,"byte_end":323041,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324500,"byte_end":324506,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325929,"byte_end":325935,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":326153,"byte_end":326159,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329569,"byte_end":329575,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329841,"byte_end":329847,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":330127,"byte_end":330133,"line_start":97,"line_end":97,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":332535,"byte_end":332537,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":332592,"byte_end":332594,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":338867,"byte_end":338868,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2487},{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":339102,"byte_end":339103,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":339372,"byte_end":339373,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340388,"byte_end":340392,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340486,"byte_end":340490,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340749,"byte_end":340756,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340979,"byte_end":340986,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":341177,"byte_end":341184,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":341489,"byte_end":341502,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2539},{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":341919,"byte_end":341928,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":342210,"byte_end":342219,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":342479,"byte_end":342488,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":342808,"byte_end":342815,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343034,"byte_end":343041,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343219,"byte_end":343226,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2576}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343527,"byte_end":343535,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2584},{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343758,"byte_end":343766,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343948,"byte_end":343956,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":344266,"byte_end":344277,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2606},{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":344514,"byte_end":344525,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":344740,"byte_end":344751,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":345096,"byte_end":345108,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":345346,"byte_end":345358,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2634}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":345574,"byte_end":345586,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346183,"byte_end":346197,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2653},{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346418,"byte_end":346432,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346631,"byte_end":346645,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346949,"byte_end":346955,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":347048,"byte_end":347054,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/unfold_state.rs","byte_start":347654,"byte_end":347665,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2688},{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11585,"byte_end":11591,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11686,"byte_end":11692,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":699}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11953,"byte_end":11957,"line_start":325,"line_end":325,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2444}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/lib.rs","byte_start":11968,"byte_end":11973,"line_start":327,"line_end":327,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2472}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36164,"byte_end":36171,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36301,"byte_end":36308,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2694},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":36539,"byte_end":36546,"line_start":38,"line_end":38,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2694},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":37328,"byte_end":37335,"line_start":62,"line_end":62,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2694},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/flatten.rs","byte_start":37566,"byte_end":37573,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2694},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40645,"byte_end":40649,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":40756,"byte_end":40760,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42489,"byte_end":42493,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2742},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/fuse.rs","byte_start":42606,"byte_end":42610,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2742},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":43589,"byte_end":43592,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":43761,"byte_end":43764,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2777},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/map.rs","byte_start":44026,"byte_end":44029,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2777},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19315,"byte_end":19316,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":123},"to":{"krate":0,"index":124}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/future/mod.rs","byte_start":19447,"byte_end":19453,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":9578},"to":{"krate":0,"index":124}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/into_future.rs","byte_start":66836,"byte_end":66846,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/into_future.rs","byte_start":66997,"byte_end":67007,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3330},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/into_future.rs","byte_start":67118,"byte_end":67128,"line_start":27,"line_end":27,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3330},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":67860,"byte_end":67870,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":68000,"byte_end":68010,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3365},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":68257,"byte_end":68267,"line_start":38,"line_end":38,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3365},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":69289,"byte_end":69299,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3365},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten.rs","byte_start":69546,"byte_end":69556,"line_start":79,"line_end":79,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3365},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":73059,"byte_end":73072,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":73202,"byte_end":73215,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3412},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/try_flatten_err.rs","byte_start":73462,"byte_end":73475,"line_start":35,"line_end":35,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3412},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":49382,"byte_end":49385,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":264},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_future/mod.rs","byte_start":49468,"byte_end":49477,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":32},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":74852,"byte_end":74856,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4275},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75452,"byte_end":75456,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4275},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/lazy.rs","byte_start":75588,"byte_end":75592,"line_start":47,"line_end":47,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4275},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76195,"byte_end":76202,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4281},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76776,"byte_end":76783,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4281},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76928,"byte_end":76935,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4281},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/pending.rs","byte_start":76962,"byte_end":76969,"line_start":53,"line_end":53,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4281},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":77723,"byte_end":77732,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4287},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":78335,"byte_end":78344,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":79442,"byte_end":79451,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4287},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/maybe_done.rs","byte_start":79652,"byte_end":79661,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4287},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":80981,"byte_end":80993,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4300},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":81219,"byte_end":81231,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":82344,"byte_end":82356,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4300},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_maybe_done.rs","byte_start":82560,"byte_end":82572,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4300},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/option.rs","byte_start":84294,"byte_end":84306,"line_start":34,"line_end":34,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4318},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/option.rs","byte_start":84643,"byte_end":84655,"line_start":48,"line_end":48,"column_start":38,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4318},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/option.rs","byte_start":84842,"byte_end":84854,"line_start":57,"line_end":57,"column_start":29,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4318},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85292,"byte_end":85298,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":451},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":85991,"byte_end":85997,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":451},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/poll_fn.rs","byte_start":86139,"byte_end":86145,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":451},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86648,"byte_end":86653,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86832,"byte_end":86837,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4352},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86869,"byte_end":86874,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4352},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/ready.rs","byte_start":86971,"byte_end":86976,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4352},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":94151,"byte_end":94157,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4706},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":96577,"byte_end":96583,"line_start":90,"line_end":90,"column_start":23,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4706},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/select.rs","byte_start":97286,"byte_end":97292,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4706},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":105251,"byte_end":105260,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5036},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/try_select.rs","byte_start":107094,"byte_end":107103,"line_start":59,"line_end":59,"column_start":37,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5036},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108536,"byte_end":108542,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":108881,"byte_end":108887,"line_start":29,"line_end":29,"column_start":15,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109272,"byte_end":109278,"line_start":41,"line_end":41,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109659,"byte_end":109665,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":109906,"byte_end":109912,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5044},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":110251,"byte_end":110257,"line_start":78,"line_end":78,"column_start":28,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5044},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":110533,"byte_end":110539,"line_start":91,"line_end":91,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5044},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/future/either.rs","byte_start":111074,"byte_end":111080,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5044},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/chain.rs","byte_start":170903,"byte_end":170908,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/chain.rs","byte_start":171165,"byte_end":171170,"line_start":32,"line_end":32,"column_start":32,"column_end":37},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5068},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/chain.rs","byte_start":171375,"byte_end":171380,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5068},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/collect.rs","byte_start":172993,"byte_end":173000,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/collect.rs","byte_start":173298,"byte_end":173305,"line_start":33,"line_end":33,"column_start":29,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5117},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/collect.rs","byte_start":173481,"byte_end":173488,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5117},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/unzip.rs","byte_start":174512,"byte_end":174517,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":5168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/unzip.rs","byte_start":174991,"byte_end":174996,"line_start":39,"line_end":39,"column_start":46,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":5168},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/unzip.rs","byte_start":175246,"byte_end":175251,"line_start":49,"line_end":49,"column_start":41,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":5168},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/concat.rs","byte_start":176377,"byte_end":176383,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":5226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/concat.rs","byte_start":176650,"byte_end":176656,"line_start":32,"line_end":32,"column_start":21,"column_end":27},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5226},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/concat.rs","byte_start":177431,"byte_end":177437,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5226},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/cycle.rs","byte_start":178114,"byte_end":178119,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/cycle.rs","byte_start":178308,"byte_end":178313,"line_start":31,"line_end":31,"column_start":21,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5266},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/cycle.rs","byte_start":179062,"byte_end":179067,"line_start":59,"line_end":59,"column_start":26,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5266},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/enumerate.rs","byte_start":179815,"byte_end":179824,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/enumerate.rs","byte_start":180043,"byte_end":180052,"line_start":31,"line_end":31,"column_start":48,"column_end":57},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5306},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/enumerate.rs","byte_start":180170,"byte_end":180179,"line_start":37,"line_end":37,"column_start":29,"column_end":38},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5306},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":181643,"byte_end":181649,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5345},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":182122,"byte_end":182128,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":182506,"byte_end":182512,"line_start":60,"line_end":60,"column_start":34,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5345},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter.rs","byte_start":182861,"byte_end":182867,"line_start":71,"line_end":71,"column_start":29,"column_end":35},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5345},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":185084,"byte_end":185093,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5410},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":185390,"byte_end":185399,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":185678,"byte_end":185687,"line_start":49,"line_end":49,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5410},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/filter_map.rs","byte_start":185964,"byte_end":185973,"line_start":59,"line_end":59,"column_start":32,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5410},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/flatten.rs","byte_start":188118,"byte_end":188125,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/flatten.rs","byte_start":188294,"byte_end":188301,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5478},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/flatten.rs","byte_start":188493,"byte_end":188500,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5478},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":190014,"byte_end":190018,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5579},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":190374,"byte_end":190378,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":190696,"byte_end":190700,"line_start":52,"line_end":52,"column_start":37,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5579},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fold.rs","byte_start":190947,"byte_end":190951,"line_start":62,"line_end":62,"column_start":32,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5579},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":192552,"byte_end":192559,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5648},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":192852,"byte_end":192859,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":193135,"byte_end":193142,"line_start":48,"line_end":48,"column_start":34,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5648},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/for_each.rs","byte_start":193393,"byte_end":193400,"line_start":58,"line_end":58,"column_start":29,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5648},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":194513,"byte_end":194517,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":195014,"byte_end":195018,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5710},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/fuse.rs","byte_start":195116,"byte_end":195120,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5710},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":196345,"byte_end":196357,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198847,"byte_end":198859,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5749},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/into_future.rs","byte_start":198979,"byte_end":198991,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5749},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":199899,"byte_end":199902,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5824},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":200117,"byte_end":200120,"line_start":33,"line_end":33,"column_start":13,"column_end":16},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":200289,"byte_end":200292,"line_start":41,"line_end":41,"column_start":29,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5824},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/map.rs","byte_start":200466,"byte_end":200469,"line_start":50,"line_end":50,"column_start":24,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5824},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201616,"byte_end":201620,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5956},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201671,"byte_end":201675,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201826,"byte_end":201830,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5956},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/next.rs","byte_start":201969,"byte_end":201973,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5956},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202647,"byte_end":202661,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202812,"byte_end":202826,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5964},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/select_next_some.rs","byte_start":202970,"byte_end":202984,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5964},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":204295,"byte_end":204303,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":208480,"byte_end":208488,"line_start":154,"line_end":154,"column_start":34,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5977},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":208630,"byte_end":208638,"line_start":160,"line_end":160,"column_start":28,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5977},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":209797,"byte_end":209801,"line_start":202,"line_end":202,"column_start":25,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":210046,"byte_end":210050,"line_start":212,"line_end":212,"column_start":34,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":6016},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":210161,"byte_end":210165,"line_start":218,"line_end":218,"column_start":25,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":6016},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":210870,"byte_end":210876,"line_start":244,"line_end":244,"column_start":28,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6057},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":211254,"byte_end":211260,"line_start":257,"line_end":257,"column_start":29,"column_end":35},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6057},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":211529,"byte_end":211535,"line_start":268,"line_end":268,"column_start":24,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6057},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":212796,"byte_end":212804,"line_start":306,"line_end":306,"column_start":28,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6106},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":213124,"byte_end":213132,"line_start":319,"line_end":319,"column_start":29,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":6106},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":213316,"byte_end":213324,"line_start":330,"line_end":330,"column_start":24,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":6106},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/peek.rs","byte_start":213695,"byte_end":213705,"line_start":348,"line_end":348,"column_start":34,"column_end":44},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1259},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip.rs","byte_start":214370,"byte_end":214374,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":6160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip.rs","byte_start":214598,"byte_end":214602,"line_start":31,"line_end":31,"column_start":39,"column_end":43},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":6160},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip.rs","byte_start":214720,"byte_end":214724,"line_start":37,"line_end":37,"column_start":29,"column_end":33},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6160},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":216344,"byte_end":216353,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6199},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":216805,"byte_end":216814,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":6199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":217221,"byte_end":217230,"line_start":59,"line_end":59,"column_start":34,"column_end":43},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":6199},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/skip_while.rs","byte_start":217490,"byte_end":217499,"line_start":69,"line_end":69,"column_start":29,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":6199},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take.rs","byte_start":219846,"byte_end":219850,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":6273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take.rs","byte_start":220056,"byte_end":220060,"line_start":32,"line_end":32,"column_start":21,"column_end":25},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":6273},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take.rs","byte_start":221054,"byte_end":221058,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":6273},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":222081,"byte_end":222090,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":6312},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":222538,"byte_end":222547,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":6312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":222947,"byte_end":222956,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":6312},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_while.rs","byte_start":224510,"byte_end":224519,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":6312},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":225915,"byte_end":225924,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":6381},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":226251,"byte_end":226260,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":6381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":228434,"byte_end":228443,"line_start":119,"line_end":119,"column_start":26,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":6381},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/take_until.rs","byte_start":229475,"byte_end":229484,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":6381},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":230426,"byte_end":230430,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":6438},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":230720,"byte_end":230724,"line_start":36,"line_end":36,"column_start":18,"column_end":22},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":6438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":231021,"byte_end":231025,"line_start":51,"line_end":51,"column_start":34,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":6438},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/then.rs","byte_start":231263,"byte_end":231267,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":6438},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":233184,"byte_end":233187,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":6506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":234830,"byte_end":234833,"line_start":66,"line_end":66,"column_start":32,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":6506},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/zip.rs","byte_start":235024,"byte_end":235027,"line_start":74,"line_end":74,"column_start":27,"column_end":30},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":6506},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":237752,"byte_end":237756,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":6556},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":238242,"byte_end":238246,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":238410,"byte_end":238414,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":238866,"byte_end":238870,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6556},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/scan.rs","byte_start":240097,"byte_end":240101,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6556},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126047,"byte_end":126048,"line_start":208,"line_end":208,"column_start":31,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1547},"to":{"krate":0,"index":1548}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/stream/mod.rs","byte_start":126191,"byte_end":126197,"line_start":212,"line_end":212,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":68},"to":{"krate":0,"index":1548}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":277454,"byte_end":277461,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":6625},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":277754,"byte_end":277761,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":6625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":278054,"byte_end":278061,"line_start":48,"line_end":48,"column_start":29,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":6625},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/and_then.rs","byte_start":279239,"byte_end":279246,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":6625},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/into_stream.rs","byte_start":280176,"byte_end":280186,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/into_stream.rs","byte_start":280379,"byte_end":280389,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":6898},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/into_stream.rs","byte_start":280510,"byte_end":280520,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6898},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":281642,"byte_end":281648,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":7071},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":281940,"byte_end":281946,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":7071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":282236,"byte_end":282242,"line_start":48,"line_end":48,"column_start":29,"column_end":35},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":7071},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/or_else.rs","byte_start":283555,"byte_end":283561,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":7071},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284477,"byte_end":284484,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7132},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284538,"byte_end":284545,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284708,"byte_end":284715,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7132},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_next.rs","byte_start":284857,"byte_end":284864,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7132},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_for_each.rs","byte_start":285663,"byte_end":285673,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":7140},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_for_each.rs","byte_start":285969,"byte_end":285979,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":7140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_for_each.rs","byte_start":286269,"byte_end":286279,"line_start":48,"line_end":48,"column_start":29,"column_end":39},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7140},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":287690,"byte_end":287699,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7197},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":288095,"byte_end":288104,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":7197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":288403,"byte_end":288412,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":7197},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter.rs","byte_start":288681,"byte_end":288690,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":7197},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":290868,"byte_end":290880,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":7262},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":291180,"byte_end":291192,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":7262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":291389,"byte_end":291401,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":7262},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_filter_map.rs","byte_start":291691,"byte_end":291703,"line_start":55,"line_end":55,"column_start":32,"column_end":44},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7262},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_flatten.rs","byte_start":293922,"byte_end":293932,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_flatten.rs","byte_start":294197,"byte_end":294207,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7328},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_flatten.rs","byte_start":294453,"byte_end":294463,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":7328},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_collect.rs","byte_start":296072,"byte_end":296082,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_collect.rs","byte_start":296255,"byte_end":296265,"line_start":29,"line_end":29,"column_start":29,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7374},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_collect.rs","byte_start":296453,"byte_end":296463,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":7374},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_concat.rs","byte_start":297484,"byte_end":297493,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":7421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_concat.rs","byte_start":297745,"byte_end":297754,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":7421},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":299017,"byte_end":299024,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":7456},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":299383,"byte_end":299390,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":7456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":299727,"byte_end":299734,"line_start":52,"line_end":52,"column_start":37,"column_end":44},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":7456},"to":{"krate":4,"index":17}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_fold.rs","byte_start":300000,"byte_end":300007,"line_start":62,"line_end":62,"column_start":32,"column_end":39},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7456},"to":{"krate":1,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":303911,"byte_end":303920,"line_start":82,"line_end":82,"column_start":32,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7525},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_unfold.rs","byte_start":304221,"byte_end":304230,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":7525},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":305999,"byte_end":306011,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7582},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":306467,"byte_end":306479,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":7582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":306900,"byte_end":306912,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":7582},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_skip_while.rs","byte_start":308446,"byte_end":308458,"line_start":107,"line_end":107,"column_start":34,"column_end":46},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7582},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":309698,"byte_end":309710,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":7651},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":310162,"byte_end":310174,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":7651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":310581,"byte_end":310593,"line_start":64,"line_end":64,"column_start":29,"column_end":41},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7651},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/try_take_while.rs","byte_start":312200,"byte_end":312212,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7651},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245505,"byte_end":245506,"line_start":141,"line_end":141,"column_start":46,"column_end":47},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2107},"to":{"krate":0,"index":2108}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/try_stream/mod.rs","byte_start":245587,"byte_end":245596,"line_start":144,"line_end":144,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":97},"to":{"krate":0,"index":2108}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313019,"byte_end":313023,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":7720},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/iter.rs","byte_start":313658,"byte_end":313662,"line_start":37,"line_end":37,"column_start":20,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":7720},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314852,"byte_end":314858,"line_start":33,"line_end":33,"column_start":19,"column_end":25},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":7729},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":314885,"byte_end":314891,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":7729},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat.rs","byte_start":315198,"byte_end":315204,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7729},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315801,"byte_end":315811,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7738},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":315855,"byte_end":315865,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":7738},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/repeat_with.rs","byte_start":316179,"byte_end":316189,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":7738},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318720,"byte_end":318725,"line_start":23,"line_end":23,"column_start":19,"column_end":24},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":7747},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318757,"byte_end":318762,"line_start":25,"line_end":25,"column_start":25,"column_end":30},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":7747},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":318847,"byte_end":318852,"line_start":31,"line_end":31,"column_start":20,"column_end":25},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":7747},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/empty.rs","byte_start":319101,"byte_end":319106,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":7747},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":320045,"byte_end":320049,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":7758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":320178,"byte_end":320182,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":7758},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/once.rs","byte_start":320787,"byte_end":320791,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":7758},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321450,"byte_end":321457,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":7789},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321489,"byte_end":321496,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7789},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321581,"byte_end":321588,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":7789},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/pending.rs","byte_start":321833,"byte_end":321840,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":7789},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322227,"byte_end":322233,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2339},"to":{"krate":1,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":322264,"byte_end":322270,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2339},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/poll_fn.rs","byte_start":323035,"byte_end":323041,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2339},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":324500,"byte_end":324506,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":7802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":325929,"byte_end":325935,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":7802},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/select.rs","byte_start":326153,"byte_end":326159,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":7802},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329569,"byte_end":329575,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":7848},"to":{"krate":1,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":329841,"byte_end":329847,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":7848},"to":{"krate":4,"index":82}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/stream/unfold.rs","byte_start":330127,"byte_end":330133,"line_start":97,"line_end":97,"column_start":34,"column_end":40},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":7848},"to":{"krate":4,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":332535,"byte_end":332537,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2464},"to":{"krate":0,"index":2467}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":332592,"byte_end":332594,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2466},"to":{"krate":0,"index":2468}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":332673,"byte_end":332678,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":20,"index":10},"to":{"krate":0,"index":2467}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/task/spawn.rs","byte_start":335442,"byte_end":335452,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":20,"index":13},"to":{"krate":0,"index":2468}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":338867,"byte_end":338868,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2484},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":339006,"byte_end":339013,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":2479},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":339102,"byte_end":339103,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2493},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":339288,"byte_end":339294,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2489},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":339372,"byte_end":339373,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2501},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340388,"byte_end":340392,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2506},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340486,"byte_end":340490,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2506},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340749,"byte_end":340756,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":340979,"byte_end":340986,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":341177,"byte_end":341184,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":7920},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":341489,"byte_end":341502,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":7941},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":341919,"byte_end":341928,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":7957},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":342210,"byte_end":342219,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":7957},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":342479,"byte_end":342488,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":7957},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":342808,"byte_end":342815,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":7972},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343034,"byte_end":343041,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":7972},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343219,"byte_end":343226,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":7972},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343527,"byte_end":343535,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":7987},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343758,"byte_end":343766,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":7987},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":343948,"byte_end":343956,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":7987},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":344266,"byte_end":344277,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":8002},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":344514,"byte_end":344525,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":8002},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":344740,"byte_end":344751,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":8002},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":345096,"byte_end":345108,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":8014},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":345346,"byte_end":345358,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":8014},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":345574,"byte_end":345586,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":8014},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346183,"byte_end":346197,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":8026},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346418,"byte_end":346432,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":8026},"to":{"krate":0,"index":2489}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346631,"byte_end":346645,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":8026},"to":{"krate":0,"index":2497}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":346949,"byte_end":346955,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2670},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/fns.rs","byte_start":347048,"byte_end":347054,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2670},"to":{"krate":0,"index":2479}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.14/src/unfold_state.rs","byte_start":347654,"byte_end":347665,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":8063},"to":{"krate":4294967295,"index":4294967295}}]}