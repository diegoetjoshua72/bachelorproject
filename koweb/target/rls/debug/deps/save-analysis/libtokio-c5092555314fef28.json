{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0","program":"/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"rt\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","-C","metadata=c5092555314fef28","-C","extra-filename=-c5092555314fef28","--out-dir","/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","-L","dependency=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","--extern","bytes=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libbytes-dd52596db22c8f26.rmeta","--extern","libc=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/liblibc-adbc33fb7d997897.rmeta","--extern","memchr=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libmemchr-0e1c86f75d1c15af.rmeta","--extern","mio=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libmio-e5009a377d03b013.rmeta","--extern","pin_project_lite=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libpin_project_lite-42d82ba4e3590262.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libtokio-c5092555314fef28.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[7155183688686130978,4273333273083828933]},"crate_root":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src","external_crates":[{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","num":18,"id":{"name":"mio","disambiguator":[2971163068360013845,14492408174727908090]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","num":19,"id":{"name":"log","disambiguator":[16637856329360640333,18342046342193457292]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","num":20,"id":{"name":"cfg_if","disambiguator":[1155024563974712189,5296233732488635092]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","num":21,"id":{"name":"libc","disambiguator":[9786668764286879902,8023068580845832097]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/seek.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[6242653208481502721,5903162098939332941]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","num":23,"id":{"name":"bytes","disambiguator":[17308212729600630810,29069590626767026]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_until.rs","num":24,"id":{"name":"memchr","disambiguator":[8810322739008504137,2246171358725891300]}}],"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":0,"byte_end":17518,"line_start":1,"line_end":480,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":9578},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/support.rs","byte_start":32039,"byte_end":32045,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":2,"index":34796},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/support.rs","byte_start":32065,"byte_end":32068,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":2,"index":37301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/support.rs","byte_start":32089,"byte_end":32093,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40948,"byte_end":40960,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41005,"byte_end":41014,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41059,"byte_end":41068,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41115,"byte_end":41125,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41166,"byte_end":41173,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":2782},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41343,"byte_end":41348,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":7187},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41350,"byte_end":41359,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":2780},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41361,"byte_end":41367,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":7260},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41369,"byte_end":41377,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41471,"byte_end":41479,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1007},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41481,"byte_end":41486,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41758,"byte_end":41765,"line_start":225,"line_end":225,"column_start":35,"column_end":42},"alias_span":null,"name":"AsyncFd","value":"","parent":{"krate":0,"index":1255}},{"kind":"Use","ref_id":{"krate":0,"index":1172},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41767,"byte_end":41784,"line_start":225,"line_end":225,"column_start":44,"column_end":61},"alias_span":null,"name":"AsyncFdReadyGuard","value":"","parent":{"krate":0,"index":1255}},{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41786,"byte_end":41806,"line_start":225,"line_end":225,"column_start":63,"column_end":83},"alias_span":null,"name":"AsyncFdReadyMutGuard","value":"","parent":{"krate":0,"index":1255}},{"kind":"Use","ref_id":{"krate":0,"index":1261},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41808,"byte_end":41818,"line_start":225,"line_end":225,"column_start":85,"column_end":95},"alias_span":null,"name":"TryIoError","value":"","parent":{"krate":0,"index":1255}},{"kind":"Use","ref_id":{"krate":0,"index":1380},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42080,"byte_end":42085,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1374},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42087,"byte_end":42095,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1377},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42097,"byte_end":42106,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2367},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42188,"byte_end":42192,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1721},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42194,"byte_end":42212,"line_start":249,"line_end":249,"column_start":15,"column_end":33},"alias_span":null,"name":"copy_bidirectional","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2373},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42214,"byte_end":42222,"line_start":249,"line_end":249,"column_start":35,"column_end":43},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1822},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42224,"byte_end":42230,"line_start":249,"line_end":249,"column_start":45,"column_end":51},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2393},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42232,"byte_end":42237,"line_start":249,"line_end":249,"column_start":53,"column_end":58},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2558},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42239,"byte_end":42245,"line_start":249,"line_end":249,"column_start":60,"column_end":66},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2565},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42247,"byte_end":42251,"line_start":249,"line_end":249,"column_start":68,"column_end":72},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2235},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42253,"byte_end":42268,"line_start":249,"line_end":249,"column_start":74,"column_end":89},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42270,"byte_end":42282,"line_start":249,"line_end":249,"column_start":91,"column_end":103},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2294},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42284,"byte_end":42296,"line_start":249,"line_end":249,"column_start":105,"column_end":117},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2298},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42298,"byte_end":42311,"line_start":249,"line_end":249,"column_start":119,"column_end":132},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":10524},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42321,"byte_end":42330,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":10493},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42332,"byte_end":42341,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":10447},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42343,"byte_end":42352,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2394},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42354,"byte_end":42366,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2391},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42368,"byte_end":42373,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":10306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42375,"byte_end":42380,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2559},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42382,"byte_end":42388,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2563},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42390,"byte_end":42394,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":8943},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42396,"byte_end":42401,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":8903},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":42403,"byte_end":42407,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80259,"byte_end":80272,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3185},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80332,"byte_end":80343,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","byte_start":10382541,"byte_end":10382549,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2775}},{"kind":"Use","ref_id":{"krate":0,"index":3201},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","byte_start":10382551,"byte_end":10382560,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2775}},{"kind":"Use","ref_id":{"krate":0,"index":3208},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","byte_start":10382603,"byte_end":10382616,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2775}},{"kind":"Use","ref_id":{"krate":0,"index":3212},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","byte_start":10382618,"byte_end":10382632,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2775}},{"kind":"Use","ref_id":{"krate":0,"index":3217},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","byte_start":10382634,"byte_end":10382646,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2775}},{"kind":"Use","ref_id":{"krate":0,"index":3218},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","byte_start":10382634,"byte_end":10382646,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2947}},{"kind":"Use","ref_id":{"krate":0,"index":3190},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80390,"byte_end":80401,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3192},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80428,"byte_end":80437,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3224},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80464,"byte_end":80473,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3231},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80506,"byte_end":80515,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3593},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514617,"byte_end":10514625,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3242}},{"kind":"Use","ref_id":{"krate":0,"index":3600},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514627,"byte_end":10514636,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3242}},{"kind":"Use","ref_id":{"krate":0,"index":3607},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514679,"byte_end":10514692,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3242}},{"kind":"Use","ref_id":{"krate":0,"index":3611},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514694,"byte_end":10514708,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3242}},{"kind":"Use","ref_id":{"krate":0,"index":3616},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514710,"byte_end":10514722,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3242}},{"kind":"Use","ref_id":{"krate":0,"index":3617},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514710,"byte_end":10514722,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3442}},{"kind":"Use","ref_id":{"krate":0,"index":3446},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514762,"byte_end":10514772,"line_start":14,"line_end":14,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":3242}},{"kind":"Use","ref_id":{"krate":0,"index":3447},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514762,"byte_end":10514772,"line_start":14,"line_end":14,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":3454}},{"kind":"Use","ref_id":{"krate":0,"index":3629},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514860,"byte_end":10514865,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3242}},{"kind":"Use","ref_id":{"krate":0,"index":3580},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80590,"byte_end":80602,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3590},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80632,"byte_end":80644,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3623},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80672,"byte_end":80682,"line_start":47,"line_end":47,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":4538},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613980,"byte_end":10613987,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3720}},{"kind":"Use","ref_id":{"krate":0,"index":4735},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10614112,"byte_end":10614122,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":3720}},{"kind":"Use","ref_id":{"krate":0,"index":4724},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10614124,"byte_end":10614130,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":3720}},{"kind":"Use","ref_id":{"krate":0,"index":6327},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778546,"byte_end":10778553,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6339},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778555,"byte_end":10778572,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":5088},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822867,"byte_end":10822874,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":4991}},{"kind":"Use","ref_id":{"krate":0,"index":5081},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822876,"byte_end":10822882,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":4991}},{"kind":"Use","ref_id":{"krate":0,"index":5085},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822884,"byte_end":10822892,"line_start":76,"line_end":76,"column_start":42,"column_end":50},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":4991}},{"kind":"Use","ref_id":{"krate":0,"index":5078},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822894,"byte_end":10822900,"line_start":76,"line_end":76,"column_start":52,"column_end":58},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":4991}},{"kind":"Use","ref_id":{"krate":0,"index":5349},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822978,"byte_end":10822995,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":4991}},{"kind":"Use","ref_id":{"krate":0,"index":5343},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822997,"byte_end":10823014,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":4991}},{"kind":"Use","ref_id":{"krate":0,"index":5334},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10823016,"byte_end":10823031,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":4991}},{"kind":"Use","ref_id":{"krate":0,"index":5410},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778654,"byte_end":10778659,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":5414},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778661,"byte_end":10778671,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6422},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778673,"byte_end":10778685,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6423},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778673,"byte_end":10778685,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5493}},{"kind":"Use","ref_id":{"krate":0,"index":5418},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778687,"byte_end":10778702,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6427},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778753,"byte_end":10778759,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6520},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778850,"byte_end":10778862,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6510},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778864,"byte_end":10778879,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6525},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778926,"byte_end":10778935,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6529},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778937,"byte_end":10778952,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6536},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778954,"byte_end":10778974,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6541},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779014,"byte_end":10779020,"line_start":453,"line_end":453,"column_start":21,"column_end":27},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":5824},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779060,"byte_end":10779080,"line_start":454,"line_end":454,"column_start":39,"column_end":59},"alias_span":null,"name":"OwnedRwLockReadGuard","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":5867},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779121,"byte_end":10779142,"line_start":455,"line_end":455,"column_start":40,"column_end":61},"alias_span":null,"name":"OwnedRwLockWriteGuard","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":5909},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779190,"byte_end":10779217,"line_start":456,"line_end":456,"column_start":47,"column_end":74},"alias_span":null,"name":"OwnedRwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":5952},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779251,"byte_end":10779266,"line_start":457,"line_end":457,"column_start":33,"column_end":48},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":5991},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779301,"byte_end":10779317,"line_start":458,"line_end":458,"column_start":34,"column_end":50},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6035},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779359,"byte_end":10779381,"line_start":459,"line_end":459,"column_start":41,"column_end":63},"alias_span":null,"name":"RwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6206},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779486,"byte_end":10779494,"line_start":465,"line_end":465,"column_start":31,"column_end":39},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":6549},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779496,"byte_end":10779504,"line_start":465,"line_end":465,"column_start":41,"column_end":49},"alias_span":null,"name":"SetError","value":"","parent":{"krate":0,"index":4814}},{"kind":"Use","ref_id":{"krate":0,"index":4257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135929,"byte_end":135938,"line_start":274,"line_end":274,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":4259},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135940,"byte_end":135950,"line_start":274,"line_end":274,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":6798},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135994,"byte_end":136008,"line_start":277,"line_end":277,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":6801},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":136045,"byte_end":136050,"line_start":280,"line_end":280,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":6803},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":136171,"byte_end":136180,"line_start":287,"line_end":287,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":6820},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":136218,"byte_end":136229,"line_start":290,"line_end":290,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":6811},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":136231,"byte_end":136239,"line_start":290,"line_end":290,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":6724},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":136287,"byte_end":136295,"line_start":293,"line_end":293,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":6793},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":136349,"byte_end":136362,"line_start":296,"line_end":296,"column_start":29,"column_end":42},"alias_span":null,"name":"unconstrained","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7671},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":136364,"byte_end":136377,"line_start":296,"line_end":296,"column_start":44,"column_end":57},"alias_span":null,"name":"Unconstrained","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":6801},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14845,"byte_end":14850,"line_start":397,"line_end":397,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7019},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140783,"byte_end":11140788,"line_start":95,"line_end":95,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7018},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140790,"byte_end":11140801,"line_start":95,"line_end":95,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7643},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140803,"byte_end":11140808,"line_start":95,"line_end":95,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7341},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140864,"byte_end":11140871,"line_start":100,"line_end":100,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7178},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140907,"byte_end":11140915,"line_start":103,"line_end":103,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7179},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140917,"byte_end":11140928,"line_start":103,"line_end":103,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7364},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140930,"byte_end":11140938,"line_start":103,"line_end":103,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7203},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140988,"byte_end":11140995,"line_start":107,"line_end":107,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7205},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140997,"byte_end":11141007,"line_start":107,"line_end":107,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":0,"index":7605},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11141009,"byte_end":11141016,"line_start":107,"line_end":107,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":6838}},{"kind":"Use","ref_id":{"krate":2,"index":37171},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11141129,"byte_end":11141137,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":6838}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":0,"byte_end":17518,"line_start":1,"line_end":480,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":80},{"krate":0,"index":105},{"krate":0,"index":282},{"krate":0,"index":350},{"krate":0,"index":505},{"krate":0,"index":597},{"krate":0,"index":3720},{"krate":0,"index":598},{"krate":0,"index":4814},{"krate":0,"index":620},{"krate":0,"index":6837},{"krate":0,"index":6838},{"krate":0,"index":621},{"krate":0,"index":693}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":428,"byte_end":511,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":512,"byte_end":515,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":516,"byte_end":596,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":597,"byte_end":669,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":670,"byte_end":706,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":707,"byte_end":710,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":711,"byte_end":778,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":779,"byte_end":859,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":860,"byte_end":883,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":884,"byte_end":971,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":972,"byte_end":1045,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1046,"byte_end":1124,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1125,"byte_end":1205,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1206,"byte_end":1256,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1257,"byte_end":1260,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1261,"byte_end":1317,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1318,"byte_end":1321,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1322,"byte_end":1354,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1355,"byte_end":1378,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1379,"byte_end":1402,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1403,"byte_end":1429,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1430,"byte_end":1451,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1452,"byte_end":1471,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1472,"byte_end":1501,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1502,"byte_end":1529,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1530,"byte_end":1549,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1550,"byte_end":1579,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1580,"byte_end":1626,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1627,"byte_end":1630,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1631,"byte_end":1652,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1653,"byte_end":1656,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1657,"byte_end":1736,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1737,"byte_end":1810,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1811,"byte_end":1890,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1891,"byte_end":1906,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1907,"byte_end":1910,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1911,"byte_end":1983,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":1984,"byte_end":2021,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2022,"byte_end":2025,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2026,"byte_end":2037,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2038,"byte_end":2088,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2089,"byte_end":2096,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2097,"byte_end":2100,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2101,"byte_end":2131,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2132,"byte_end":2135,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2136,"byte_end":2217,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2218,"byte_end":2303,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2304,"byte_end":2388,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2389,"byte_end":2419,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2420,"byte_end":2423,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2424,"byte_end":2440,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2441,"byte_end":2444,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2445,"byte_end":2511,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2512,"byte_end":2515,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2516,"byte_end":2527,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2528,"byte_end":2578,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2579,"byte_end":2586,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2587,"byte_end":2590,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2591,"byte_end":2618,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2619,"byte_end":2622,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2623,"byte_end":2703,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2704,"byte_end":2786,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2787,"byte_end":2868,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2869,"byte_end":2904,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2905,"byte_end":2908,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2909,"byte_end":2925,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2926,"byte_end":2929,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":2930,"byte_end":3012,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3013,"byte_end":3063,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3064,"byte_end":3067,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3068,"byte_end":3079,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3080,"byte_end":3135,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3136,"byte_end":3143,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3144,"byte_end":3147,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3148,"byte_end":3173,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3174,"byte_end":3177,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3178,"byte_end":3254,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3255,"byte_end":3338,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3339,"byte_end":3382,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3383,"byte_end":3386,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3387,"byte_end":3466,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3467,"byte_end":3550,"line_start":100,"line_end":100,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3551,"byte_end":3629,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3630,"byte_end":3649,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3650,"byte_end":3653,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3654,"byte_end":3727,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3728,"byte_end":3743,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3744,"byte_end":3747,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3748,"byte_end":3791,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3792,"byte_end":3824,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3825,"byte_end":3860,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3861,"byte_end":3904,"line_start":110,"line_end":110,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3905,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3959,"byte_end":3962,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":3963,"byte_end":4041,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4042,"byte_end":4098,"line_start":114,"line_end":114,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4099,"byte_end":4102,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4103,"byte_end":4176,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4177,"byte_end":4197,"line_start":117,"line_end":117,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4198,"byte_end":4273,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4274,"byte_end":4286,"line_start":119,"line_end":119,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4287,"byte_end":4367,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4368,"byte_end":4398,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4399,"byte_end":4402,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4403,"byte_end":4479,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4480,"byte_end":4492,"line_start":124,"line_end":124,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4493,"byte_end":4496,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4497,"byte_end":4529,"line_start":126,"line_end":126,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4530,"byte_end":4563,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4564,"byte_end":4601,"line_start":128,"line_end":128,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4602,"byte_end":4639,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4640,"byte_end":4671,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4672,"byte_end":4705,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4706,"byte_end":4709,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4710,"byte_end":4781,"line_start":133,"line_end":133,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4782,"byte_end":4862,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4863,"byte_end":4951,"line_start":135,"line_end":135,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4952,"byte_end":4976,"line_start":136,"line_end":136,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4977,"byte_end":4980,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":4981,"byte_end":5056,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5057,"byte_end":5060,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5061,"byte_end":5093,"line_start":140,"line_end":140,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5094,"byte_end":5127,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5128,"byte_end":5167,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5168,"byte_end":5205,"line_start":143,"line_end":143,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5206,"byte_end":5209,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5210,"byte_end":5288,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5289,"byte_end":5373,"line_start":146,"line_end":146,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5374,"byte_end":5458,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5459,"byte_end":5552,"line_start":148,"line_end":148,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5553,"byte_end":5644,"line_start":149,"line_end":149,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5645,"byte_end":5684,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5685,"byte_end":5688,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5689,"byte_end":5767,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5768,"byte_end":5841,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5842,"byte_end":5914,"line_start":154,"line_end":154,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5915,"byte_end":5993,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":5994,"byte_end":6064,"line_start":156,"line_end":156,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6065,"byte_end":6068,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6069,"byte_end":6095,"line_start":158,"line_end":158,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6096,"byte_end":6134,"line_start":159,"line_end":159,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6135,"byte_end":6175,"line_start":160,"line_end":160,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6176,"byte_end":6216,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6217,"byte_end":6261,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6262,"byte_end":6322,"line_start":163,"line_end":163,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6323,"byte_end":6378,"line_start":164,"line_end":164,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6379,"byte_end":6382,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6383,"byte_end":6423,"line_start":166,"line_end":166,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6424,"byte_end":6427,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6428,"byte_end":6507,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6508,"byte_end":6585,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6586,"byte_end":6666,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6667,"byte_end":6741,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6742,"byte_end":6821,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6822,"byte_end":6899,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6900,"byte_end":6973,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":6974,"byte_end":7050,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7051,"byte_end":7132,"line_start":176,"line_end":176,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7133,"byte_end":7203,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7204,"byte_end":7278,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7279,"byte_end":7355,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7356,"byte_end":7433,"line_start":180,"line_end":180,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7434,"byte_end":7437,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7438,"byte_end":7515,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7516,"byte_end":7519,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7520,"byte_end":7560,"line_start":184,"line_end":184,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7561,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7615,"byte_end":7686,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7687,"byte_end":7690,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7691,"byte_end":7698,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7699,"byte_end":7717,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7718,"byte_end":7739,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7740,"byte_end":7784,"line_start":191,"line_end":191,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7785,"byte_end":7788,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7789,"byte_end":7849,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7850,"byte_end":7902,"line_start":194,"line_end":194,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7903,"byte_end":7938,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7939,"byte_end":7950,"line_start":196,"line_end":196,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7951,"byte_end":7954,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":7955,"byte_end":8010,"line_start":198,"line_end":198,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8011,"byte_end":8086,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8087,"byte_end":8104,"line_start":200,"line_end":200,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8105,"byte_end":8142,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8143,"byte_end":8148,"line_start":202,"line_end":202,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8149,"byte_end":8156,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8157,"byte_end":8160,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8161,"byte_end":8239,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8240,"byte_end":8316,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8317,"byte_end":8393,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8394,"byte_end":8418,"line_start":208,"line_end":208,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8419,"byte_end":8422,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8423,"byte_end":8457,"line_start":210,"line_end":210,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8458,"byte_end":8495,"line_start":211,"line_end":211,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8496,"byte_end":8499,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8500,"byte_end":8522,"line_start":213,"line_end":213,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8523,"byte_end":8526,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8527,"byte_end":8606,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8607,"byte_end":8654,"line_start":216,"line_end":216,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8655,"byte_end":8658,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8659,"byte_end":8738,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8739,"byte_end":8819,"line_start":219,"line_end":219,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8820,"byte_end":8900,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8901,"byte_end":8972,"line_start":221,"line_end":221,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":8973,"byte_end":9004,"line_start":222,"line_end":222,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9005,"byte_end":9008,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9009,"byte_end":9089,"line_start":224,"line_end":224,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9090,"byte_end":9150,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9151,"byte_end":9154,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9155,"byte_end":9234,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9235,"byte_end":9304,"line_start":228,"line_end":228,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9305,"byte_end":9382,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9383,"byte_end":9439,"line_start":230,"line_end":230,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9440,"byte_end":9520,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9521,"byte_end":9566,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9567,"byte_end":9646,"line_start":233,"line_end":233,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9647,"byte_end":9681,"line_start":234,"line_end":234,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9682,"byte_end":9685,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9686,"byte_end":9714,"line_start":236,"line_end":236,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9715,"byte_end":9754,"line_start":237,"line_end":237,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9755,"byte_end":9796,"line_start":238,"line_end":238,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9797,"byte_end":9842,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9843,"byte_end":9867,"line_start":240,"line_end":240,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9868,"byte_end":9898,"line_start":241,"line_end":241,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9899,"byte_end":9925,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9926,"byte_end":9958,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9959,"byte_end":9986,"line_start":244,"line_end":244,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":9987,"byte_end":10015,"line_start":245,"line_end":245,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10016,"byte_end":10040,"line_start":246,"line_end":246,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10041,"byte_end":10077,"line_start":247,"line_end":247,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10078,"byte_end":10116,"line_start":248,"line_end":248,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10117,"byte_end":10120,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10121,"byte_end":10135,"line_start":250,"line_end":250,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10136,"byte_end":10139,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10140,"byte_end":10169,"line_start":252,"line_end":252,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10170,"byte_end":10173,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10174,"byte_end":10187,"line_start":254,"line_end":254,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10188,"byte_end":10220,"line_start":255,"line_end":255,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10221,"byte_end":10270,"line_start":256,"line_end":256,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10271,"byte_end":10274,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10275,"byte_end":10293,"line_start":258,"line_end":258,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10294,"byte_end":10357,"line_start":259,"line_end":259,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10358,"byte_end":10424,"line_start":260,"line_end":260,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10425,"byte_end":10428,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10429,"byte_end":10443,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10444,"byte_end":10503,"line_start":263,"line_end":263,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10504,"byte_end":10507,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10508,"byte_end":10545,"line_start":265,"line_end":265,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10546,"byte_end":10586,"line_start":266,"line_end":266,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10587,"byte_end":10590,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10591,"byte_end":10671,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10672,"byte_end":10694,"line_start":269,"line_end":269,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10695,"byte_end":10758,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10759,"byte_end":10799,"line_start":271,"line_end":271,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10800,"byte_end":10850,"line_start":272,"line_end":272,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10851,"byte_end":10886,"line_start":273,"line_end":273,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10887,"byte_end":10922,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":10923,"byte_end":11006,"line_start":275,"line_end":275,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11007,"byte_end":11042,"line_start":276,"line_end":276,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11043,"byte_end":11068,"line_start":277,"line_end":277,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11069,"byte_end":11091,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11092,"byte_end":11095,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11096,"byte_end":11138,"line_start":280,"line_end":280,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11139,"byte_end":11211,"line_start":281,"line_end":281,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11212,"byte_end":11290,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11291,"byte_end":11322,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11323,"byte_end":11344,"line_start":284,"line_end":284,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11345,"byte_end":11362,"line_start":285,"line_end":285,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11363,"byte_end":11378,"line_start":286,"line_end":286,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11379,"byte_end":11388,"line_start":287,"line_end":287,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11389,"byte_end":11394,"line_start":288,"line_end":288,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11395,"byte_end":11402,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11403,"byte_end":11406,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11407,"byte_end":11427,"line_start":291,"line_end":291,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11428,"byte_end":11431,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11432,"byte_end":11513,"line_start":293,"line_end":293,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11514,"byte_end":11592,"line_start":294,"line_end":294,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11593,"byte_end":11673,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11674,"byte_end":11751,"line_start":296,"line_end":296,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11752,"byte_end":11835,"line_start":297,"line_end":297,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11836,"byte_end":11913,"line_start":298,"line_end":298,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":11914,"byte_end":12001,"line_start":299,"line_end":299,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12002,"byte_end":12083,"line_start":300,"line_end":300,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12084,"byte_end":12093,"line_start":301,"line_end":301,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12094,"byte_end":12097,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12098,"byte_end":12182,"line_start":303,"line_end":303,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12183,"byte_end":12256,"line_start":304,"line_end":304,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12257,"byte_end":12297,"line_start":305,"line_end":305,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12298,"byte_end":12384,"line_start":306,"line_end":306,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12385,"byte_end":12436,"line_start":307,"line_end":307,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12437,"byte_end":12497,"line_start":308,"line_end":308,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12498,"byte_end":12588,"line_start":309,"line_end":309,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12589,"byte_end":12645,"line_start":310,"line_end":310,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12646,"byte_end":12723,"line_start":311,"line_end":311,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12724,"byte_end":12757,"line_start":312,"line_end":312,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12758,"byte_end":12806,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12807,"byte_end":12876,"line_start":314,"line_end":314,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12877,"byte_end":12923,"line_start":315,"line_end":315,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12924,"byte_end":12974,"line_start":316,"line_end":316,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":12975,"byte_end":13013,"line_start":317,"line_end":317,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13014,"byte_end":13092,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13093,"byte_end":13096,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13097,"byte_end":13179,"line_start":320,"line_end":320,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13180,"byte_end":13202,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13203,"byte_end":13206,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13207,"byte_end":13232,"line_start":323,"line_end":323,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13233,"byte_end":13236,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13237,"byte_end":13305,"line_start":325,"line_end":325,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13306,"byte_end":13369,"line_start":326,"line_end":326,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13370,"byte_end":13387,"line_start":327,"line_end":327,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13388,"byte_end":13391,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13392,"byte_end":13471,"line_start":329,"line_end":329,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13472,"byte_end":13549,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13550,"byte_end":13583,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13584,"byte_end":13587,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13588,"byte_end":13613,"line_start":333,"line_end":333,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13614,"byte_end":13617,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13618,"byte_end":13703,"line_start":335,"line_end":335,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13704,"byte_end":13788,"line_start":336,"line_end":336,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13789,"byte_end":13873,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13874,"byte_end":13913,"line_start":338,"line_end":338,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13914,"byte_end":13917,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13918,"byte_end":13958,"line_start":340,"line_end":340,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13959,"byte_end":13962,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":13963,"byte_end":14060,"line_start":342,"line_end":342,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":76}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14249,"byte_end":14261,"line_start":348,"line_end":348,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/mod.rs","byte_start":17555,"byte_end":17575,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110298,"byte_end":10110303,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110069,"byte_end":10110110,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110111,"byte_end":10110114,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110115,"byte_end":10110192,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110261,"byte_end":10110286,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":744},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":967},{"krate":0,"index":993},{"krate":0,"index":1154},{"krate":0,"index":1255},{"krate":0,"index":1266},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33400,"byte_end":33477,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33478,"byte_end":33481,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33482,"byte_end":33553,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33554,"byte_end":33634,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33635,"byte_end":33709,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33710,"byte_end":33713,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33714,"byte_end":33744,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33745,"byte_end":33748,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33749,"byte_end":33829,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33830,"byte_end":33907,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33908,"byte_end":33985,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":33986,"byte_end":34066,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34067,"byte_end":34145,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34146,"byte_end":34211,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34212,"byte_end":34215,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34216,"byte_end":34288,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34289,"byte_end":34356,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34357,"byte_end":34436,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34437,"byte_end":34511,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34512,"byte_end":34586,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34587,"byte_end":34604,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34605,"byte_end":34608,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34609,"byte_end":34673,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34674,"byte_end":34749,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34750,"byte_end":34825,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34826,"byte_end":34903,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34904,"byte_end":34907,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34908,"byte_end":34984,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":34985,"byte_end":35060,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35061,"byte_end":35141,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35142,"byte_end":35213,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35214,"byte_end":35283,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35284,"byte_end":35287,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35288,"byte_end":35360,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35361,"byte_end":35441,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35442,"byte_end":35495,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35496,"byte_end":35499,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35500,"byte_end":35513,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35514,"byte_end":35554,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35555,"byte_end":35579,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35580,"byte_end":35583,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35584,"byte_end":35602,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35603,"byte_end":35642,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35643,"byte_end":35692,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35693,"byte_end":35726,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35727,"byte_end":35730,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35731,"byte_end":35761,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35762,"byte_end":35805,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35806,"byte_end":35809,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35810,"byte_end":35860,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35861,"byte_end":35875,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35876,"byte_end":35881,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35882,"byte_end":35889,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35890,"byte_end":35893,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35894,"byte_end":35923,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35924,"byte_end":35964,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":35965,"byte_end":36001,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36002,"byte_end":36043,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36044,"byte_end":36047,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36048,"byte_end":36083,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36084,"byte_end":36087,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36088,"byte_end":36169,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36170,"byte_end":36244,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36245,"byte_end":36323,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36324,"byte_end":36368,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36369,"byte_end":36372,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36373,"byte_end":36443,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36444,"byte_end":36522,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36523,"byte_end":36601,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36602,"byte_end":36679,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36680,"byte_end":36683,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36684,"byte_end":36759,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36760,"byte_end":36798,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36799,"byte_end":36802,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36803,"byte_end":36816,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36817,"byte_end":36871,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36872,"byte_end":36896,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36897,"byte_end":36900,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36901,"byte_end":36919,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36920,"byte_end":36959,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":36960,"byte_end":37005,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37006,"byte_end":37049,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37050,"byte_end":37089,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37090,"byte_end":37093,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37094,"byte_end":37128,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37129,"byte_end":37174,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37175,"byte_end":37178,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37179,"byte_end":37210,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37211,"byte_end":37225,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37226,"byte_end":37231,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37232,"byte_end":37239,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37240,"byte_end":37243,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37244,"byte_end":37325,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37326,"byte_end":37404,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37405,"byte_end":37467,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37468,"byte_end":37471,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37472,"byte_end":37485,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37486,"byte_end":37538,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37539,"byte_end":37563,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37564,"byte_end":37567,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37568,"byte_end":37586,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37587,"byte_end":37626,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37627,"byte_end":37674,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37675,"byte_end":37684,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37685,"byte_end":37732,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37733,"byte_end":37736,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37737,"byte_end":37779,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37780,"byte_end":37821,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37822,"byte_end":37825,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37826,"byte_end":37886,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37887,"byte_end":37921,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37922,"byte_end":37925,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":37926,"byte_end":38016,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38017,"byte_end":38020,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38021,"byte_end":38035,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38036,"byte_end":38041,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38042,"byte_end":38049,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38050,"byte_end":38053,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38054,"byte_end":38099,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38100,"byte_end":38142,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38143,"byte_end":38188,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38189,"byte_end":38228,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38229,"byte_end":38268,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38269,"byte_end":38272,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38273,"byte_end":38317,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38318,"byte_end":38321,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38322,"byte_end":38404,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38405,"byte_end":38484,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38485,"byte_end":38559,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38560,"byte_end":38633,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38634,"byte_end":38694,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38695,"byte_end":38698,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38699,"byte_end":38740,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38741,"byte_end":38744,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38745,"byte_end":38813,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38814,"byte_end":38883,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38884,"byte_end":38950,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":38951,"byte_end":39014,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39015,"byte_end":39082,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39083,"byte_end":39152,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39153,"byte_end":39223,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39224,"byte_end":39302,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39303,"byte_end":39328,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39329,"byte_end":39332,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39333,"byte_end":39409,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39410,"byte_end":39413,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39414,"byte_end":39445,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39446,"byte_end":39449,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39450,"byte_end":39530,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39531,"byte_end":39607,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39608,"byte_end":39655,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39656,"byte_end":39659,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39660,"byte_end":39733,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39734,"byte_end":39810,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39811,"byte_end":39887,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39888,"byte_end":39891,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39892,"byte_end":39913,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39914,"byte_end":39937,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39938,"byte_end":39960,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39961,"byte_end":39964,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39965,"byte_end":39987,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39988,"byte_end":39991,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":39992,"byte_end":40068,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40069,"byte_end":40116,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40117,"byte_end":40120,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40121,"byte_end":40155,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40156,"byte_end":40192,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40193,"byte_end":40233,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40234,"byte_end":40276,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40277,"byte_end":40350,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40351,"byte_end":40434,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40435,"byte_end":40518,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40519,"byte_end":40546,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40547,"byte_end":40580,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40581,"byte_end":40608,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40609,"byte_end":40636,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40637,"byte_end":40668,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40669,"byte_end":40739,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40740,"byte_end":40816,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":40817,"byte_end":40846,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43544,"byte_end":43556,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":42867,"byte_end":42898,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":42899,"byte_end":42902,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":42903,"byte_end":42975,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":42976,"byte_end":43054,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43055,"byte_end":43141,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43142,"byte_end":43219,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43220,"byte_end":43231,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43232,"byte_end":43235,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43236,"byte_end":43304,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43305,"byte_end":43329,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43330,"byte_end":43333,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43334,"byte_end":43376,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43377,"byte_end":43427,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43428,"byte_end":43481,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43482,"byte_end":43533,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44654,"byte_end":44667,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43574,"byte_end":43659,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43664,"byte_end":43705,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43710,"byte_end":43713,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43718,"byte_end":43765,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43770,"byte_end":43773,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43778,"byte_end":43837,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43842,"byte_end":43900,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43905,"byte_end":43986,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43991,"byte_end":44017,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44022,"byte_end":44025,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44030,"byte_end":44101,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44106,"byte_end":44168,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44173,"byte_end":44244,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44249,"byte_end":44330,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44335,"byte_end":44411,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44416,"byte_end":44467,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44472,"byte_end":44475,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44480,"byte_end":44551,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44556,"byte_end":44559,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44564,"byte_end":44603,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44608,"byte_end":44646,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45570,"byte_end":45577,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44745,"byte_end":44819,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44824,"byte_end":44891,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44896,"byte_end":44899,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44904,"byte_end":44975,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":44980,"byte_end":45049,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45054,"byte_end":45128,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45133,"byte_end":45210,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45215,"byte_end":45285,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45290,"byte_end":45343,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45348,"byte_end":45351,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45356,"byte_end":45428,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45433,"byte_end":45455,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45460,"byte_end":45463,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45468,"byte_end":45507,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":45512,"byte_end":45562,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":142},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48891,"byte_end":48900,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":143}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47204,"byte_end":47234,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47235,"byte_end":47238,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47239,"byte_end":47318,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47319,"byte_end":47393,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47394,"byte_end":47473,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47474,"byte_end":47551,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47552,"byte_end":47563,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47564,"byte_end":47567,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47568,"byte_end":47645,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47646,"byte_end":47664,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47665,"byte_end":47668,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47669,"byte_end":47749,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47750,"byte_end":47823,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47824,"byte_end":47903,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47904,"byte_end":47948,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47949,"byte_end":47952,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":47953,"byte_end":48018,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48019,"byte_end":48099,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48100,"byte_end":48179,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48180,"byte_end":48253,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48254,"byte_end":48327,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48328,"byte_end":48349,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48350,"byte_end":48353,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48354,"byte_end":48438,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48439,"byte_end":48463,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48464,"byte_end":48467,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48468,"byte_end":48541,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48542,"byte_end":48621,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48622,"byte_end":48625,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48626,"byte_end":48691,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48692,"byte_end":48713,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48714,"byte_end":48717,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48718,"byte_end":48757,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48758,"byte_end":48794,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48795,"byte_end":48834,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48835,"byte_end":48880,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49417,"byte_end":49426,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48907,"byte_end":48960,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48965,"byte_end":48968,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":48973,"byte_end":49041,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49046,"byte_end":49121,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49126,"byte_end":49179,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49184,"byte_end":49187,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49192,"byte_end":49267,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49272,"byte_end":49341,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49346,"byte_end":49409,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52022,"byte_end":52031,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51540,"byte_end":51570,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51571,"byte_end":51574,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51575,"byte_end":51649,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51650,"byte_end":51720,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51721,"byte_end":51790,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51791,"byte_end":51794,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51795,"byte_end":51860,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51861,"byte_end":51882,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51883,"byte_end":51886,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51887,"byte_end":51923,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51924,"byte_end":51965,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":51966,"byte_end":52011,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52673,"byte_end":52683,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52038,"byte_end":52095,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52100,"byte_end":52103,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52108,"byte_end":52181,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52186,"byte_end":52212,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52217,"byte_end":52220,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52225,"byte_end":52300,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52305,"byte_end":52361,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52366,"byte_end":52369,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52374,"byte_end":52386,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52391,"byte_end":52394,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52399,"byte_end":52469,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52474,"byte_end":52548,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52553,"byte_end":52627,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52632,"byte_end":52665,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53206,"byte_end":53219,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52750,"byte_end":52793,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52798,"byte_end":52801,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52806,"byte_end":52855,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52860,"byte_end":52930,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":52935,"byte_end":53007,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53012,"byte_end":53083,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53088,"byte_end":53104,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53109,"byte_end":53112,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53117,"byte_end":53129,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53134,"byte_end":53137,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53142,"byte_end":53198,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56510,"byte_end":56520,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":200}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":54647,"byte_end":54679,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":54680,"byte_end":54683,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":54684,"byte_end":54766,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":54767,"byte_end":54842,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":54843,"byte_end":54910,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":54911,"byte_end":54914,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":54915,"byte_end":54995,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":54996,"byte_end":55014,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55015,"byte_end":55018,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55019,"byte_end":55090,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55091,"byte_end":55105,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55106,"byte_end":55109,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55110,"byte_end":55178,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55179,"byte_end":55259,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55260,"byte_end":55339,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55340,"byte_end":55413,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55414,"byte_end":55487,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55488,"byte_end":55509,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55510,"byte_end":55513,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55514,"byte_end":55598,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55599,"byte_end":55623,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55624,"byte_end":55627,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55628,"byte_end":55710,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55711,"byte_end":55794,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55795,"byte_end":55798,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55799,"byte_end":55883,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55884,"byte_end":55968,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":55969,"byte_end":56047,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56048,"byte_end":56127,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56128,"byte_end":56189,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56190,"byte_end":56193,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56194,"byte_end":56260,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56261,"byte_end":56283,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56284,"byte_end":56287,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56288,"byte_end":56326,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56327,"byte_end":56371,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56372,"byte_end":56411,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56412,"byte_end":56451,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56452,"byte_end":56499,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56904,"byte_end":56914,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56527,"byte_end":56581,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56586,"byte_end":56589,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56594,"byte_end":56655,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56660,"byte_end":56663,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56668,"byte_end":56730,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56735,"byte_end":56793,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56798,"byte_end":56865,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":56870,"byte_end":56896,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57455,"byte_end":57465,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57042,"byte_end":57113,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57118,"byte_end":57140,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57145,"byte_end":57148,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57153,"byte_end":57199,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57204,"byte_end":57207,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57212,"byte_end":57276,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57281,"byte_end":57339,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57344,"byte_end":57412,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57417,"byte_end":57447,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60751,"byte_end":60764,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57547,"byte_end":57621,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57626,"byte_end":57674,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57679,"byte_end":57682,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57687,"byte_end":57758,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57763,"byte_end":57839,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57844,"byte_end":57920,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":57925,"byte_end":58000,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58005,"byte_end":58076,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58081,"byte_end":58157,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58162,"byte_end":58190,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58195,"byte_end":58198,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58203,"byte_end":58264,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58269,"byte_end":58340,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58345,"byte_end":58417,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58422,"byte_end":58497,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58502,"byte_end":58575,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58580,"byte_end":58655,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58660,"byte_end":58732,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58737,"byte_end":58748,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58753,"byte_end":58756,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58761,"byte_end":58835,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58840,"byte_end":58912,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58917,"byte_end":58986,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":58991,"byte_end":59059,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59064,"byte_end":59125,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59130,"byte_end":59133,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59138,"byte_end":59156,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59161,"byte_end":59164,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59169,"byte_end":59239,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59244,"byte_end":59247,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59252,"byte_end":59315,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59320,"byte_end":59389,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59394,"byte_end":59469,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59474,"byte_end":59547,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59552,"byte_end":59603,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59608,"byte_end":59611,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59616,"byte_end":59686,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59691,"byte_end":59766,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59771,"byte_end":59843,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59848,"byte_end":59918,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":59923,"byte_end":59998,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60003,"byte_end":60006,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60011,"byte_end":60092,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60097,"byte_end":60172,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60177,"byte_end":60244,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60249,"byte_end":60252,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60257,"byte_end":60269,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60274,"byte_end":60277,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60282,"byte_end":60353,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60358,"byte_end":60424,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60429,"byte_end":60503,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60508,"byte_end":60572,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60577,"byte_end":60616,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60621,"byte_end":60624,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60629,"byte_end":60641,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60646,"byte_end":60649,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60654,"byte_end":60729,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60734,"byte_end":60743,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61877,"byte_end":61896,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60846,"byte_end":60917,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60922,"byte_end":60925,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":60930,"byte_end":60997,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61002,"byte_end":61072,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61077,"byte_end":61147,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61152,"byte_end":61155,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61160,"byte_end":61242,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61247,"byte_end":61299,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61304,"byte_end":61307,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61312,"byte_end":61373,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61378,"byte_end":61381,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61386,"byte_end":61448,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61453,"byte_end":61511,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61516,"byte_end":61583,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61588,"byte_end":61614,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61619,"byte_end":61622,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61627,"byte_end":61637,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61642,"byte_end":61645,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61650,"byte_end":61722,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61727,"byte_end":61797,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61802,"byte_end":61814,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61819,"byte_end":61822,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":61827,"byte_end":61869,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62664,"byte_end":62681,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62194,"byte_end":62264,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62269,"byte_end":62288,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62293,"byte_end":62296,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62301,"byte_end":62370,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62375,"byte_end":62450,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62455,"byte_end":62523,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62528,"byte_end":62531,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62536,"byte_end":62583,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62588,"byte_end":62591,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":62596,"byte_end":62656,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69921,"byte_end":69928,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":68973,"byte_end":69053,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69054,"byte_end":69057,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69058,"byte_end":69132,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69133,"byte_end":69208,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69209,"byte_end":69287,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69288,"byte_end":69364,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69365,"byte_end":69442,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69443,"byte_end":69446,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69447,"byte_end":69511,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69512,"byte_end":69515,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69516,"byte_end":69531,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69532,"byte_end":69573,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69574,"byte_end":69615,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69616,"byte_end":69657,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69658,"byte_end":69665,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69666,"byte_end":69669,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69670,"byte_end":69748,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69749,"byte_end":69827,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":69828,"byte_end":69909,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70130,"byte_end":70133,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70044,"byte_end":70104,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70109,"byte_end":70118,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70579,"byte_end":70585,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70398,"byte_end":70460,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70465,"byte_end":70468,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70473,"byte_end":70553,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70558,"byte_end":70567,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70813,"byte_end":70821,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70742,"byte_end":70787,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70792,"byte_end":70801,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70967,"byte_end":70973,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70874,"byte_end":70941,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70946,"byte_end":70955,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":71427,"byte_end":71437,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":71333,"byte_end":71401,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":71406,"byte_end":71415,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":71915,"byte_end":71919,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":71817,"byte_end":71889,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":71894,"byte_end":71903,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72325,"byte_end":72336,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72177,"byte_end":72249,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72254,"byte_end":72257,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72262,"byte_end":72299,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72304,"byte_end":72313,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72848,"byte_end":72863,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72699,"byte_end":72772,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72777,"byte_end":72780,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72785,"byte_end":72822,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":72827,"byte_end":72836,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74086,"byte_end":74095,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73246,"byte_end":73339,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73344,"byte_end":73360,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73365,"byte_end":73368,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73373,"byte_end":73461,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73466,"byte_end":73557,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73562,"byte_end":73565,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73570,"byte_end":73665,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73670,"byte_end":73754,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73759,"byte_end":73835,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73840,"byte_end":73843,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73848,"byte_end":73860,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73865,"byte_end":73868,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73873,"byte_end":73969,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":73974,"byte_end":74053,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74058,"byte_end":74067,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74541,"byte_end":74553,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74163,"byte_end":74269,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74274,"byte_end":74290,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74295,"byte_end":74298,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74303,"byte_end":74315,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74320,"byte_end":74323,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74328,"byte_end":74424,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74429,"byte_end":74508,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74513,"byte_end":74522,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74915,"byte_end":74934,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74641,"byte_end":74742,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74747,"byte_end":74750,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74755,"byte_end":74866,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74871,"byte_end":74889,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":74894,"byte_end":74903,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":75272,"byte_end":75294,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":75026,"byte_end":75131,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":75136,"byte_end":75158,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":75163,"byte_end":75166,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":75171,"byte_end":75183,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":75188,"byte_end":75191,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":75196,"byte_end":75246,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":75251,"byte_end":75260,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76139,"byte_end":76148,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76027,"byte_end":76113,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76118,"byte_end":76127,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76415,"byte_end":76420,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76216,"byte_end":76276,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76281,"byte_end":76284,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76289,"byte_end":76389,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76394,"byte_end":76403,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76749,"byte_end":76756,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76470,"byte_end":76527,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76532,"byte_end":76535,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76540,"byte_end":76591,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76596,"byte_end":76599,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76604,"byte_end":76616,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76621,"byte_end":76624,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76629,"byte_end":76723,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76728,"byte_end":76737,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77366,"byte_end":77376,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76893,"byte_end":76946,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76951,"byte_end":76954,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":76959,"byte_end":77010,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77015,"byte_end":77018,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77023,"byte_end":77128,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77133,"byte_end":77209,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77214,"byte_end":77217,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77222,"byte_end":77234,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77239,"byte_end":77242,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77247,"byte_end":77340,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77345,"byte_end":77354,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77980,"byte_end":77991,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77560,"byte_end":77636,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77641,"byte_end":77644,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77649,"byte_end":77758,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77763,"byte_end":77814,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77819,"byte_end":77822,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77827,"byte_end":77839,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77844,"byte_end":77847,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77852,"byte_end":77947,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":77952,"byte_end":77961,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":78371,"byte_end":78380,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":78143,"byte_end":78249,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":78254,"byte_end":78257,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":78262,"byte_end":78274,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":78279,"byte_end":78282,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":78287,"byte_end":78345,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":78350,"byte_end":78359,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121404,"byte_end":10121412,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121160,"byte_end":10121188,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121189,"byte_end":10121192,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121193,"byte_end":10121272,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121273,"byte_end":10121307,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":750},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121564,"byte_end":10121572,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121450,"byte_end":10121486,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121491,"byte_end":10121494,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121499,"byte_end":10121549,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":751},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121739,"byte_end":10121747,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121625,"byte_end":10121660,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121665,"byte_end":10121668,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121673,"byte_end":10121724,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122183,"byte_end":10122194,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121800,"byte_end":10121857,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121862,"byte_end":10121865,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121870,"byte_end":10121884,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121889,"byte_end":10121892,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121897,"byte_end":10121904,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121909,"byte_end":10121937,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121942,"byte_end":10121945,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121950,"byte_end":10121996,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122001,"byte_end":10122048,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122053,"byte_end":10122056,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122061,"byte_end":10122116,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122121,"byte_end":10122153,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122158,"byte_end":10122165,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122634,"byte_end":10122645,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122251,"byte_end":10122308,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122313,"byte_end":10122316,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122321,"byte_end":10122335,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122340,"byte_end":10122343,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122348,"byte_end":10122355,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122360,"byte_end":10122388,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122393,"byte_end":10122396,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122401,"byte_end":10122448,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122453,"byte_end":10122499,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122504,"byte_end":10122507,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122512,"byte_end":10122567,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122572,"byte_end":10122604,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122609,"byte_end":10122616,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10123063,"byte_end":10123066,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122702,"byte_end":10122740,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122745,"byte_end":10122748,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122753,"byte_end":10122800,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122805,"byte_end":10122808,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122813,"byte_end":10122827,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122832,"byte_end":10122835,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122840,"byte_end":10122847,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122852,"byte_end":10122880,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122885,"byte_end":10122888,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122893,"byte_end":10122963,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122968,"byte_end":10122971,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10122976,"byte_end":10123008,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10123013,"byte_end":10123045,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1007},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124444,"byte_end":10124449,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124209,"byte_end":10124263,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124264,"byte_end":10124267,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124268,"byte_end":10124339,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":773},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124525,"byte_end":10124530,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124476,"byte_end":10124510,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":774},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124624,"byte_end":10124632,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124555,"byte_end":10124609,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":775},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124733,"byte_end":10124741,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124664,"byte_end":10124718,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":776},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124845,"byte_end":10124856,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124773,"byte_end":10124830,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":777},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124964,"byte_end":10124976,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124891,"byte_end":10124949,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":778},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125091,"byte_end":10125094,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125012,"byte_end":10125076,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125951,"byte_end":10125959,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125710,"byte_end":10125754,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125759,"byte_end":10125762,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125767,"byte_end":10125781,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125786,"byte_end":10125789,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125794,"byte_end":10125801,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125806,"byte_end":10125831,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125836,"byte_end":10125839,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125844,"byte_end":10125881,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125886,"byte_end":10125927,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10125932,"byte_end":10125939,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126370,"byte_end":10126381,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126016,"byte_end":10126067,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126072,"byte_end":10126075,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126080,"byte_end":10126094,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126099,"byte_end":10126102,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126107,"byte_end":10126114,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126119,"byte_end":10126144,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126149,"byte_end":10126152,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126157,"byte_end":10126198,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126203,"byte_end":10126246,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126251,"byte_end":10126297,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126302,"byte_end":10126346,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126351,"byte_end":10126358,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126838,"byte_end":10126849,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126473,"byte_end":10126534,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126539,"byte_end":10126542,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126547,"byte_end":10126561,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126566,"byte_end":10126569,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126574,"byte_end":10126581,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126586,"byte_end":10126611,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126616,"byte_end":10126619,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126624,"byte_end":10126665,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126670,"byte_end":10126714,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126719,"byte_end":10126762,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126767,"byte_end":10126814,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126819,"byte_end":10126826,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127270,"byte_end":10127284,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10126942,"byte_end":10127006,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127011,"byte_end":10127014,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127019,"byte_end":10127033,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127038,"byte_end":10127041,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127046,"byte_end":10127053,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127058,"byte_end":10127083,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127088,"byte_end":10127091,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127096,"byte_end":10127140,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127145,"byte_end":10127192,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127197,"byte_end":10127246,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127251,"byte_end":10127258,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127687,"byte_end":10127702,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127354,"byte_end":10127419,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127424,"byte_end":10127427,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127432,"byte_end":10127446,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127451,"byte_end":10127454,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127459,"byte_end":10127466,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127471,"byte_end":10127496,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127501,"byte_end":10127504,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127509,"byte_end":10127554,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127559,"byte_end":10127607,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127612,"byte_end":10127663,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10127668,"byte_end":10127675,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171955,"byte_end":10171962,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"AsyncFd","qualname":"::io::async_fd::AsyncFd","value":"AsyncFd {  }","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171}],"decl_id":null,"docs":" Associates an IO object backed by a Unix file descriptor with the tokio\n reactor, allowing for readiness to be polled. The file descriptor must be of\n a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,\n `kqueue`, etc), such as a network socket or pipe, and the file descriptor\n must have the nonblocking mode set to true.","sig":null,"attributes":[{"value":"/ Associates an IO object backed by a Unix file descriptor with the tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166363,"byte_end":10166438,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ reactor, allowing for readiness to be polled. The file descriptor must be of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166439,"byte_end":10166519,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166520,"byte_end":10166600,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ `kqueue`, etc), such as a network socket or pipe, and the file descriptor","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166601,"byte_end":10166678,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ must have the nonblocking mode set to true.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166679,"byte_end":10166726,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166727,"byte_end":10166730,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Creating an AsyncFd registers the file descriptor with the current tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166731,"byte_end":10166807,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ Reactor, allowing you to directly await the file descriptor being readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166808,"byte_end":10166886,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ or writable. Once registered, the file descriptor remains registered until","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166887,"byte_end":10166965,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ the AsyncFd is dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166966,"byte_end":10166993,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166994,"byte_end":10166997,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The AsyncFd takes ownership of an arbitrary object to represent the IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10166998,"byte_end":10167072,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ object. It is intended that this object will handle closing the file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167073,"byte_end":10167145,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ descriptor when it is dropped, avoiding resource leaks and ensuring that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167146,"byte_end":10167226,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ AsyncFd can clean up the registration before closing the file descriptor.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167227,"byte_end":10167304,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ The [`AsyncFd::into_inner`] function can be used to extract the inner object","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167305,"byte_end":10167385,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ to retake control from the tokio IO reactor.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167386,"byte_end":10167434,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167435,"byte_end":10167438,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The inner object is required to implement [`AsRawFd`]. This file descriptor","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167439,"byte_end":10167518,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ must not change while [`AsyncFd`] owns the inner object, i.e. the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167519,"byte_end":10167588,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ [`AsRawFd::as_raw_fd`] method on the inner type must always return the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167589,"byte_end":10167668,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ file descriptor when called multiple times. Failure to uphold this results","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167669,"byte_end":10167747,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ in unspecified behavior in the IO driver, which may include breaking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167748,"byte_end":10167820,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ notifications for other sockets/etc.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167821,"byte_end":10167861,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167862,"byte_end":10167865,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Polling for readiness is done by calling the async functions [`readable`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167866,"byte_end":10167943,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ and [`writable`]. These functions complete when the associated readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10167944,"byte_end":10168020,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ condition is observed. Any number of tasks can query the same `AsyncFd` in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168021,"byte_end":10168099,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ parallel, on the same or different conditions.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168100,"byte_end":10168150,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168151,"byte_end":10168154,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ On some platforms, the readiness detecting mechanism relies on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168155,"byte_end":10168221,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ edge-triggered notifications. This means that the OS will only notify Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168222,"byte_end":10168301,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ when the file descriptor transitions from not-ready to ready. For this to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168302,"byte_end":10168379,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ work you should first try to read or write and only poll for readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168380,"byte_end":10168454,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ if that fails with an error of [`std::io::ErrorKind::WouldBlock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168455,"byte_end":10168525,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168526,"byte_end":10168529,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Tokio internally tracks when it has received a ready notification, and when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168530,"byte_end":10168609,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ readiness checking functions like [`readable`] and [`writable`] are called,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168610,"byte_end":10168689,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ if the readiness flag is set, these async functions will complete","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168690,"byte_end":10168759,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/ immediately. This however does mean that it is critical to ensure that this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168760,"byte_end":10168839,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ ready flag is cleared when (and only when) the file descriptor ceases to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168840,"byte_end":10168919,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ ready. The [`AsyncFdReadyGuard`] returned from readiness checking functions","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10168920,"byte_end":10168999,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ serves this function; after calling a readiness-checking async function,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169000,"byte_end":10169076,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ you must use this [`AsyncFdReadyGuard`] to signal to tokio whether the file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169077,"byte_end":10169156,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ descriptor is no longer in a ready state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169157,"byte_end":10169202,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169203,"byte_end":10169206,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Use with to a poll-based API","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169207,"byte_end":10169242,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169243,"byte_end":10169246,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ In some cases it may be desirable to use `AsyncFd` from APIs similar to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169247,"byte_end":10169322,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ [`TcpStream::poll_read_ready`]. The [`AsyncFd::poll_read_ready`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169323,"byte_end":10169395,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ [`AsyncFd::poll_write_ready`] functions are provided for this purpose.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169396,"byte_end":10169470,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ Because these functions don't create a future to hold their state, they have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169471,"byte_end":10169551,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ the limitation that only one task can wait on each direction (read or write)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169552,"byte_end":10169632,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ at a time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169633,"byte_end":10169647,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169648,"byte_end":10169651,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169652,"byte_end":10169666,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169667,"byte_end":10169670,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This example shows how to turn [`std::net::TcpStream`] asynchronous using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169671,"byte_end":10169748,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ `AsyncFd`.  It implements `read` as an async fn, and `AsyncWrite` as a trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169749,"byte_end":10169829,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ to show how to implement both approaches.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169830,"byte_end":10169875,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169876,"byte_end":10169879,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169880,"byte_end":10169893,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/ use futures::ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169894,"byte_end":10169917,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169918,"byte_end":10169955,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169956,"byte_end":10169984,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10169985,"byte_end":10170007,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170008,"byte_end":10170043,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use tokio::io::AsyncWrite;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170044,"byte_end":10170074,"line_start":75,"line_end":75,"column_start":1,"column_end":31}},{"value":"/ use tokio::io::unix::AsyncFd;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170075,"byte_end":10170108,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170109,"byte_end":10170112,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ pub struct AsyncTcpStream {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170113,"byte_end":10170144,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/     inner: AsyncFd<TcpStream>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170145,"byte_end":10170179,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170180,"byte_end":10170185,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170186,"byte_end":10170189,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl AsyncTcpStream {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170190,"byte_end":10170215,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/     pub fn new(tcp: TcpStream) -> io::Result<Self> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170216,"byte_end":10170272,"line_start":83,"line_end":83,"column_start":1,"column_end":57}},{"value":"/         Ok(Self {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170273,"byte_end":10170294,"line_start":84,"line_end":84,"column_start":1,"column_end":22}},{"value":"/             inner: AsyncFd::new(tcp)?,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170295,"byte_end":10170337,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/         })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170338,"byte_end":10170352,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170353,"byte_end":10170362,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170363,"byte_end":10170366,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/     pub async fn read(&self, out: &mut [u8]) -> io::Result<usize> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170367,"byte_end":10170438,"line_start":89,"line_end":89,"column_start":1,"column_end":72}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170439,"byte_end":10170457,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/             let mut guard = self.inner.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170458,"byte_end":10170519,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170520,"byte_end":10170523,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().read(out)) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170524,"byte_end":10170595,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/                 Ok(result) => return result,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170596,"byte_end":10170644,"line_start":94,"line_end":94,"column_start":1,"column_end":49}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170645,"byte_end":10170695,"line_start":95,"line_end":95,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170696,"byte_end":10170713,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170714,"byte_end":10170727,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170728,"byte_end":10170737,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170738,"byte_end":10170743,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170744,"byte_end":10170747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ impl AsyncWrite for AsyncTcpStream {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170748,"byte_end":10170788,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"/     fn poll_write(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170789,"byte_end":10170811,"line_start":102,"line_end":102,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170812,"byte_end":10170845,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170846,"byte_end":10170879,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/         buf: &[u8]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170880,"byte_end":10170902,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/     ) -> Poll<io::Result<usize>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170903,"byte_end":10170941,"line_start":106,"line_end":106,"column_start":1,"column_end":39}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170942,"byte_end":10170960,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/             let mut guard = ready!(self.inner.poll_write_ready(cx))?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10170961,"byte_end":10171034,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171035,"byte_end":10171038,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().write(buf)) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171039,"byte_end":10171111,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/                 Ok(result) => return Poll::Ready(result),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171112,"byte_end":10171173,"line_start":111,"line_end":111,"column_start":1,"column_end":62}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171174,"byte_end":10171224,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171225,"byte_end":10171242,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171243,"byte_end":10171256,"line_start":114,"line_end":114,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171257,"byte_end":10171266,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171267,"byte_end":10171270,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     fn poll_flush(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171271,"byte_end":10171293,"line_start":117,"line_end":117,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171294,"byte_end":10171327,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171328,"byte_end":10171361,"line_start":119,"line_end":119,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171362,"byte_end":10171397,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/         // tcp flush is a no-op","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171398,"byte_end":10171433,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171434,"byte_end":10171465,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171466,"byte_end":10171475,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171476,"byte_end":10171479,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/     fn poll_shutdown(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171480,"byte_end":10171505,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171506,"byte_end":10171539,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171540,"byte_end":10171573,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171574,"byte_end":10171609,"line_start":128,"line_end":128,"column_start":1,"column_end":36}},{"value":"/         self.inner.get_ref().shutdown(std::net::Shutdown::Write)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171610,"byte_end":10171680,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171681,"byte_end":10171712,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171713,"byte_end":10171722,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171723,"byte_end":10171728,"line_start":132,"line_end":132,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171729,"byte_end":10171736,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171737,"byte_end":10171740,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171741,"byte_end":10171780,"line_start":135,"line_end":135,"column_start":1,"column_end":40}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171781,"byte_end":10171820,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/ [`AsyncFdReadyGuard`]: struct@self::AsyncFdReadyGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171821,"byte_end":10171878,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"/ [`TcpStream::poll_read_ready`]: struct@crate::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10171879,"byte_end":10171943,"line_start":138,"line_end":138,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1172},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172470,"byte_end":10172487,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"AsyncFdReadyGuard","qualname":"::io::async_fd::AsyncFdReadyGuard","value":"AsyncFdReadyGuard {  }","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172034,"byte_end":10172112,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172113,"byte_end":10172193,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172194,"byte_end":10172266,"line_start":146,"line_end":146,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172267,"byte_end":10172270,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This type exposes an immutable reference to the underlying IO object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172271,"byte_end":10172344,"line_start":148,"line_end":148,"column_start":1,"column_end":74}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172345,"byte_end":10172458,"line_start":149,"line_end":149,"column_start":1,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173003,"byte_end":10173023,"line_start":161,"line_end":161,"column_start":12,"column_end":32},"name":"AsyncFdReadyMutGuard","qualname":"::io::async_fd::AsyncFdReadyMutGuard","value":"AsyncFdReadyMutGuard {  }","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172570,"byte_end":10172648,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172649,"byte_end":10172729,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172730,"byte_end":10172802,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172803,"byte_end":10172806,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ This type exposes a mutable reference to the underlying IO object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172807,"byte_end":10172877,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10172878,"byte_end":10172991,"line_start":160,"line_end":160,"column_start":1,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173497,"byte_end":10173500,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<AsyncFd<T>>::new","value":"pub fn new(T) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates an AsyncFd backed by (and taking ownership of) an object\n implementing [`AsRawFd`]. The backing file descriptor is cached at the\n time of creation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173220,"byte_end":10173229,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ Creates an AsyncFd backed by (and taking ownership of) an object","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173234,"byte_end":10173302,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ implementing [`AsRawFd`]. The backing file descriptor is cached at the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173307,"byte_end":10173381,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ time of creation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173386,"byte_end":10173407,"line_start":172,"line_end":172,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173412,"byte_end":10173415,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This method must be called in the context of a tokio runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173420,"byte_end":10173485,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173825,"byte_end":10173838,"line_start":185,"line_end":185,"column_start":12,"column_end":25},"name":"with_interest","qualname":"<AsyncFd<T>>::with_interest","value":"pub fn with_interest(T, Interest) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates new instance as `new` with additional ability to customize interest,\n allowing to specify whether file descriptor will be polled for read, write or both.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173627,"byte_end":10173636,"line_start":182,"line_end":182,"column_start":5,"column_end":14}},{"value":"/ Creates new instance as `new` with additional ability to customize interest,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173641,"byte_end":10173721,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/ allowing to specify whether file descriptor will be polled for read, write or both.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173726,"byte_end":10173813,"line_start":184,"line_end":184,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10174516,"byte_end":10174523,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AsyncFd<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10174418,"byte_end":10174490,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10174495,"byte_end":10174504,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10174686,"byte_end":10174693,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AsyncFd<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10174587,"byte_end":10174660,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10174665,"byte_end":10174674,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175118,"byte_end":10175128,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AsyncFd<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Deregisters this file descriptor and returns ownership of the backing\n object.\n","sig":null,"attributes":[{"value":"/ Deregisters this file descriptor and returns ownership of the backing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175017,"byte_end":10175090,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175095,"byte_end":10175106,"line_start":231,"line_end":231,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176655,"byte_end":10176670,"line_start":263,"line_end":263,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<AsyncFd<T>>::poll_read_ready","value":"pub fn poll_read_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175192,"byte_end":10175221,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175226,"byte_end":10175229,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175234,"byte_end":10175308,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175313,"byte_end":10175392,"line_start":239,"line_end":239,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175397,"byte_end":10175475,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175480,"byte_end":10175483,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175488,"byte_end":10175545,"line_start":242,"line_end":242,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175550,"byte_end":10175628,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175633,"byte_end":10175697,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175702,"byte_end":10175764,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175769,"byte_end":10175772,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175777,"byte_end":10175850,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175855,"byte_end":10175930,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10175935,"byte_end":10176003,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176008,"byte_end":10176011,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176016,"byte_end":10176084,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176089,"byte_end":10176157,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176162,"byte_end":10176231,"line_start":253,"line_end":253,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176236,"byte_end":10176262,"line_start":254,"line_end":254,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176267,"byte_end":10176270,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176275,"byte_end":10176328,"line_start":256,"line_end":256,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176333,"byte_end":10176394,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176399,"byte_end":10176454,"line_start":258,"line_end":258,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176459,"byte_end":10176498,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176503,"byte_end":10176545,"line_start":260,"line_end":260,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176550,"byte_end":10176588,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176593,"byte_end":10176643,"line_start":262,"line_end":262,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178337,"byte_end":10178356,"line_start":301,"line_end":301,"column_start":12,"column_end":31},"name":"poll_read_ready_mut","qualname":"<AsyncFd<T>>::poll_read_ready_mut","value":"pub fn poll_read_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10176976,"byte_end":10177005,"line_start":276,"line_end":276,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177010,"byte_end":10177013,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177018,"byte_end":10177092,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177097,"byte_end":10177176,"line_start":279,"line_end":279,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177181,"byte_end":10177259,"line_start":280,"line_end":280,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177264,"byte_end":10177267,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177272,"byte_end":10177329,"line_start":282,"line_end":282,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177334,"byte_end":10177412,"line_start":283,"line_end":283,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177417,"byte_end":10177481,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177486,"byte_end":10177548,"line_start":285,"line_end":285,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177553,"byte_end":10177556,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177561,"byte_end":10177634,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177639,"byte_end":10177714,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177719,"byte_end":10177787,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177792,"byte_end":10177795,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177800,"byte_end":10177875,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177880,"byte_end":10177944,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177949,"byte_end":10177952,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10177957,"byte_end":10178010,"line_start":294,"line_end":294,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178015,"byte_end":10178076,"line_start":295,"line_end":295,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178081,"byte_end":10178136,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178141,"byte_end":10178180,"line_start":297,"line_end":297,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178185,"byte_end":10178227,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178232,"byte_end":10178270,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178275,"byte_end":10178325,"line_start":300,"line_end":300,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180139,"byte_end":10180155,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<AsyncFd<T>>::poll_write_ready","value":"pub fn poll_write_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178672,"byte_end":10178702,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178707,"byte_end":10178710,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178715,"byte_end":10178789,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178794,"byte_end":10178873,"line_start":317,"line_end":317,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178878,"byte_end":10178956,"line_start":318,"line_end":318,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178961,"byte_end":10178964,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10178969,"byte_end":10179027,"line_start":320,"line_end":320,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179032,"byte_end":10179111,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179116,"byte_end":10179180,"line_start":322,"line_end":322,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179185,"byte_end":10179246,"line_start":323,"line_end":323,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179251,"byte_end":10179254,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179259,"byte_end":10179332,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179337,"byte_end":10179412,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179417,"byte_end":10179485,"line_start":327,"line_end":327,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179490,"byte_end":10179493,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179498,"byte_end":10179566,"line_start":329,"line_end":329,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179571,"byte_end":10179639,"line_start":330,"line_end":330,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179644,"byte_end":10179713,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179718,"byte_end":10179744,"line_start":332,"line_end":332,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179749,"byte_end":10179752,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179757,"byte_end":10179810,"line_start":334,"line_end":334,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179815,"byte_end":10179870,"line_start":335,"line_end":335,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179875,"byte_end":10179938,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179943,"byte_end":10179982,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10179987,"byte_end":10180029,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180034,"byte_end":10180072,"line_start":339,"line_end":339,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180077,"byte_end":10180127,"line_start":340,"line_end":340,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181827,"byte_end":10181847,"line_start":379,"line_end":379,"column_start":12,"column_end":32},"name":"poll_write_ready_mut","qualname":"<AsyncFd<T>>::poll_write_ready_mut","value":"pub fn poll_write_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180462,"byte_end":10180492,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180497,"byte_end":10180500,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180505,"byte_end":10180579,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180584,"byte_end":10180663,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180668,"byte_end":10180746,"line_start":358,"line_end":358,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180751,"byte_end":10180754,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180759,"byte_end":10180817,"line_start":360,"line_end":360,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180822,"byte_end":10180901,"line_start":361,"line_end":361,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180906,"byte_end":10180970,"line_start":362,"line_end":362,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10180975,"byte_end":10181036,"line_start":363,"line_end":363,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181041,"byte_end":10181044,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181049,"byte_end":10181122,"line_start":365,"line_end":365,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181127,"byte_end":10181202,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181207,"byte_end":10181275,"line_start":367,"line_end":367,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181280,"byte_end":10181283,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181288,"byte_end":10181363,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181368,"byte_end":10181432,"line_start":370,"line_end":370,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181437,"byte_end":10181440,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181445,"byte_end":10181498,"line_start":372,"line_end":372,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181503,"byte_end":10181558,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181563,"byte_end":10181626,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181631,"byte_end":10181670,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181675,"byte_end":10181717,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181722,"byte_end":10181760,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10181765,"byte_end":10181815,"line_start":378,"line_end":378,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183257,"byte_end":10183265,"line_start":422,"line_end":422,"column_start":18,"column_end":26},"name":"readable","qualname":"<AsyncFd<T>>::readable","value":"pub async fn readable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10182737,"byte_end":10182802,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10182807,"byte_end":10182878,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ polling.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10182883,"byte_end":10182895,"line_start":415,"line_end":415,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10182900,"byte_end":10182903,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10182908,"byte_end":10182976,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10182981,"byte_end":10183049,"line_start":418,"line_end":418,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183054,"byte_end":10183123,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183128,"byte_end":10183154,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183159,"byte_end":10183195,"line_start":421,"line_end":421,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183803,"byte_end":10183815,"line_start":433,"line_end":433,"column_start":18,"column_end":30},"name":"readable_mut","qualname":"<AsyncFd<T>>::readable_mut","value":"pub async fn readable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183382,"byte_end":10183447,"line_start":426,"line_end":426,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183452,"byte_end":10183526,"line_start":427,"line_end":427,"column_start":5,"column_end":79}},{"value":"/ polling.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183531,"byte_end":10183543,"line_start":428,"line_end":428,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183548,"byte_end":10183551,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183556,"byte_end":10183631,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183636,"byte_end":10183700,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183705,"byte_end":10183741,"line_start":432,"line_end":432,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184464,"byte_end":10184472,"line_start":446,"line_end":446,"column_start":18,"column_end":26},"name":"writable","qualname":"<AsyncFd<T>>::writable","value":"pub async fn writable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10183943,"byte_end":10184008,"line_start":437,"line_end":437,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184013,"byte_end":10184085,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ polling.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184090,"byte_end":10184102,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184107,"byte_end":10184110,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184115,"byte_end":10184183,"line_start":441,"line_end":441,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184188,"byte_end":10184256,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184261,"byte_end":10184330,"line_start":443,"line_end":443,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184335,"byte_end":10184361,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184366,"byte_end":10184402,"line_start":445,"line_end":445,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185011,"byte_end":10185023,"line_start":457,"line_end":457,"column_start":18,"column_end":30},"name":"writable_mut","qualname":"<AsyncFd<T>>::writable_mut","value":"pub async fn writable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184589,"byte_end":10184654,"line_start":450,"line_end":450,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184659,"byte_end":10184734,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ polling.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184739,"byte_end":10184751,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184756,"byte_end":10184759,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184764,"byte_end":10184839,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184844,"byte_end":10184908,"line_start":455,"line_end":455,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10184913,"byte_end":10184949,"line_start":456,"line_end":456,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186253,"byte_end":10186264,"line_start":493,"line_end":493,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185699,"byte_end":10185770,"line_start":483,"line_end":483,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185775,"byte_end":10185847,"line_start":484,"line_end":484,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185852,"byte_end":10185911,"line_start":485,"line_end":485,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185916,"byte_end":10185919,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185924,"byte_end":10185992,"line_start":487,"line_end":487,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185997,"byte_end":10186073,"line_start":488,"line_end":488,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186078,"byte_end":10186151,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186156,"byte_end":10186193,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186198,"byte_end":10186201,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186206,"byte_end":10186241,"line_start":492,"line_end":492,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186665,"byte_end":10186677,"line_start":504,"line_end":504,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186411,"byte_end":10186484,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186489,"byte_end":10186513,"line_start":500,"line_end":500,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186518,"byte_end":10186521,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186526,"byte_end":10186599,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186604,"byte_end":10186653,"line_start":503,"line_end":503,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187709,"byte_end":10187715,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>: FnOnce(&AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186719,"byte_end":10186758,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186763,"byte_end":10186766,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186771,"byte_end":10186844,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186849,"byte_end":10186913,"line_start":511,"line_end":511,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186918,"byte_end":10186988,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10186993,"byte_end":10187031,"line_start":513,"line_end":513,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187036,"byte_end":10187039,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187044,"byte_end":10187120,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187125,"byte_end":10187195,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187200,"byte_end":10187270,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187275,"byte_end":10187344,"line_start":518,"line_end":518,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187349,"byte_end":10187424,"line_start":519,"line_end":519,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187429,"byte_end":10187512,"line_start":520,"line_end":520,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187517,"byte_end":10187553,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187558,"byte_end":10187561,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10187566,"byte_end":10187616,"line_start":523,"line_end":523,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188821,"byte_end":10188832,"line_start":556,"line_end":556,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyMutGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188267,"byte_end":10188338,"line_start":546,"line_end":546,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188343,"byte_end":10188415,"line_start":547,"line_end":547,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188420,"byte_end":10188479,"line_start":548,"line_end":548,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188484,"byte_end":10188487,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188492,"byte_end":10188560,"line_start":550,"line_end":550,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188565,"byte_end":10188641,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188646,"byte_end":10188719,"line_start":552,"line_end":552,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188724,"byte_end":10188761,"line_start":553,"line_end":553,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188766,"byte_end":10188769,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188774,"byte_end":10188809,"line_start":555,"line_end":555,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189233,"byte_end":10189245,"line_start":567,"line_end":567,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyMutGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188979,"byte_end":10189052,"line_start":562,"line_end":562,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189057,"byte_end":10189081,"line_start":563,"line_end":563,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189086,"byte_end":10189089,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189094,"byte_end":10189167,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189172,"byte_end":10189221,"line_start":566,"line_end":566,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10190196,"byte_end":10190202,"line_start":587,"line_end":587,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyMutGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>: FnOnce(&mut AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189287,"byte_end":10189326,"line_start":571,"line_end":571,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189331,"byte_end":10189334,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189339,"byte_end":10189412,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189417,"byte_end":10189481,"line_start":574,"line_end":574,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189486,"byte_end":10189556,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189561,"byte_end":10189599,"line_start":576,"line_end":576,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189604,"byte_end":10189607,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189612,"byte_end":10189688,"line_start":578,"line_end":578,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189693,"byte_end":10189763,"line_start":579,"line_end":579,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189768,"byte_end":10189838,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189843,"byte_end":10189912,"line_start":581,"line_end":581,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189917,"byte_end":10189992,"line_start":582,"line_end":582,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10189997,"byte_end":10190080,"line_start":583,"line_end":583,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10190085,"byte_end":10190121,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10190126,"byte_end":10190129,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10190134,"byte_end":10190184,"line_start":586,"line_end":586,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1261},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191512,"byte_end":10191522,"line_start":629,"line_end":629,"column_start":12,"column_end":22},"name":"TryIoError","qualname":"::io::async_fd::TryIoError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned by [`try_io`].","sig":null,"attributes":[{"value":"/ The error type returned by [`try_io`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191254,"byte_end":10191296,"line_start":622,"line_end":622,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191297,"byte_end":10191300,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ This error indicates that the IO resource returned a [`WouldBlock`] error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191301,"byte_end":10191379,"line_start":624,"line_end":624,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191380,"byte_end":10191383,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191384,"byte_end":10191434,"line_start":626,"line_end":626,"column_start":1,"column_end":51}},{"value":"/ [`try_io`]: method@AsyncFdReadyGuard::try_io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191435,"byte_end":10191483,"line_start":627,"line_end":627,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1255},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","byte_start":41637,"byte_end":41641,"line_start":223,"line_end":223,"column_start":13,"column_end":17},"name":"unix","qualname":"::io::unix","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"decl_id":null,"docs":" Asynchronous IO structures specific to Unix-like operating systems.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1374},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10192125,"byte_end":10192133,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1376}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1377},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10192262,"byte_end":10192271,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1379}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1380},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10192585,"byte_end":10192590,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193216,"byte_end":10193226,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193113,"byte_end":10193188,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193193,"byte_end":10193204,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193633,"byte_end":10193640,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193309,"byte_end":10193358,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193363,"byte_end":10193366,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193371,"byte_end":10193383,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193388,"byte_end":10193391,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193396,"byte_end":10193470,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193475,"byte_end":10193525,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193530,"byte_end":10193594,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193599,"byte_end":10193621,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194141,"byte_end":10194151,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194039,"byte_end":10194113,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194118,"byte_end":10194129,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":10576},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/seek.rs","byte_start":10197020,"byte_end":10197024,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":10579},{"krate":0,"index":10580},{"krate":0,"index":10581}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2235},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_buf_read_ext.rs","byte_start":10200422,"byte_end":10200437,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2236},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2241}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_buf_read_ext.rs","byte_start":10203233,"byte_end":10203243,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_buf_read_ext.rs","byte_start":10206134,"byte_end":10206143,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_buf_read_ext.rs","byte_start":10207543,"byte_end":10207548,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_buf_read_ext.rs","byte_start":10209388,"byte_end":10209393,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2235},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10211466,"byte_end":10211478,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2272},{"krate":0,"index":2274},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10212598,"byte_end":10212603,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10215432,"byte_end":10215436,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10217739,"byte_end":10217747,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10219644,"byte_end":10219654,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10221091,"byte_end":10221098,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10222387,"byte_end":10222394,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10223725,"byte_end":10223733,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10225073,"byte_end":10225081,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10226362,"byte_end":10226370,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10227665,"byte_end":10227673,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10229036,"byte_end":10229044,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10230337,"byte_end":10230345,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10231805,"byte_end":10231814,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10233208,"byte_end":10233217,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10234564,"byte_end":10234575,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10235936,"byte_end":10235947,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10237248,"byte_end":10237259,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10238571,"byte_end":10238582,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10239963,"byte_end":10239974,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10241268,"byte_end":10241279,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10242757,"byte_end":10242769,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10244163,"byte_end":10244175,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10245834,"byte_end":10245845,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10247400,"byte_end":10247414,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10248706,"byte_end":10248710,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2243},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2294},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_seek_ext.rs","byte_start":10249798,"byte_end":10249810,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_seek_ext.rs","byte_start":10250806,"byte_end":10250810,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2294},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_seek_ext.rs","byte_start":10251150,"byte_end":10251165,"line_start":74,"line_end":74,"column_start":12,"column_end":27},"name":"stream_position","qualname":"::io::util::async_seek_ext::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2294},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2298},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10253382,"byte_end":10253395,"line_start":67,"line_end":67,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2307},{"krate":0,"index":2311},{"krate":0,"index":2313},{"krate":0,"index":2315},{"krate":0,"index":2317},{"krate":0,"index":2319},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2325},{"krate":0,"index":2327},{"krate":0,"index":2329},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2339},{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2345},{"krate":0,"index":2309},{"krate":0,"index":2310}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10255237,"byte_end":10255242,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10256447,"byte_end":10256461,"line_start":155,"line_end":155,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a, 'b>(&'a mut Self, &'a [IoSlice]) -> WriteVectored\nwhere Self: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10259304,"byte_end":10259313,"line_start":228,"line_end":228,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10260655,"byte_end":10260664,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10262064,"byte_end":10262072,"line_start":312,"line_end":312,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10263333,"byte_end":10263341,"line_start":349,"line_end":349,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10264656,"byte_end":10264665,"line_start":387,"line_end":387,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10265978,"byte_end":10265987,"line_start":425,"line_end":425,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10267327,"byte_end":10267336,"line_start":463,"line_end":463,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10268671,"byte_end":10268680,"line_start":501,"line_end":501,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10270057,"byte_end":10270066,"line_start":539,"line_end":539,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10271453,"byte_end":10271462,"line_start":577,"line_end":577,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10272917,"byte_end":10272927,"line_start":617,"line_end":617,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10274317,"byte_end":10274327,"line_start":657,"line_end":657,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10275659,"byte_end":10275671,"line_start":696,"line_end":696,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10276998,"byte_end":10277010,"line_start":734,"line_end":734,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10278364,"byte_end":10278376,"line_start":772,"line_end":772,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10279725,"byte_end":10279737,"line_start":810,"line_end":810,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10281128,"byte_end":10281140,"line_start":848,"line_end":848,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10282541,"byte_end":10282553,"line_start":886,"line_end":886,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10284020,"byte_end":10284033,"line_start":926,"line_end":926,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10285435,"byte_end":10285448,"line_start":966,"line_end":966,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10286468,"byte_end":10286473,"line_start":999,"line_end":999,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10287763,"byte_end":10287771,"line_start":1038,"line_end":1038,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10524},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289132,"byte_end":10289141,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10526},{"krate":0,"index":10527},{"krate":0,"index":10528},{"krate":0,"index":10529}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289477,"byte_end":10289480,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289335,"byte_end":10289427,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289432,"byte_end":10289465,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289642,"byte_end":10289655,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289565,"byte_end":10289630,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290009,"byte_end":10290016,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289872,"byte_end":10289918,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289923,"byte_end":10289926,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289931,"byte_end":10289997,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290208,"byte_end":10290215,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290063,"byte_end":10290117,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290122,"byte_end":10290125,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290130,"byte_end":10290196,"line_start":63,"line_end":63,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290426,"byte_end":10290437,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290274,"byte_end":10290335,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290340,"byte_end":10290343,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290348,"byte_end":10290414,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290668,"byte_end":10290678,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290517,"byte_end":10290580,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290585,"byte_end":10290588,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290593,"byte_end":10290656,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290882,"byte_end":10290888,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290722,"byte_end":10290778,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290783,"byte_end":10290786,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10290791,"byte_end":10290870,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10493},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10294827,"byte_end":10294836,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":10495}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295115,"byte_end":10295118,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10294961,"byte_end":10295018,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295023,"byte_end":10295026,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295031,"byte_end":10295103,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295450,"byte_end":10295463,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295250,"byte_end":10295335,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295340,"byte_end":10295353,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295358,"byte_end":10295361,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295366,"byte_end":10295438,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295920,"byte_end":10295927,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295775,"byte_end":10295825,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295830,"byte_end":10295833,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295838,"byte_end":10295908,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296147,"byte_end":10296154,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10295994,"byte_end":10296052,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296057,"byte_end":10296060,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296065,"byte_end":10296135,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296389,"byte_end":10296400,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296229,"byte_end":10296294,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296299,"byte_end":10296302,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296307,"byte_end":10296377,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296664,"byte_end":10296674,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296509,"byte_end":10296576,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296581,"byte_end":10296584,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296589,"byte_end":10296652,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10447},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10300251,"byte_end":10300260,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10449},{"krate":0,"index":10450},{"krate":0,"index":10451}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10300568,"byte_end":10300571,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10300426,"byte_end":10300518,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10300523,"byte_end":10300556,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10300733,"byte_end":10300746,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10300656,"byte_end":10300721,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10301828,"byte_end":10301835,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10301770,"byte_end":10301816,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302026,"byte_end":10302033,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10301882,"byte_end":10301936,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10301941,"byte_end":10301944,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10301949,"byte_end":10302014,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302243,"byte_end":10302254,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302092,"byte_end":10302153,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302158,"byte_end":10302161,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302166,"byte_end":10302231,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302485,"byte_end":10302495,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302334,"byte_end":10302397,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302402,"byte_end":10302405,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302410,"byte_end":10302473,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302607,"byte_end":10302613,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302539,"byte_end":10302595,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10398},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305027,"byte_end":10305032,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10401},{"krate":0,"index":10402},{"krate":0,"index":10403}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305473,"byte_end":10305480,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305399,"byte_end":10305461,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305812,"byte_end":10305819,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305549,"byte_end":10305619,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305624,"byte_end":10305627,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305632,"byte_end":10305705,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305710,"byte_end":10305783,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305788,"byte_end":10305800,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306178,"byte_end":10306189,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305908,"byte_end":10305985,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305990,"byte_end":10305993,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305998,"byte_end":10306071,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306076,"byte_end":10306149,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306154,"byte_end":10306166,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306386,"byte_end":10306396,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306318,"byte_end":10306374,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2367},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy.rs","byte_start":10311794,"byte_end":10311798,"line_start":123,"line_end":123,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1721},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315821,"byte_end":10315839,"line_start":107,"line_end":107,"column_start":14,"column_end":32},"name":"copy_bidirectional","qualname":"::io::util::copy_bidirectional::copy_bidirectional","value":"pub async fn copy_bidirectional<A: ?Sized, B: ?Sized, '_,\n                                '_>(&'_ mut A, &'_ mut B) -> /*impl Trait*/\nwhere A: AsyncRead + AsyncWrite + Unpin, B: AsyncRead + AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies data in both directions between `a` and `b`.","sig":null,"attributes":[{"value":"/ Copies data in both directions between `a` and `b`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10314620,"byte_end":10314675,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10314676,"byte_end":10314679,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function returns a future that will read from both streams,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10314680,"byte_end":10314748,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ writing any data read to the opposing stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10314749,"byte_end":10314798,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/ This happens in both directions concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10314799,"byte_end":10314848,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10314849,"byte_end":10314852,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ If an EOF is observed on one stream, [`shutdown()`] will be invoked on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10314853,"byte_end":10314927,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ the other, and reading from that stream will stop. Copying of data in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10314928,"byte_end":10315001,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ the other direction will continue.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315002,"byte_end":10315040,"line_start":88,"line_end":88,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315041,"byte_end":10315044,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The future will complete successfully once both directions of communication has been shut down.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315045,"byte_end":10315144,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ A direction is shut down when the reader reports EOF,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315145,"byte_end":10315202,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/ at which point [`shutdown()`] is called on the corresponding writer. When finished,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315203,"byte_end":10315290,"line_start":92,"line_end":92,"column_start":1,"column_end":88}},{"value":"/ it will return a tuple of the number of bytes copied from a to b","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315291,"byte_end":10315359,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/ and the number of bytes copied from b to a, in that order.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315360,"byte_end":10315422,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315423,"byte_end":10315426,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`shutdown()`]: crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315427,"byte_end":10315481,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315482,"byte_end":10315485,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315486,"byte_end":10315498,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315499,"byte_end":10315502,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The future will immediately return an error if any IO operation on `a`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315503,"byte_end":10315577,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ or `b` returns an error. Some data read from either stream may be lost (not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315578,"byte_end":10315657,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ written to the other stream) in this case.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315658,"byte_end":10315704,"line_start":102,"line_end":102,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315705,"byte_end":10315708,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315709,"byte_end":10315727,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315728,"byte_end":10315731,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of bytes copied `a` to `b` and bytes copied `b` to `a`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10315732,"byte_end":10315807,"line_start":106,"line_end":106,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2373},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_buf.rs","byte_start":10317835,"byte_end":10317843,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2391},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/empty.rs","byte_start":10319652,"byte_end":10319657,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2392}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2393},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/empty.rs","byte_start":10320336,"byte_end":10320341,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10356},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/flush.rs","byte_start":10321582,"byte_end":10321587,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10359},{"krate":0,"index":10360}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323021,"byte_end":10323026,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10308},{"krate":0,"index":10309},{"krate":0,"index":10310},{"krate":0,"index":10311}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323873,"byte_end":10323882,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323383,"byte_end":10323423,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323428,"byte_end":10323431,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323436,"byte_end":10323450,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323455,"byte_end":10323458,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323463,"byte_end":10323470,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323475,"byte_end":10323509,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323514,"byte_end":10323549,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323554,"byte_end":10323557,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323562,"byte_end":10323645,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323650,"byte_end":10323690,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323695,"byte_end":10323698,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323703,"byte_end":10323756,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323761,"byte_end":10323804,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323809,"byte_end":10323814,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323819,"byte_end":10323831,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323836,"byte_end":10323843,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323848,"byte_end":10323855,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324109,"byte_end":10324116,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324042,"byte_end":10324097,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324235,"byte_end":10324242,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324176,"byte_end":10324223,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324529,"byte_end":10324539,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324294,"byte_end":10324355,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324360,"byte_end":10324363,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324368,"byte_end":10324431,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324436,"byte_end":10324517,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325425,"byte_end":10325439,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324632,"byte_end":10324674,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324679,"byte_end":10324682,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324687,"byte_end":10324711,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324716,"byte_end":10324719,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324724,"byte_end":10324785,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324790,"byte_end":10324857,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324862,"byte_end":10324935,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324940,"byte_end":10325023,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325028,"byte_end":10325031,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325036,"byte_end":10325108,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325113,"byte_end":10325182,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325187,"byte_end":10325231,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325236,"byte_end":10325239,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325244,"byte_end":10325318,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325323,"byte_end":10325397,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10325402,"byte_end":10325413,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2394},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10327167,"byte_end":10327179,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326379,"byte_end":10326438,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326439,"byte_end":10326442,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326443,"byte_end":10326522,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326523,"byte_end":10326599,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326600,"byte_end":10326662,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326663,"byte_end":10326666,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326667,"byte_end":10326680,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326681,"byte_end":10326684,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326685,"byte_end":10326692,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326693,"byte_end":10326737,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326738,"byte_end":10326789,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326790,"byte_end":10326847,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326848,"byte_end":10326851,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326852,"byte_end":10326889,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326890,"byte_end":10326893,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326894,"byte_end":10326921,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326922,"byte_end":10326961,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326962,"byte_end":10326992,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326993,"byte_end":10326996,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10326997,"byte_end":10327034,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10327035,"byte_end":10327038,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10327039,"byte_end":10327078,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10327079,"byte_end":10327109,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10327110,"byte_end":10327122,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10327123,"byte_end":10327130,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10327131,"byte_end":10327138,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1822},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10328476,"byte_end":10328482,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10328242,"byte_end":10328325,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10328326,"byte_end":10328329,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10328330,"byte_end":10328404,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10328405,"byte_end":10328468,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10255},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read.rs","byte_start":10333538,"byte_end":10333542,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10258},{"krate":0,"index":10259},{"krate":0,"index":10260}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10195},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_buf.rs","byte_start":10334759,"byte_end":10334766,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":10199},{"krate":0,"index":10200},{"krate":0,"index":10201}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10140},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_exact.rs","byte_start":10336971,"byte_end":10336980,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10143},{"krate":0,"index":10144},{"krate":0,"index":10145}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10096},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342004,"byte_end":10342010,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10098},{"krate":0,"index":10099}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10059},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342026,"byte_end":10342032,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":10061},{"krate":0,"index":10062}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10010},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342048,"byte_end":10342055,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10012},{"krate":0,"index":10013},{"krate":0,"index":10015},{"krate":0,"index":10016}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9961},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342080,"byte_end":10342087,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":9963},{"krate":0,"index":9964},{"krate":0,"index":9966},{"krate":0,"index":9967}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9912},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342112,"byte_end":10342119,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":9914},{"krate":0,"index":9915},{"krate":0,"index":9917},{"krate":0,"index":9918}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9863},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342144,"byte_end":10342152,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":9865},{"krate":0,"index":9866},{"krate":0,"index":9868},{"krate":0,"index":9869}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9814},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342180,"byte_end":10342187,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":9816},{"krate":0,"index":9817},{"krate":0,"index":9819},{"krate":0,"index":9820}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9765},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342212,"byte_end":10342219,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":9767},{"krate":0,"index":9768},{"krate":0,"index":9770},{"krate":0,"index":9771}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9716},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342244,"byte_end":10342251,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":9718},{"krate":0,"index":9719},{"krate":0,"index":9721},{"krate":0,"index":9722}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9667},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342276,"byte_end":10342284,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":9669},{"krate":0,"index":9670},{"krate":0,"index":9672},{"krate":0,"index":9673}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9618},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342312,"byte_end":10342321,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":9620},{"krate":0,"index":9621},{"krate":0,"index":9623},{"krate":0,"index":9624}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9569},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342349,"byte_end":10342358,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":9571},{"krate":0,"index":9572},{"krate":0,"index":9574},{"krate":0,"index":9575}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9520},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342386,"byte_end":10342395,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":9522},{"krate":0,"index":9523},{"krate":0,"index":9525},{"krate":0,"index":9526}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9471},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342423,"byte_end":10342433,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9473},{"krate":0,"index":9474},{"krate":0,"index":9476},{"krate":0,"index":9477}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9422},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342464,"byte_end":10342473,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9424},{"krate":0,"index":9425},{"krate":0,"index":9427},{"krate":0,"index":9428}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9373},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342501,"byte_end":10342510,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9375},{"krate":0,"index":9376},{"krate":0,"index":9378},{"krate":0,"index":9379}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9324},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342538,"byte_end":10342547,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9326},{"krate":0,"index":9327},{"krate":0,"index":9329},{"krate":0,"index":9330}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9275},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_int.rs","byte_start":10342575,"byte_end":10342585,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9277},{"krate":0,"index":9278},{"krate":0,"index":9280},{"krate":0,"index":9281}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9221},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_line.rs","byte_start":10343102,"byte_end":10343110,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":9224},{"krate":0,"index":9225},{"krate":0,"index":9226},{"krate":0,"index":9227},{"krate":0,"index":9228}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9164},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_to_end.rs","byte_start":10347066,"byte_end":10347075,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9169},{"krate":0,"index":9170}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9103},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_to_string.rs","byte_start":10355395,"byte_end":10355407,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":9106},{"krate":0,"index":9107},{"krate":0,"index":9108},{"krate":0,"index":9109},{"krate":0,"index":9110}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9042},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_until.rs","byte_start":10357817,"byte_end":10357826,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":9045},{"krate":0,"index":9046},{"krate":0,"index":9047},{"krate":0,"index":9048},{"krate":0,"index":9049}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2559},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/repeat.rs","byte_start":10360168,"byte_end":10360174,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2560}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2558},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/repeat.rs","byte_start":10360860,"byte_end":10360866,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8993},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/shutdown.rs","byte_start":10361905,"byte_end":10361913,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":8996},{"krate":0,"index":8997}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2563},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/sink.rs","byte_start":10363059,"byte_end":10363063,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2564}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2565},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/sink.rs","byte_start":10363904,"byte_end":10363908,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8943},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365345,"byte_end":10365350,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8945},{"krate":0,"index":8946},{"krate":0,"index":8947},{"krate":0,"index":8948}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366211,"byte_end":10366223,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365699,"byte_end":10365742,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365747,"byte_end":10365750,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365755,"byte_end":10365769,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365774,"byte_end":10365777,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365782,"byte_end":10365789,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365794,"byte_end":10365828,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365833,"byte_end":10365868,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365873,"byte_end":10365876,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365881,"byte_end":10365964,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365969,"byte_end":10366016,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366021,"byte_end":10366024,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366029,"byte_end":10366091,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366096,"byte_end":10366142,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366147,"byte_end":10366152,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366157,"byte_end":10366169,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366174,"byte_end":10366181,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366186,"byte_end":10366193,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10367260,"byte_end":10367277,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366435,"byte_end":10366480,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366485,"byte_end":10366488,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366493,"byte_end":10366517,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366522,"byte_end":10366525,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366530,"byte_end":10366594,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366599,"byte_end":10366672,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366677,"byte_end":10366753,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366758,"byte_end":10366830,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366835,"byte_end":10366855,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366860,"byte_end":10366863,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366868,"byte_end":10366940,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366945,"byte_end":10367014,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10367019,"byte_end":10367063,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10367068,"byte_end":10367071,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10367076,"byte_end":10367148,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10367153,"byte_end":10367222,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10367227,"byte_end":10367248,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8903},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368434,"byte_end":10368438,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8905},{"krate":0,"index":8906}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369028,"byte_end":10369033,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368725,"byte_end":10368778,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368783,"byte_end":10368829,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368834,"byte_end":10368837,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368842,"byte_end":10368852,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368857,"byte_end":10368860,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368865,"byte_end":10368942,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368947,"byte_end":10369016,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369352,"byte_end":10369361,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369081,"byte_end":10369152,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369157,"byte_end":10369231,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369236,"byte_end":10369311,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369316,"byte_end":10369340,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369484,"byte_end":10369491,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369426,"byte_end":10369472,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369783,"byte_end":10369790,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369538,"byte_end":10369592,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369597,"byte_end":10369600,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369605,"byte_end":10369678,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369683,"byte_end":10369755,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369760,"byte_end":10369771,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370101,"byte_end":10370112,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369849,"byte_end":10369910,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369915,"byte_end":10369918,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10369923,"byte_end":10369996,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370001,"byte_end":10370073,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370078,"byte_end":10370089,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370258,"byte_end":10370268,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370192,"byte_end":10370246,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8852},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write.rs","byte_start":10372252,"byte_end":10372257,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":8855},{"krate":0,"index":8856},{"krate":0,"index":8857}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8792},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_vectored.rs","byte_start":10373461,"byte_end":10373474,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"name":"WriteVectored","qualname":"::io::util::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798}],"decl_id":null,"docs":" A future to write a slice of buffers to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8737},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_all.rs","byte_start":10374587,"byte_end":10374595,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":8740},{"krate":0,"index":8741},{"krate":0,"index":8742}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8677},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_buf.rs","byte_start":10376036,"byte_end":10376044,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":8681},{"krate":0,"index":8682},{"krate":0,"index":8683}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8627},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10380805,"byte_end":10380812,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8629},{"krate":0,"index":8630},{"krate":0,"index":8631}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8586},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10380828,"byte_end":10380835,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8588},{"krate":0,"index":8589},{"krate":0,"index":8590}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8537},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10380851,"byte_end":10380859,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8539},{"krate":0,"index":8540},{"krate":0,"index":8542},{"krate":0,"index":8543}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8488},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10380884,"byte_end":10380892,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8490},{"krate":0,"index":8491},{"krate":0,"index":8493},{"krate":0,"index":8494}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8439},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10380917,"byte_end":10380925,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8441},{"krate":0,"index":8442},{"krate":0,"index":8444},{"krate":0,"index":8445}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8390},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10380950,"byte_end":10380959,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8392},{"krate":0,"index":8393},{"krate":0,"index":8395},{"krate":0,"index":8396}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8341},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10380987,"byte_end":10380995,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8343},{"krate":0,"index":8344},{"krate":0,"index":8346},{"krate":0,"index":8347}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8292},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381020,"byte_end":10381028,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8294},{"krate":0,"index":8295},{"krate":0,"index":8297},{"krate":0,"index":8298}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381053,"byte_end":10381061,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8245},{"krate":0,"index":8246},{"krate":0,"index":8248},{"krate":0,"index":8249}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381086,"byte_end":10381095,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8196},{"krate":0,"index":8197},{"krate":0,"index":8199},{"krate":0,"index":8200}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8145},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381123,"byte_end":10381133,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8147},{"krate":0,"index":8148},{"krate":0,"index":8150},{"krate":0,"index":8151}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8096},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381161,"byte_end":10381171,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8098},{"krate":0,"index":8099},{"krate":0,"index":8101},{"krate":0,"index":8102}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8047},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381199,"byte_end":10381209,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8049},{"krate":0,"index":8050},{"krate":0,"index":8052},{"krate":0,"index":8053}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7998},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381237,"byte_end":10381248,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8000},{"krate":0,"index":8001},{"krate":0,"index":8003},{"krate":0,"index":8004}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7949},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381279,"byte_end":10381289,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":7951},{"krate":0,"index":7952},{"krate":0,"index":7954},{"krate":0,"index":7955}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7900},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381317,"byte_end":10381327,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":7902},{"krate":0,"index":7903},{"krate":0,"index":7905},{"krate":0,"index":7906}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7851},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381355,"byte_end":10381365,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":7853},{"krate":0,"index":7854},{"krate":0,"index":7856},{"krate":0,"index":7857}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7802},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_int.rs","byte_start":10381393,"byte_end":10381404,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":7804},{"krate":0,"index":7805},{"krate":0,"index":7807},{"krate":0,"index":7808}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3179},{"krate":0,"index":3242},{"krate":0,"index":3576},{"krate":0,"index":3577},{"krate":0,"index":3578}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79298,"byte_end":79316,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79318,"byte_end":79356,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79357,"byte_end":79360,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79361,"byte_end":79444,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79445,"byte_end":79510,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79511,"byte_end":79514,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79515,"byte_end":79533,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79534,"byte_end":79537,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79538,"byte_end":79626,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79627,"byte_end":79696,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79697,"byte_end":79785,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79786,"byte_end":79844,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79845,"byte_end":79908,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79909,"byte_end":79974,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79976,"byte_end":79979,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":79980,"byte_end":80012,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80013,"byte_end":80041,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80042,"byte_end":80070,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80071,"byte_end":80105,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80106,"byte_end":80136,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80137,"byte_end":80171,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":293},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":81393,"byte_end":81406,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":80805,"byte_end":80882,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":80883,"byte_end":80886,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":80887,"byte_end":80896,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":80897,"byte_end":80900,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":80901,"byte_end":80978,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":80979,"byte_end":80982,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":80983,"byte_end":80996,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":80997,"byte_end":81000,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":81001,"byte_end":81078,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":81079,"byte_end":81151,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":81152,"byte_end":81221,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":81222,"byte_end":81225,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":81226,"byte_end":81305,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":81306,"byte_end":81382,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":342},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":87846,"byte_end":87863,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":343},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":87879,"byte_end":87883,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":344},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":87944,"byte_end":87950,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88022,"byte_end":88037,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88148,"byte_end":88156,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88093,"byte_end":88132,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2750},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88398,"byte_end":88408,"line_start":268,"line_end":268,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2765},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88698,"byte_end":88701,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2768},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88745,"byte_end":88749,"line_start":280,"line_end":280,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2764},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2764},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88674,"byte_end":88683,"line_start":278,"line_end":278,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":2765},{"krate":0,"index":2768}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3185},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/lookup_host.rs","byte_start":10382277,"byte_end":10382288,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2775},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2826},{"krate":0,"index":2863},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":11908},{"krate":0,"index":2948},{"krate":0,"index":3061}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/mod.rs","byte_start":10382441,"byte_end":10382462,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3190},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384316,"byte_end":10384327,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3191}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385826,"byte_end":10385830,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384410,"byte_end":10384486,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384491,"byte_end":10384494,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384499,"byte_end":10384560,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384565,"byte_end":10384568,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384573,"byte_end":10384648,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384653,"byte_end":10384729,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384734,"byte_end":10384745,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384750,"byte_end":10384753,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384758,"byte_end":10384833,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384838,"byte_end":10384914,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384919,"byte_end":10384992,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384997,"byte_end":10385070,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385075,"byte_end":10385127,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385132,"byte_end":10385135,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385140,"byte_end":10385203,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385208,"byte_end":10385211,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before binding, you can use the [`TcpSocket`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385216,"byte_end":10385289,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385294,"byte_end":10385303,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385308,"byte_end":10385311,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385316,"byte_end":10385370,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385375,"byte_end":10385422,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385427,"byte_end":10385430,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385435,"byte_end":10385449,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385454,"byte_end":10385457,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385462,"byte_end":10385475,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385480,"byte_end":10385512,"line_start":83,"line_end":83,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385517,"byte_end":10385520,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385525,"byte_end":10385541,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385546,"byte_end":10385549,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385554,"byte_end":10385572,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385577,"byte_end":10385616,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385621,"byte_end":10385687,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385692,"byte_end":10385695,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385700,"byte_end":10385727,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385732,"byte_end":10385735,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385740,"byte_end":10385767,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385772,"byte_end":10385786,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385791,"byte_end":10385796,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10385801,"byte_end":10385808,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387396,"byte_end":10387402,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386541,"byte_end":10386598,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386603,"byte_end":10386606,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386611,"byte_end":10386686,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386691,"byte_end":10386761,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386766,"byte_end":10386795,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386800,"byte_end":10386803,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386808,"byte_end":10386855,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386860,"byte_end":10386863,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386868,"byte_end":10386882,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386887,"byte_end":10386890,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386895,"byte_end":10386908,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386913,"byte_end":10386945,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386950,"byte_end":10386953,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386958,"byte_end":10386974,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386979,"byte_end":10386982,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10386987,"byte_end":10387005,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387010,"byte_end":10387049,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387054,"byte_end":10387120,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387125,"byte_end":10387128,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387133,"byte_end":10387172,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387177,"byte_end":10387247,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387252,"byte_end":10387315,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387320,"byte_end":10387329,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387334,"byte_end":10387337,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387342,"byte_end":10387356,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387361,"byte_end":10387366,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387371,"byte_end":10387378,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10388070,"byte_end":10388081,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387692,"byte_end":10387755,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387760,"byte_end":10387763,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387768,"byte_end":10387844,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387849,"byte_end":10387923,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10387928,"byte_end":10388004,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10388009,"byte_end":10388058,"line_start":165,"line_end":165,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390119,"byte_end":10390127,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10388689,"byte_end":10388750,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10388755,"byte_end":10388758,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10388763,"byte_end":10388835,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10388840,"byte_end":10388916,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10388921,"byte_end":10388994,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10388999,"byte_end":10389021,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389026,"byte_end":10389029,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389034,"byte_end":10389108,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389113,"byte_end":10389189,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389194,"byte_end":10389259,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389264,"byte_end":10389319,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389324,"byte_end":10389327,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389332,"byte_end":10389346,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389351,"byte_end":10389354,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389359,"byte_end":10389377,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389382,"byte_end":10389408,"line_start":198,"line_end":198,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389413,"byte_end":10389445,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389450,"byte_end":10389453,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389458,"byte_end":10389476,"line_start":201,"line_end":201,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389481,"byte_end":10389532,"line_start":202,"line_end":202,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389537,"byte_end":10389608,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389613,"byte_end":10389657,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389662,"byte_end":10389722,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389727,"byte_end":10389741,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389746,"byte_end":10389751,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389756,"byte_end":10389763,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389768,"byte_end":10389771,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389776,"byte_end":10389788,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389793,"byte_end":10389796,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389801,"byte_end":10389861,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389866,"byte_end":10389869,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389874,"byte_end":10389944,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10389949,"byte_end":10390022,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390027,"byte_end":10390107,"line_start":216,"line_end":216,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10391177,"byte_end":10391185,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpListener>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpListener`] into a [`std::net::TcpListener`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpListener`] into a [`std::net::TcpListener`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390327,"byte_end":10390399,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390404,"byte_end":10390407,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpListener`] will have nonblocking mode set as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390412,"byte_end":10390488,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390493,"byte_end":10390568,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390573,"byte_end":10390576,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390581,"byte_end":10390595,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390600,"byte_end":10390603,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390608,"byte_end":10390626,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390631,"byte_end":10390657,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390662,"byte_end":10390665,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390670,"byte_end":10390688,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390693,"byte_end":10390744,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/     let tokio_listener = tokio::net::TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390749,"byte_end":10390830,"line_start":235,"line_end":235,"column_start":5,"column_end":86}},{"value":"/     let std_listener = tokio_listener.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390835,"byte_end":10390889,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/     std_listener.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390894,"byte_end":10390939,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390944,"byte_end":10390958,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390963,"byte_end":10390968,"line_start":239,"line_end":239,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390973,"byte_end":10390980,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390985,"byte_end":10390988,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::TcpListener`]: TcpListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10390993,"byte_end":10391037,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/ [`std::net::TcpListener`]: std::net::TcpListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10391042,"byte_end":10391094,"line_start":243,"line_end":243,"column_start":5,"column_end":57}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpListener::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10391099,"byte_end":10391165,"line_start":244,"line_end":244,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392725,"byte_end":10392735,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10391999,"byte_end":10392060,"line_start":270,"line_end":270,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392065,"byte_end":10392068,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392073,"byte_end":10392146,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392151,"byte_end":10392185,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392190,"byte_end":10392193,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392198,"byte_end":10392212,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392217,"byte_end":10392220,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392225,"byte_end":10392243,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392248,"byte_end":10392280,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392285,"byte_end":10392288,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392293,"byte_end":10392309,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392314,"byte_end":10392369,"line_start":281,"line_end":281,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392374,"byte_end":10392377,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392382,"byte_end":10392400,"line_start":283,"line_end":283,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392405,"byte_end":10392444,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392449,"byte_end":10392515,"line_start":285,"line_end":285,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392520,"byte_end":10392523,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392528,"byte_end":10392570,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392575,"byte_end":10392664,"line_start":288,"line_end":288,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392669,"byte_end":10392672,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392677,"byte_end":10392691,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392696,"byte_end":10392701,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392706,"byte_end":10392713,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393428,"byte_end":10393431,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392811,"byte_end":10392869,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392874,"byte_end":10392877,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392882,"byte_end":10392942,"line_start":299,"line_end":299,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392947,"byte_end":10392950,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392955,"byte_end":10392992,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10392997,"byte_end":10393000,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393005,"byte_end":10393019,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393024,"byte_end":10393027,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393032,"byte_end":10393045,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393050,"byte_end":10393082,"line_start":306,"line_end":306,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393087,"byte_end":10393090,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393095,"byte_end":10393111,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393116,"byte_end":10393119,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393124,"byte_end":10393142,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393147,"byte_end":10393186,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393191,"byte_end":10393253,"line_start":312,"line_end":312,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393258,"byte_end":10393261,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393266,"byte_end":10393323,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393328,"byte_end":10393368,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393373,"byte_end":10393376,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393381,"byte_end":10393394,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393399,"byte_end":10393404,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393409,"byte_end":10393416,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394060,"byte_end":10394067,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393493,"byte_end":10393551,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393556,"byte_end":10393559,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393564,"byte_end":10393640,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393645,"byte_end":10393666,"line_start":327,"line_end":327,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393671,"byte_end":10393674,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393679,"byte_end":10393693,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393698,"byte_end":10393701,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393706,"byte_end":10393719,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393724,"byte_end":10393756,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393761,"byte_end":10393764,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393769,"byte_end":10393785,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393790,"byte_end":10393793,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393798,"byte_end":10393816,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393821,"byte_end":10393860,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393865,"byte_end":10393928,"line_start":338,"line_end":338,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393933,"byte_end":10393936,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10393941,"byte_end":10393999,"line_start":340,"line_end":340,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394004,"byte_end":10394007,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394012,"byte_end":10394026,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394031,"byte_end":10394036,"line_start":343,"line_end":343,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394041,"byte_end":10394048,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3192},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398204,"byte_end":10398213,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":3193}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399077,"byte_end":10399083,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398282,"byte_end":10398326,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398331,"byte_end":10398334,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398339,"byte_end":10398394,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398399,"byte_end":10398402,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398407,"byte_end":10398420,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398425,"byte_end":10398428,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398433,"byte_end":10398506,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398511,"byte_end":10398551,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398556,"byte_end":10398559,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398564,"byte_end":10398578,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398583,"byte_end":10398586,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398591,"byte_end":10398640,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398645,"byte_end":10398648,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398653,"byte_end":10398666,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398671,"byte_end":10398701,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398706,"byte_end":10398709,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398714,"byte_end":10398730,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398735,"byte_end":10398738,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398743,"byte_end":10398761,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398766,"byte_end":10398805,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398810,"byte_end":10398863,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398868,"byte_end":10398910,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398915,"byte_end":10398942,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398947,"byte_end":10398950,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398955,"byte_end":10398998,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399003,"byte_end":10399024,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399029,"byte_end":10399043,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399048,"byte_end":10399053,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399058,"byte_end":10399065,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400000,"byte_end":10400006,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399208,"byte_end":10399252,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399257,"byte_end":10399260,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399265,"byte_end":10399321,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399326,"byte_end":10399329,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399334,"byte_end":10399347,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399352,"byte_end":10399355,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399360,"byte_end":10399433,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399438,"byte_end":10399478,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399483,"byte_end":10399486,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399491,"byte_end":10399505,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399510,"byte_end":10399513,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399518,"byte_end":10399567,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399572,"byte_end":10399575,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399580,"byte_end":10399593,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399598,"byte_end":10399628,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399633,"byte_end":10399636,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399641,"byte_end":10399657,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399662,"byte_end":10399665,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399670,"byte_end":10399688,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399693,"byte_end":10399732,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399737,"byte_end":10399786,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399791,"byte_end":10399833,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399838,"byte_end":10399865,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399870,"byte_end":10399873,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399878,"byte_end":10399921,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399926,"byte_end":10399947,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399952,"byte_end":10399966,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399971,"byte_end":10399976,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10399981,"byte_end":10399988,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400821,"byte_end":10400834,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400131,"byte_end":10400181,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400186,"byte_end":10400189,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400194,"byte_end":10400259,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400264,"byte_end":10400299,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400304,"byte_end":10400307,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400312,"byte_end":10400326,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400331,"byte_end":10400334,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400339,"byte_end":10400352,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400357,"byte_end":10400387,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400392,"byte_end":10400395,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400400,"byte_end":10400416,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400421,"byte_end":10400424,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400429,"byte_end":10400447,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400452,"byte_end":10400491,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400496,"byte_end":10400549,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400554,"byte_end":10400557,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400562,"byte_end":10400604,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400609,"byte_end":10400645,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400650,"byte_end":10400677,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400682,"byte_end":10400685,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400690,"byte_end":10400734,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400739,"byte_end":10400760,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400765,"byte_end":10400768,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400773,"byte_end":10400787,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400792,"byte_end":10400797,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400802,"byte_end":10400809,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401533,"byte_end":10401542,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10400934,"byte_end":10400995,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401000,"byte_end":10401003,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401008,"byte_end":10401022,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401027,"byte_end":10401030,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401035,"byte_end":10401048,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401053,"byte_end":10401083,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401088,"byte_end":10401091,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401096,"byte_end":10401112,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401117,"byte_end":10401120,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401125,"byte_end":10401143,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401148,"byte_end":10401187,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401192,"byte_end":10401245,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401250,"byte_end":10401253,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401258,"byte_end":10401300,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401305,"byte_end":10401341,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401346,"byte_end":10401391,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401396,"byte_end":10401423,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401428,"byte_end":10401431,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401436,"byte_end":10401480,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401485,"byte_end":10401499,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401504,"byte_end":10401509,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401514,"byte_end":10401521,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402543,"byte_end":10402556,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"set_reuseport","qualname":"<TcpSocket>::set_reuseport","value":"pub fn set_reuseport(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401618,"byte_end":10401697,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401702,"byte_end":10401736,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401741,"byte_end":10401744,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401749,"byte_end":10401814,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401819,"byte_end":10401854,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401859,"byte_end":10401862,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401867,"byte_end":10401881,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401886,"byte_end":10401889,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401894,"byte_end":10401907,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401912,"byte_end":10401942,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401947,"byte_end":10401950,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401955,"byte_end":10401971,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401976,"byte_end":10401979,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10401984,"byte_end":10402002,"line_start":227,"line_end":227,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402007,"byte_end":10402046,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402051,"byte_end":10402104,"line_start":229,"line_end":229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402109,"byte_end":10402112,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402117,"byte_end":10402159,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402164,"byte_end":10402200,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402205,"byte_end":10402232,"line_start":233,"line_end":233,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402237,"byte_end":10402240,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402245,"byte_end":10402289,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402294,"byte_end":10402308,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402313,"byte_end":10402318,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402323,"byte_end":10402330,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402335,"byte_end":10402408,"line_start":239,"line_end":239,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403631,"byte_end":10403640,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"reuseport","qualname":"<TcpSocket>::reuseport","value":"pub fn reuseport(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402656,"byte_end":10402735,"line_start":248,"line_end":248,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402740,"byte_end":10402774,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402779,"byte_end":10402782,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402787,"byte_end":10402852,"line_start":251,"line_end":251,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402857,"byte_end":10402892,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402897,"byte_end":10402900,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402905,"byte_end":10402919,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402924,"byte_end":10402927,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402932,"byte_end":10402945,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402950,"byte_end":10402980,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402985,"byte_end":10402988,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10402993,"byte_end":10403009,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403014,"byte_end":10403017,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403022,"byte_end":10403040,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403045,"byte_end":10403084,"line_start":262,"line_end":262,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403089,"byte_end":10403142,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403147,"byte_end":10403150,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403155,"byte_end":10403197,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403202,"byte_end":10403238,"line_start":266,"line_end":266,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseport().unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403243,"byte_end":10403288,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403293,"byte_end":10403320,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403325,"byte_end":10403328,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403333,"byte_end":10403377,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403382,"byte_end":10403396,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403401,"byte_end":10403406,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403411,"byte_end":10403418,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403423,"byte_end":10403496,"line_start":274,"line_end":274,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403868,"byte_end":10403888,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403716,"byte_end":10403772,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403777,"byte_end":10403780,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403785,"byte_end":10403856,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405211,"byte_end":10405227,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10403984,"byte_end":10404044,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404049,"byte_end":10404052,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404057,"byte_end":10404131,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404136,"byte_end":10404147,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404152,"byte_end":10404155,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404160,"byte_end":10404232,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404237,"byte_end":10404311,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404316,"byte_end":10404384,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404389,"byte_end":10404411,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404416,"byte_end":10404419,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404424,"byte_end":10404499,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404504,"byte_end":10404575,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404580,"byte_end":10404656,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404661,"byte_end":10404680,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404685,"byte_end":10404760,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404765,"byte_end":10404840,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404845,"byte_end":10404861,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404866,"byte_end":10404931,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10404936,"byte_end":10405001,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405006,"byte_end":10405078,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405083,"byte_end":10405128,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405133,"byte_end":10405136,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405141,"byte_end":10405199,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405464,"byte_end":10405484,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405309,"byte_end":10405368,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405373,"byte_end":10405376,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405381,"byte_end":10405452,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406813,"byte_end":10406829,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405580,"byte_end":10405643,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405648,"byte_end":10405651,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405656,"byte_end":10405730,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405735,"byte_end":10405746,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405751,"byte_end":10405754,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405759,"byte_end":10405831,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405836,"byte_end":10405910,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405915,"byte_end":10405983,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10405988,"byte_end":10406010,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406015,"byte_end":10406018,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406023,"byte_end":10406098,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406103,"byte_end":10406177,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406182,"byte_end":10406258,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406263,"byte_end":10406282,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406287,"byte_end":10406362,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406367,"byte_end":10406442,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406447,"byte_end":10406463,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406468,"byte_end":10406533,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406538,"byte_end":10406603,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406608,"byte_end":10406680,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406685,"byte_end":10406730,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406735,"byte_end":10406738,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406743,"byte_end":10406801,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407537,"byte_end":10407547,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406911,"byte_end":10406952,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406957,"byte_end":10406960,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10406965,"byte_end":10407014,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407019,"byte_end":10407022,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407027,"byte_end":10407041,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407046,"byte_end":10407049,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407054,"byte_end":10407067,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407072,"byte_end":10407102,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407107,"byte_end":10407110,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407115,"byte_end":10407131,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407136,"byte_end":10407139,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407144,"byte_end":10407162,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407167,"byte_end":10407206,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407211,"byte_end":10407264,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407269,"byte_end":10407272,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407277,"byte_end":10407319,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407324,"byte_end":10407351,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407356,"byte_end":10407435,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407440,"byte_end":10407484,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407489,"byte_end":10407503,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407508,"byte_end":10407513,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407518,"byte_end":10407525,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408377,"byte_end":10408381,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407629,"byte_end":10407670,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407675,"byte_end":10407678,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407683,"byte_end":10407750,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407755,"byte_end":10407831,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407836,"byte_end":10407848,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407853,"byte_end":10407856,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407861,"byte_end":10407875,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407880,"byte_end":10407883,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407888,"byte_end":10407923,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407928,"byte_end":10407931,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407936,"byte_end":10407949,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407954,"byte_end":10407984,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407989,"byte_end":10407992,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10407997,"byte_end":10408013,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408018,"byte_end":10408021,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408026,"byte_end":10408044,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408049,"byte_end":10408088,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408093,"byte_end":10408146,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408151,"byte_end":10408154,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408159,"byte_end":10408201,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408206,"byte_end":10408233,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408238,"byte_end":10408241,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408246,"byte_end":10408290,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408295,"byte_end":10408316,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408321,"byte_end":10408324,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408329,"byte_end":10408343,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408348,"byte_end":10408353,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408358,"byte_end":10408365,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409449,"byte_end":10409456,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408468,"byte_end":10408543,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408548,"byte_end":10408551,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408556,"byte_end":10408626,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408631,"byte_end":10408700,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408705,"byte_end":10408739,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408744,"byte_end":10408747,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408752,"byte_end":10408780,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408785,"byte_end":10408788,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408793,"byte_end":10408863,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408868,"byte_end":10408944,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408949,"byte_end":10408961,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408966,"byte_end":10408969,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408974,"byte_end":10408988,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10408993,"byte_end":10408996,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409001,"byte_end":10409026,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409031,"byte_end":10409034,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409039,"byte_end":10409052,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409057,"byte_end":10409087,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409092,"byte_end":10409095,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409100,"byte_end":10409116,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409121,"byte_end":10409124,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409129,"byte_end":10409147,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409152,"byte_end":10409191,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409196,"byte_end":10409249,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409254,"byte_end":10409257,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409262,"byte_end":10409304,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409309,"byte_end":10409358,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409363,"byte_end":10409382,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409387,"byte_end":10409390,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409395,"byte_end":10409409,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409414,"byte_end":10409419,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409424,"byte_end":10409431,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410753,"byte_end":10410759,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409606,"byte_end":10409650,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409655,"byte_end":10409658,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409663,"byte_end":10409737,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409742,"byte_end":10409816,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409821,"byte_end":10409892,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operating-system will start rejecting connections.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409897,"byte_end":10409951,"line_start":451,"line_end":451,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409956,"byte_end":10409959,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10409964,"byte_end":10410012,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410017,"byte_end":10410020,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410025,"byte_end":10410101,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410106,"byte_end":10410181,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410186,"byte_end":10410232,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410237,"byte_end":10410240,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410245,"byte_end":10410259,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410264,"byte_end":10410267,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410272,"byte_end":10410299,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410304,"byte_end":10410307,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410312,"byte_end":10410325,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410330,"byte_end":10410360,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410365,"byte_end":10410368,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410373,"byte_end":10410389,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410394,"byte_end":10410397,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410402,"byte_end":10410420,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410425,"byte_end":10410464,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410469,"byte_end":10410522,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410527,"byte_end":10410530,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410535,"byte_end":10410577,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410582,"byte_end":10410609,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410614,"byte_end":10410617,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410622,"byte_end":10410666,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410671,"byte_end":10410692,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410697,"byte_end":10410700,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410705,"byte_end":10410719,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410724,"byte_end":10410729,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410734,"byte_end":10410741,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413227,"byte_end":10413235,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10412894,"byte_end":10412958,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10412959,"byte_end":10412962,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10412963,"byte_end":10413051,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413052,"byte_end":10413079,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413080,"byte_end":10413083,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413084,"byte_end":10413112,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413113,"byte_end":10413146,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413147,"byte_end":10413198,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3201},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413849,"byte_end":10413858,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413257,"byte_end":10413322,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413323,"byte_end":10413326,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413327,"byte_end":10413413,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413414,"byte_end":10413466,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413467,"byte_end":10413470,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413471,"byte_end":10413552,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413553,"byte_end":10413588,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413589,"byte_end":10413592,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413593,"byte_end":10413621,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413622,"byte_end":10413655,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413656,"byte_end":10413703,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413704,"byte_end":10413766,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10413767,"byte_end":10413820,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415174,"byte_end":10415183,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414032,"byte_end":10414106,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414111,"byte_end":10414184,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414189,"byte_end":10414203,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414208,"byte_end":10414211,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414216,"byte_end":10414287,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414292,"byte_end":10414366,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414371,"byte_end":10414395,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414400,"byte_end":10414403,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414408,"byte_end":10414481,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414486,"byte_end":10414489,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414494,"byte_end":10414508,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414513,"byte_end":10414516,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414521,"byte_end":10414534,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414539,"byte_end":10414574,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414579,"byte_end":10414609,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414614,"byte_end":10414617,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414622,"byte_end":10414655,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414660,"byte_end":10414663,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414668,"byte_end":10414686,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414691,"byte_end":10414730,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414735,"byte_end":10414804,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414809,"byte_end":10414857,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414862,"byte_end":10414892,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414897,"byte_end":10414942,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414947,"byte_end":10414950,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414955,"byte_end":10414977,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414982,"byte_end":10415027,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415032,"byte_end":10415050,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415055,"byte_end":10415058,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415063,"byte_end":10415077,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415082,"byte_end":10415087,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415092,"byte_end":10415099,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415104,"byte_end":10415107,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415112,"byte_end":10415162,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416643,"byte_end":10416647,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415345,"byte_end":10415415,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415420,"byte_end":10415489,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415494,"byte_end":10415533,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415538,"byte_end":10415541,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415546,"byte_end":10415614,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415619,"byte_end":10415622,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415627,"byte_end":10415667,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415672,"byte_end":10415675,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415680,"byte_end":10415694,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415699,"byte_end":10415702,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415707,"byte_end":10415720,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415725,"byte_end":10415755,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415760,"byte_end":10415792,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415797,"byte_end":10415823,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415828,"byte_end":10415831,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415836,"byte_end":10415854,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415859,"byte_end":10415910,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415915,"byte_end":10415943,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10415948,"byte_end":10416017,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416022,"byte_end":10416070,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416075,"byte_end":10416078,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416083,"byte_end":10416112,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416117,"byte_end":10416146,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416151,"byte_end":10416154,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416159,"byte_end":10416186,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416191,"byte_end":10416238,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416243,"byte_end":10416246,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416251,"byte_end":10416275,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416280,"byte_end":10416339,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416344,"byte_end":10416383,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416388,"byte_end":10416391,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416396,"byte_end":10416410,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416415,"byte_end":10416420,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416425,"byte_end":10416432,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416437,"byte_end":10416440,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416445,"byte_end":10416510,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416515,"byte_end":10416518,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416523,"byte_end":10416569,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416574,"byte_end":10416625,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3208},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419177,"byte_end":10419190,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3209}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10418826,"byte_end":10418892,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10418893,"byte_end":10418896,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10418897,"byte_end":10418984,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10418985,"byte_end":10419019,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419020,"byte_end":10419023,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419024,"byte_end":10419052,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419053,"byte_end":10419096,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419097,"byte_end":10419148,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3212},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419916,"byte_end":10419930,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419223,"byte_end":10419290,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419291,"byte_end":10419294,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419295,"byte_end":10419382,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419383,"byte_end":10419460,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419461,"byte_end":10419518,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419519,"byte_end":10419522,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419523,"byte_end":10419609,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419610,"byte_end":10419645,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419646,"byte_end":10419649,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419650,"byte_end":10419678,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419679,"byte_end":10419722,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419723,"byte_end":10419770,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419771,"byte_end":10419833,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10419834,"byte_end":10419887,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3217},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10420895,"byte_end":10420907,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10420763,"byte_end":10420845,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10420846,"byte_end":10420866,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3219},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10420908,"byte_end":10420925,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3220},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10420927,"byte_end":10420945,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421491,"byte_end":10421498,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421228,"byte_end":10421297,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421302,"byte_end":10421366,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421371,"byte_end":10421423,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421428,"byte_end":10421431,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421436,"byte_end":10421479,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422748,"byte_end":10422757,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421605,"byte_end":10421679,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421684,"byte_end":10421757,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421762,"byte_end":10421776,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421781,"byte_end":10421784,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421789,"byte_end":10421860,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421865,"byte_end":10421939,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421944,"byte_end":10421968,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421973,"byte_end":10421976,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421981,"byte_end":10422054,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422059,"byte_end":10422062,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422067,"byte_end":10422081,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422086,"byte_end":10422089,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422094,"byte_end":10422107,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422112,"byte_end":10422147,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422152,"byte_end":10422182,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422187,"byte_end":10422190,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422195,"byte_end":10422228,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422233,"byte_end":10422236,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422241,"byte_end":10422259,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422264,"byte_end":10422303,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422308,"byte_end":10422373,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422378,"byte_end":10422431,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422436,"byte_end":10422466,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422471,"byte_end":10422516,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422521,"byte_end":10422524,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422529,"byte_end":10422551,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422556,"byte_end":10422601,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422606,"byte_end":10422624,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422629,"byte_end":10422632,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422637,"byte_end":10422651,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422656,"byte_end":10422661,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422666,"byte_end":10422673,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422678,"byte_end":10422681,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422686,"byte_end":10422736,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424222,"byte_end":10424226,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422923,"byte_end":10422993,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10422998,"byte_end":10423067,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423072,"byte_end":10423111,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423116,"byte_end":10423119,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423124,"byte_end":10423192,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423197,"byte_end":10423200,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423205,"byte_end":10423245,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423250,"byte_end":10423253,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423258,"byte_end":10423272,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423277,"byte_end":10423280,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423285,"byte_end":10423298,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423303,"byte_end":10423333,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423338,"byte_end":10423370,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423375,"byte_end":10423401,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423406,"byte_end":10423409,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423414,"byte_end":10423432,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423437,"byte_end":10423488,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423493,"byte_end":10423521,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423526,"byte_end":10423591,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423596,"byte_end":10423649,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423654,"byte_end":10423657,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423662,"byte_end":10423691,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423696,"byte_end":10423725,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423730,"byte_end":10423733,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423738,"byte_end":10423765,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423770,"byte_end":10423817,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423822,"byte_end":10423825,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423830,"byte_end":10423854,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423859,"byte_end":10423918,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423923,"byte_end":10423962,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423967,"byte_end":10423970,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423975,"byte_end":10423989,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10423994,"byte_end":10423999,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424004,"byte_end":10424011,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424016,"byte_end":10424019,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424024,"byte_end":10424089,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424094,"byte_end":10424097,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424102,"byte_end":10424148,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424153,"byte_end":10424204,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424901,"byte_end":10424908,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424638,"byte_end":10424707,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424712,"byte_end":10424776,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424781,"byte_end":10424833,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424838,"byte_end":10424841,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424846,"byte_end":10424889,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10425213,"byte_end":10425219,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10425014,"byte_end":10425086,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10425091,"byte_end":10425160,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10425165,"byte_end":10425201,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3224},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429134,"byte_end":10429143,"line_start":67,"line_end":67,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3225}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430664,"byte_end":10430671,"line_start":111,"line_end":111,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429222,"byte_end":10429266,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429271,"byte_end":10429274,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429279,"byte_end":10429353,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address.  If `addr`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429358,"byte_end":10429428,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ yields multiple addresses, connect will be attempted with each of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429433,"byte_end":10429506,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ addresses until a connection is successful. If none of the addresses","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429511,"byte_end":10429583,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ result in a successful connection, the error returned from the last","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429588,"byte_end":10429659,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ connection attempt (the last address) is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429664,"byte_end":10429718,"line_start":80,"line_end":80,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429723,"byte_end":10429726,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before connecting, you can use the [`TcpSocket`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429731,"byte_end":10429807,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429812,"byte_end":10429821,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429826,"byte_end":10429829,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429834,"byte_end":10429888,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429893,"byte_end":10429940,"line_start":86,"line_end":86,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429945,"byte_end":10429948,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429953,"byte_end":10429967,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429972,"byte_end":10429975,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429980,"byte_end":10429993,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429998,"byte_end":10430028,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430033,"byte_end":10430066,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430071,"byte_end":10430097,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430102,"byte_end":10430105,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430110,"byte_end":10430128,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430133,"byte_end":10430184,"line_start":96,"line_end":96,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430189,"byte_end":10430217,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430222,"byte_end":10430291,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430296,"byte_end":10430299,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430304,"byte_end":10430331,"line_start":100,"line_end":100,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430336,"byte_end":10430385,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430390,"byte_end":10430393,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430398,"byte_end":10430412,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430417,"byte_end":10430422,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430427,"byte_end":10430434,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430439,"byte_end":10430442,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430447,"byte_end":10430518,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430523,"byte_end":10430526,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430531,"byte_end":10430588,"line_start":109,"line_end":109,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10430593,"byte_end":10430646,"line_start":110,"line_end":110,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433395,"byte_end":10433403,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432278,"byte_end":10432335,"line_start":160,"line_end":160,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432340,"byte_end":10432343,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432348,"byte_end":10432418,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432423,"byte_end":10432499,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432504,"byte_end":10432575,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432580,"byte_end":10432602,"line_start":165,"line_end":165,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432607,"byte_end":10432610,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432615,"byte_end":10432629,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432634,"byte_end":10432637,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432642,"byte_end":10432660,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432665,"byte_end":10432691,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432696,"byte_end":10432726,"line_start":171,"line_end":171,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432731,"byte_end":10432734,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432739,"byte_end":10432757,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432762,"byte_end":10432813,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432818,"byte_end":10432892,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432897,"byte_end":10432939,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10432944,"byte_end":10432998,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433003,"byte_end":10433017,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433022,"byte_end":10433027,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433032,"byte_end":10433039,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433044,"byte_end":10433047,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433052,"byte_end":10433064,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433069,"byte_end":10433072,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433077,"byte_end":10433137,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433142,"byte_end":10433145,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433150,"byte_end":10433220,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433225,"byte_end":10433298,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433303,"byte_end":10433383,"line_start":188,"line_end":188,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435043,"byte_end":10435051,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433596,"byte_end":10433664,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433669,"byte_end":10433672,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have nonblocking mode set as `true`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433677,"byte_end":10433759,"line_start":197,"line_end":197,"column_start":5,"column_end":87}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433764,"byte_end":10433830,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433835,"byte_end":10433838,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433843,"byte_end":10433857,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433862,"byte_end":10433865,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433870,"byte_end":10433877,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433882,"byte_end":10433908,"line_start":203,"line_end":203,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433913,"byte_end":10433935,"line_start":204,"line_end":204,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433940,"byte_end":10433972,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10433977,"byte_end":10434009,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434014,"byte_end":10434049,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434054,"byte_end":10434057,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434062,"byte_end":10434080,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434085,"byte_end":10434136,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434141,"byte_end":10434174,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434179,"byte_end":10434246,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434251,"byte_end":10434292,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434297,"byte_end":10434390,"line_start":214,"line_end":214,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434395,"byte_end":10434452,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434457,"byte_end":10434468,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434473,"byte_end":10434534,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434539,"byte_end":10434601,"line_start":218,"line_end":218,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434606,"byte_end":10434672,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434677,"byte_end":10434724,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434729,"byte_end":10434775,"line_start":221,"line_end":221,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434780,"byte_end":10434823,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434828,"byte_end":10434842,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434847,"byte_end":10434852,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434857,"byte_end":10434864,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434869,"byte_end":10434909,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434914,"byte_end":10434962,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10434967,"byte_end":10435031,"line_start":228,"line_end":228,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436090,"byte_end":10436100,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435691,"byte_end":10435750,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435755,"byte_end":10435758,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435763,"byte_end":10435777,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435782,"byte_end":10435785,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435790,"byte_end":10435803,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435808,"byte_end":10435838,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435843,"byte_end":10435846,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435851,"byte_end":10435915,"line_start":256,"line_end":256,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435920,"byte_end":10435981,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435986,"byte_end":10435989,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10435994,"byte_end":10436037,"line_start":259,"line_end":259,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436042,"byte_end":10436054,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436059,"byte_end":10436066,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436071,"byte_end":10436078,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436579,"byte_end":10436588,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436176,"byte_end":10436240,"line_start":267,"line_end":267,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436245,"byte_end":10436248,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436253,"byte_end":10436267,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436272,"byte_end":10436275,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436280,"byte_end":10436293,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436298,"byte_end":10436328,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436333,"byte_end":10436336,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436341,"byte_end":10436405,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436410,"byte_end":10436471,"line_start":275,"line_end":275,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436476,"byte_end":10436479,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436484,"byte_end":10436526,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436531,"byte_end":10436543,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436548,"byte_end":10436555,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436560,"byte_end":10436567,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438079,"byte_end":10438088,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436663,"byte_end":10436738,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436743,"byte_end":10436816,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436821,"byte_end":10436835,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436840,"byte_end":10436843,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436848,"byte_end":10436910,"line_start":289,"line_end":289,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436915,"byte_end":10436987,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10436992,"byte_end":10437056,"line_start":291,"line_end":291,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437061,"byte_end":10437115,"line_start":292,"line_end":292,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437120,"byte_end":10437123,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437128,"byte_end":10437146,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437151,"byte_end":10437154,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437159,"byte_end":10437184,"line_start":296,"line_end":296,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437189,"byte_end":10437192,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437197,"byte_end":10437248,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437253,"byte_end":10437336,"line_start":299,"line_end":299,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437341,"byte_end":10437396,"line_start":300,"line_end":300,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437401,"byte_end":10437404,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437409,"byte_end":10437421,"line_start":302,"line_end":302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437426,"byte_end":10437429,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437434,"byte_end":10437509,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437514,"byte_end":10437517,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437522,"byte_end":10437536,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437541,"byte_end":10437544,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437549,"byte_end":10437562,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437567,"byte_end":10437602,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437607,"byte_end":10437637,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437642,"byte_end":10437645,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437650,"byte_end":10437683,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437688,"byte_end":10437691,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437696,"byte_end":10437714,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437719,"byte_end":10437758,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437763,"byte_end":10437828,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437833,"byte_end":10437863,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437868,"byte_end":10437913,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437918,"byte_end":10437921,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437926,"byte_end":10437948,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10437953,"byte_end":10437995,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438000,"byte_end":10438018,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438023,"byte_end":10438026,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438031,"byte_end":10438045,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438050,"byte_end":10438055,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438060,"byte_end":10438067,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441160,"byte_end":10441165,"line_start":413,"line_end":413,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438895,"byte_end":10438942,"line_start":353,"line_end":353,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438947,"byte_end":10438950,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10438955,"byte_end":10439029,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439034,"byte_end":10439109,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439114,"byte_end":10439152,"line_start":357,"line_end":357,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439157,"byte_end":10439160,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439165,"byte_end":10439179,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439184,"byte_end":10439187,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439192,"byte_end":10439262,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439267,"byte_end":10439281,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439286,"byte_end":10439289,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439294,"byte_end":10439307,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439312,"byte_end":10439340,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439345,"byte_end":10439375,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439380,"byte_end":10439406,"line_start":367,"line_end":367,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439411,"byte_end":10439427,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439432,"byte_end":10439435,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439440,"byte_end":10439458,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439463,"byte_end":10439514,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439519,"byte_end":10439584,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439589,"byte_end":10439592,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439597,"byte_end":10439611,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439616,"byte_end":10439701,"line_start":375,"line_end":375,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439706,"byte_end":10439709,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439714,"byte_end":10439750,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439755,"byte_end":10439800,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439805,"byte_end":10439879,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439884,"byte_end":10439946,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10439951,"byte_end":10440001,"line_start":381,"line_end":381,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440006,"byte_end":10440036,"line_start":382,"line_end":382,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440041,"byte_end":10440102,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440107,"byte_end":10440128,"line_start":384,"line_end":384,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440133,"byte_end":10440209,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440214,"byte_end":10440247,"line_start":386,"line_end":386,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440252,"byte_end":10440273,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440278,"byte_end":10440309,"line_start":388,"line_end":388,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440314,"byte_end":10440359,"line_start":389,"line_end":389,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440364,"byte_end":10440385,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440390,"byte_end":10440407,"line_start":391,"line_end":391,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440412,"byte_end":10440415,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440420,"byte_end":10440433,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440438,"byte_end":10440441,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440446,"byte_end":10440482,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440487,"byte_end":10440562,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440567,"byte_end":10440629,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440634,"byte_end":10440690,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440695,"byte_end":10440725,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440730,"byte_end":10440784,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440789,"byte_end":10440810,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440815,"byte_end":10440891,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440896,"byte_end":10440928,"line_start":403,"line_end":403,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440933,"byte_end":10440954,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440959,"byte_end":10440990,"line_start":405,"line_end":405,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10440995,"byte_end":10441040,"line_start":406,"line_end":406,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441045,"byte_end":10441066,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441071,"byte_end":10441088,"line_start":408,"line_end":408,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441093,"byte_end":10441106,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441111,"byte_end":10441120,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441125,"byte_end":10441130,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441135,"byte_end":10441142,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442685,"byte_end":10442693,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441322,"byte_end":10441365,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441370,"byte_end":10441373,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441378,"byte_end":10441455,"line_start":420,"line_end":420,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441460,"byte_end":10441489,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441494,"byte_end":10441497,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441502,"byte_end":10441516,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441521,"byte_end":10441524,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441529,"byte_end":10441542,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441547,"byte_end":10441577,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441582,"byte_end":10441608,"line_start":427,"line_end":427,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441613,"byte_end":10441629,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441634,"byte_end":10441637,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441642,"byte_end":10441660,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441665,"byte_end":10441716,"line_start":431,"line_end":431,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441721,"byte_end":10441749,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441754,"byte_end":10441819,"line_start":433,"line_end":433,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441824,"byte_end":10441827,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441832,"byte_end":10441868,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441873,"byte_end":10441876,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441881,"byte_end":10441895,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441900,"byte_end":10441949,"line_start":438,"line_end":438,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441954,"byte_end":10441991,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10441996,"byte_end":10441999,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442004,"byte_end":10442074,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442079,"byte_end":10442137,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442142,"byte_end":10442187,"line_start":443,"line_end":443,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442192,"byte_end":10442218,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442223,"byte_end":10442259,"line_start":445,"line_end":445,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442264,"byte_end":10442290,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442295,"byte_end":10442312,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442317,"byte_end":10442389,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442394,"byte_end":10442423,"line_start":449,"line_end":449,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442428,"byte_end":10442445,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442450,"byte_end":10442477,"line_start":451,"line_end":451,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442482,"byte_end":10442523,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442528,"byte_end":10442545,"line_start":453,"line_end":453,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442550,"byte_end":10442563,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442568,"byte_end":10442577,"line_start":455,"line_end":455,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442582,"byte_end":10442585,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442590,"byte_end":10442626,"line_start":457,"line_end":457,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442631,"byte_end":10442645,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442650,"byte_end":10442655,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442660,"byte_end":10442667,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444065,"byte_end":10444080,"line_start":495,"line_end":495,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442794,"byte_end":10442823,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442828,"byte_end":10442831,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442836,"byte_end":10442910,"line_start":468,"line_end":468,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442915,"byte_end":10442989,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10442994,"byte_end":10443067,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443072,"byte_end":10443082,"line_start":471,"line_end":471,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443087,"byte_end":10443090,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443095,"byte_end":10443163,"line_start":473,"line_end":473,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443168,"byte_end":10443239,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443244,"byte_end":10443303,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443308,"byte_end":10443368,"line_start":476,"line_end":476,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443373,"byte_end":10443376,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443381,"byte_end":10443456,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443461,"byte_end":10443536,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443541,"byte_end":10443609,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443614,"byte_end":10443617,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443622,"byte_end":10443640,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443645,"byte_end":10443648,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443653,"byte_end":10443678,"line_start":484,"line_end":484,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443683,"byte_end":10443686,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443691,"byte_end":10443756,"line_start":486,"line_end":486,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443761,"byte_end":10443828,"line_start":487,"line_end":487,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443833,"byte_end":10443888,"line_start":488,"line_end":488,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443893,"byte_end":10443896,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443901,"byte_end":10443913,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443918,"byte_end":10443921,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10443926,"byte_end":10444001,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444006,"byte_end":10444009,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444014,"byte_end":10444053,"line_start":494,"line_end":494,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446416,"byte_end":10446424,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444213,"byte_end":10444289,"line_start":499,"line_end":499,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444294,"byte_end":10444319,"line_start":500,"line_end":500,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444324,"byte_end":10444327,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444332,"byte_end":10444408,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444413,"byte_end":10444481,"line_start":503,"line_end":503,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444486,"byte_end":10444560,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444565,"byte_end":10444620,"line_start":505,"line_end":505,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444625,"byte_end":10444628,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444633,"byte_end":10444703,"line_start":507,"line_end":507,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444708,"byte_end":10444711,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444716,"byte_end":10444757,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444762,"byte_end":10444797,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444802,"byte_end":10444805,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444810,"byte_end":10444822,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444827,"byte_end":10444830,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444835,"byte_end":10444906,"line_start":514,"line_end":514,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444911,"byte_end":10444987,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10444992,"byte_end":10445066,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445071,"byte_end":10445120,"line_start":517,"line_end":517,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445125,"byte_end":10445128,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445133,"byte_end":10445147,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445152,"byte_end":10445155,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445160,"byte_end":10445173,"line_start":521,"line_end":521,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445178,"byte_end":10445208,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445213,"byte_end":10445239,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445244,"byte_end":10445260,"line_start":524,"line_end":524,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445265,"byte_end":10445268,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445273,"byte_end":10445291,"line_start":526,"line_end":526,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445296,"byte_end":10445347,"line_start":527,"line_end":527,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445352,"byte_end":10445380,"line_start":528,"line_end":528,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445385,"byte_end":10445450,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445455,"byte_end":10445458,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445463,"byte_end":10445477,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445482,"byte_end":10445531,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445536,"byte_end":10445573,"line_start":533,"line_end":533,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445578,"byte_end":10445581,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445586,"byte_end":10445659,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445664,"byte_end":10445710,"line_start":536,"line_end":536,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445715,"byte_end":10445751,"line_start":537,"line_end":537,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445756,"byte_end":10445759,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445764,"byte_end":10445834,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445839,"byte_end":10445897,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445902,"byte_end":10445947,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445952,"byte_end":10445983,"line_start":542,"line_end":542,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10445988,"byte_end":10446014,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446019,"byte_end":10446068,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446073,"byte_end":10446090,"line_start":545,"line_end":545,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446095,"byte_end":10446167,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446172,"byte_end":10446201,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446206,"byte_end":10446223,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446228,"byte_end":10446255,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446260,"byte_end":10446301,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446306,"byte_end":10446323,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446328,"byte_end":10446341,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446346,"byte_end":10446355,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446360,"byte_end":10446363,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446368,"byte_end":10446382,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446387,"byte_end":10446392,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10446397,"byte_end":10446404,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449008,"byte_end":10449020,"line_start":624,"line_end":624,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<TcpStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450899,"byte_end":10450907,"line_start":684,"line_end":684,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449658,"byte_end":10449701,"line_start":645,"line_end":645,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449706,"byte_end":10449709,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449714,"byte_end":10449791,"line_start":647,"line_end":647,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449796,"byte_end":10449826,"line_start":648,"line_end":648,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449831,"byte_end":10449834,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449839,"byte_end":10449853,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449858,"byte_end":10449861,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449866,"byte_end":10449879,"line_start":652,"line_end":652,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449884,"byte_end":10449914,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449919,"byte_end":10449945,"line_start":654,"line_end":654,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449950,"byte_end":10449966,"line_start":655,"line_end":655,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449971,"byte_end":10449974,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10449979,"byte_end":10449997,"line_start":657,"line_end":657,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450002,"byte_end":10450053,"line_start":658,"line_end":658,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450058,"byte_end":10450086,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450091,"byte_end":10450156,"line_start":660,"line_end":660,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450161,"byte_end":10450164,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450169,"byte_end":10450183,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450188,"byte_end":10450237,"line_start":663,"line_end":663,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450242,"byte_end":10450279,"line_start":664,"line_end":664,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450284,"byte_end":10450287,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450292,"byte_end":10450363,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450368,"byte_end":10450426,"line_start":667,"line_end":667,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450431,"byte_end":10450483,"line_start":668,"line_end":668,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450488,"byte_end":10450514,"line_start":669,"line_end":669,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450519,"byte_end":10450545,"line_start":670,"line_end":670,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450550,"byte_end":10450567,"line_start":671,"line_end":671,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450572,"byte_end":10450644,"line_start":672,"line_end":672,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450649,"byte_end":10450678,"line_start":673,"line_end":673,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450683,"byte_end":10450700,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450705,"byte_end":10450732,"line_start":675,"line_end":675,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450737,"byte_end":10450778,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450783,"byte_end":10450800,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450805,"byte_end":10450818,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450823,"byte_end":10450832,"line_start":679,"line_end":679,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450837,"byte_end":10450840,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450845,"byte_end":10450859,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450864,"byte_end":10450869,"line_start":682,"line_end":682,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10450874,"byte_end":10450881,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452268,"byte_end":10452284,"line_start":718,"line_end":718,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451008,"byte_end":10451038,"line_start":689,"line_end":689,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451043,"byte_end":10451046,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451051,"byte_end":10451125,"line_start":691,"line_end":691,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451130,"byte_end":10451204,"line_start":692,"line_end":692,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451209,"byte_end":10451282,"line_start":693,"line_end":693,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451287,"byte_end":10451297,"line_start":694,"line_end":694,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451302,"byte_end":10451305,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451310,"byte_end":10451385,"line_start":696,"line_end":696,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451390,"byte_end":10451458,"line_start":697,"line_end":697,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451463,"byte_end":10451535,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451540,"byte_end":10451571,"line_start":699,"line_end":699,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451576,"byte_end":10451579,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451584,"byte_end":10451659,"line_start":701,"line_end":701,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451664,"byte_end":10451739,"line_start":702,"line_end":702,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451744,"byte_end":10451812,"line_start":703,"line_end":703,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451817,"byte_end":10451820,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451825,"byte_end":10451843,"line_start":705,"line_end":705,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451848,"byte_end":10451851,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451856,"byte_end":10451881,"line_start":707,"line_end":707,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451886,"byte_end":10451889,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451894,"byte_end":10451959,"line_start":709,"line_end":709,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10451964,"byte_end":10452031,"line_start":710,"line_end":710,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452036,"byte_end":10452091,"line_start":711,"line_end":711,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452096,"byte_end":10452099,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452104,"byte_end":10452116,"line_start":713,"line_end":713,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452121,"byte_end":10452124,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452129,"byte_end":10452204,"line_start":715,"line_end":715,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452209,"byte_end":10452212,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452217,"byte_end":10452256,"line_start":717,"line_end":717,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454013,"byte_end":10454022,"line_start":770,"line_end":770,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452418,"byte_end":10452488,"line_start":722,"line_end":722,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452493,"byte_end":10452505,"line_start":723,"line_end":723,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452510,"byte_end":10452513,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452518,"byte_end":10452590,"line_start":725,"line_end":725,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452595,"byte_end":10452638,"line_start":726,"line_end":726,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452643,"byte_end":10452646,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452651,"byte_end":10452705,"line_start":728,"line_end":728,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452710,"byte_end":10452713,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452718,"byte_end":10452730,"line_start":730,"line_end":730,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452735,"byte_end":10452738,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452743,"byte_end":10452817,"line_start":732,"line_end":732,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452822,"byte_end":10452892,"line_start":733,"line_end":733,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452897,"byte_end":10452946,"line_start":734,"line_end":734,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452951,"byte_end":10452954,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452959,"byte_end":10452973,"line_start":736,"line_end":736,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452978,"byte_end":10452981,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10452986,"byte_end":10452999,"line_start":738,"line_end":738,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453004,"byte_end":10453034,"line_start":739,"line_end":739,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453039,"byte_end":10453065,"line_start":740,"line_end":740,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453070,"byte_end":10453086,"line_start":741,"line_end":741,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453091,"byte_end":10453094,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453099,"byte_end":10453117,"line_start":743,"line_end":743,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453122,"byte_end":10453173,"line_start":744,"line_end":744,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453178,"byte_end":10453206,"line_start":745,"line_end":745,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453211,"byte_end":10453276,"line_start":746,"line_end":746,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453281,"byte_end":10453284,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453289,"byte_end":10453303,"line_start":748,"line_end":748,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453308,"byte_end":10453357,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453362,"byte_end":10453399,"line_start":750,"line_end":750,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453404,"byte_end":10453407,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453412,"byte_end":10453483,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453488,"byte_end":10453546,"line_start":753,"line_end":753,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453551,"byte_end":10453603,"line_start":754,"line_end":754,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453608,"byte_end":10453634,"line_start":755,"line_end":755,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453639,"byte_end":10453665,"line_start":756,"line_end":756,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453670,"byte_end":10453687,"line_start":757,"line_end":757,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453692,"byte_end":10453764,"line_start":758,"line_end":758,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453769,"byte_end":10453798,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453803,"byte_end":10453820,"line_start":760,"line_end":760,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453825,"byte_end":10453852,"line_start":761,"line_end":761,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453857,"byte_end":10453898,"line_start":762,"line_end":762,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453903,"byte_end":10453920,"line_start":763,"line_end":763,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453925,"byte_end":10453938,"line_start":764,"line_end":764,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453943,"byte_end":10453952,"line_start":765,"line_end":765,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453957,"byte_end":10453960,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453965,"byte_end":10453979,"line_start":767,"line_end":767,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453984,"byte_end":10453989,"line_start":768,"line_end":768,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10453994,"byte_end":10454001,"line_start":769,"line_end":769,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455473,"byte_end":10455477,"line_start":815,"line_end":815,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454216,"byte_end":10454286,"line_start":778,"line_end":778,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454291,"byte_end":10454360,"line_start":779,"line_end":779,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454365,"byte_end":10454404,"line_start":780,"line_end":780,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454409,"byte_end":10454412,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454417,"byte_end":10454491,"line_start":782,"line_end":782,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454496,"byte_end":10454556,"line_start":783,"line_end":783,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454561,"byte_end":10454564,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454569,"byte_end":10454583,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454588,"byte_end":10454591,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454596,"byte_end":10454609,"line_start":787,"line_end":787,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454614,"byte_end":10454644,"line_start":788,"line_end":788,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454649,"byte_end":10454681,"line_start":789,"line_end":789,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454686,"byte_end":10454712,"line_start":790,"line_end":790,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454717,"byte_end":10454720,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454725,"byte_end":10454743,"line_start":792,"line_end":792,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454748,"byte_end":10454799,"line_start":793,"line_end":793,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454804,"byte_end":10454832,"line_start":794,"line_end":794,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454837,"byte_end":10454906,"line_start":795,"line_end":795,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454911,"byte_end":10454914,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454919,"byte_end":10454948,"line_start":797,"line_end":797,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454953,"byte_end":10454982,"line_start":798,"line_end":798,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454987,"byte_end":10454990,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10454995,"byte_end":10455022,"line_start":800,"line_end":800,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455027,"byte_end":10455071,"line_start":801,"line_end":801,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455076,"byte_end":10455079,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455084,"byte_end":10455108,"line_start":803,"line_end":803,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455113,"byte_end":10455169,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455174,"byte_end":10455213,"line_start":805,"line_end":805,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455218,"byte_end":10455221,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455226,"byte_end":10455240,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455245,"byte_end":10455250,"line_start":808,"line_end":808,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455255,"byte_end":10455262,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455267,"byte_end":10455270,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455275,"byte_end":10455340,"line_start":811,"line_end":811,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455345,"byte_end":10455348,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455353,"byte_end":10455399,"line_start":813,"line_end":813,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10455404,"byte_end":10455455,"line_start":814,"line_end":814,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456572,"byte_end":10456579,"line_start":849,"line_end":849,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456040,"byte_end":10456102,"line_start":831,"line_end":831,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456107,"byte_end":10456110,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456115,"byte_end":10456179,"line_start":833,"line_end":833,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456184,"byte_end":10456187,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456192,"byte_end":10456235,"line_start":835,"line_end":835,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456240,"byte_end":10456243,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456248,"byte_end":10456262,"line_start":837,"line_end":837,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456267,"byte_end":10456270,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456275,"byte_end":10456288,"line_start":839,"line_end":839,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456293,"byte_end":10456323,"line_start":840,"line_end":840,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456328,"byte_end":10456331,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456336,"byte_end":10456400,"line_start":842,"line_end":842,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456405,"byte_end":10456466,"line_start":843,"line_end":843,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456471,"byte_end":10456474,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456479,"byte_end":10456519,"line_start":845,"line_end":845,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456524,"byte_end":10456536,"line_start":846,"line_end":846,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456541,"byte_end":10456548,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456553,"byte_end":10456560,"line_start":848,"line_end":848,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457376,"byte_end":10457387,"line_start":873,"line_end":873,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456646,"byte_end":10456708,"line_start":853,"line_end":853,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456713,"byte_end":10456716,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456721,"byte_end":10456790,"line_start":855,"line_end":855,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456795,"byte_end":10456868,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456873,"byte_end":10456946,"line_start":857,"line_end":857,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10456951,"byte_end":10457026,"line_start":858,"line_end":858,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457031,"byte_end":10457049,"line_start":859,"line_end":859,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457054,"byte_end":10457057,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457062,"byte_end":10457076,"line_start":861,"line_end":861,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457081,"byte_end":10457084,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457089,"byte_end":10457102,"line_start":863,"line_end":863,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457107,"byte_end":10457137,"line_start":864,"line_end":864,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457142,"byte_end":10457145,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457150,"byte_end":10457214,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457219,"byte_end":10457280,"line_start":867,"line_end":867,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457285,"byte_end":10457288,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457293,"byte_end":10457323,"line_start":869,"line_end":869,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457328,"byte_end":10457340,"line_start":870,"line_end":870,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457345,"byte_end":10457352,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457357,"byte_end":10457364,"line_start":872,"line_end":872,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458032,"byte_end":10458038,"line_start":896,"line_end":896,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457478,"byte_end":10457550,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457555,"byte_end":10457566,"line_start":878,"line_end":878,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457571,"byte_end":10457574,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457579,"byte_end":10457642,"line_start":880,"line_end":880,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457647,"byte_end":10457650,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457655,"byte_end":10457696,"line_start":882,"line_end":882,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457701,"byte_end":10457704,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457709,"byte_end":10457723,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457728,"byte_end":10457731,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457736,"byte_end":10457749,"line_start":886,"line_end":886,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457754,"byte_end":10457784,"line_start":887,"line_end":887,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457789,"byte_end":10457792,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457797,"byte_end":10457861,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457866,"byte_end":10457927,"line_start":890,"line_end":890,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457932,"byte_end":10457935,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457940,"byte_end":10457979,"line_start":892,"line_end":892,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10457984,"byte_end":10457996,"line_start":893,"line_end":893,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458001,"byte_end":10458008,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458013,"byte_end":10458020,"line_start":895,"line_end":895,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459017,"byte_end":10459027,"line_start":923,"line_end":923,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458193,"byte_end":10458269,"line_start":902,"line_end":902,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458274,"byte_end":10458277,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458282,"byte_end":10458375,"line_start":904,"line_end":904,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458380,"byte_end":10458473,"line_start":905,"line_end":905,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458478,"byte_end":10458513,"line_start":906,"line_end":906,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458518,"byte_end":10458521,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458526,"byte_end":10458619,"line_start":908,"line_end":908,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458624,"byte_end":10458691,"line_start":909,"line_end":909,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458696,"byte_end":10458699,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458704,"byte_end":10458718,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458723,"byte_end":10458726,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458731,"byte_end":10458744,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458749,"byte_end":10458779,"line_start":914,"line_end":914,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458784,"byte_end":10458787,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458792,"byte_end":10458856,"line_start":916,"line_end":916,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458861,"byte_end":10458922,"line_start":917,"line_end":917,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458927,"byte_end":10458930,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458935,"byte_end":10458964,"line_start":919,"line_end":919,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458969,"byte_end":10458981,"line_start":920,"line_end":920,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458986,"byte_end":10458993,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10458998,"byte_end":10459005,"line_start":922,"line_end":922,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460126,"byte_end":10460129,"line_start":961,"line_end":961,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459614,"byte_end":10459672,"line_start":943,"line_end":943,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459677,"byte_end":10459680,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459685,"byte_end":10459745,"line_start":945,"line_end":945,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459750,"byte_end":10459753,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459758,"byte_end":10459793,"line_start":947,"line_end":947,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459798,"byte_end":10459801,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459806,"byte_end":10459820,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459825,"byte_end":10459828,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459833,"byte_end":10459846,"line_start":951,"line_end":951,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459851,"byte_end":10459881,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459886,"byte_end":10459889,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459894,"byte_end":10459958,"line_start":954,"line_end":954,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10459963,"byte_end":10460024,"line_start":955,"line_end":955,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460029,"byte_end":10460032,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460037,"byte_end":10460073,"line_start":957,"line_end":957,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460078,"byte_end":10460090,"line_start":958,"line_end":958,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460095,"byte_end":10460102,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460107,"byte_end":10460114,"line_start":960,"line_end":960,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460686,"byte_end":10460693,"line_start":982,"line_end":982,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460191,"byte_end":10460249,"line_start":965,"line_end":965,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460254,"byte_end":10460257,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460262,"byte_end":10460338,"line_start":967,"line_end":967,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460343,"byte_end":10460364,"line_start":968,"line_end":968,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460369,"byte_end":10460372,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460377,"byte_end":10460391,"line_start":970,"line_end":970,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460396,"byte_end":10460399,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460404,"byte_end":10460417,"line_start":972,"line_end":972,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460422,"byte_end":10460452,"line_start":973,"line_end":973,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460457,"byte_end":10460460,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460465,"byte_end":10460529,"line_start":975,"line_end":975,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460534,"byte_end":10460595,"line_start":976,"line_end":976,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460600,"byte_end":10460603,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460608,"byte_end":10460633,"line_start":978,"line_end":978,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460638,"byte_end":10460650,"line_start":979,"line_end":979,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460655,"byte_end":10460662,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460667,"byte_end":10460674,"line_start":981,"line_end":981,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461285,"byte_end":10461290,"line_start":996,"line_end":996,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460908,"byte_end":10460944,"line_start":988,"line_end":988,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10460949,"byte_end":10461026,"line_start":989,"line_end":989,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461031,"byte_end":10461077,"line_start":990,"line_end":990,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461082,"byte_end":10461085,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461090,"byte_end":10461169,"line_start":992,"line_end":992,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461174,"byte_end":10461217,"line_start":993,"line_end":993,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461222,"byte_end":10461225,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461230,"byte_end":10461273,"line_start":995,"line_end":995,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461939,"byte_end":10461949,"line_start":1011,"line_end":1011,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461375,"byte_end":10461452,"line_start":1000,"line_end":1000,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461457,"byte_end":10461503,"line_start":1001,"line_end":1001,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461508,"byte_end":10461511,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461516,"byte_end":10461594,"line_start":1003,"line_end":1003,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461599,"byte_end":10461647,"line_start":1004,"line_end":1004,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461652,"byte_end":10461655,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461660,"byte_end":10461738,"line_start":1006,"line_end":1006,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461743,"byte_end":10461819,"line_start":1007,"line_end":1007,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461824,"byte_end":10461827,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461832,"byte_end":10461865,"line_start":1009,"line_end":1009,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10461870,"byte_end":10461927,"line_start":1010,"line_end":1010,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3231},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469467,"byte_end":10469476,"line_start":122,"line_end":122,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3232}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10470013,"byte_end":10470017,"line_start":145,"line_end":145,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469555,"byte_end":10469627,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469632,"byte_end":10469656,"line_start":129,"line_end":129,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469661,"byte_end":10469664,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469669,"byte_end":10469682,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469687,"byte_end":10469690,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469695,"byte_end":10469708,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469713,"byte_end":10469743,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469748,"byte_end":10469764,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469769,"byte_end":10469772,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469777,"byte_end":10469795,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469800,"byte_end":10469839,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469844,"byte_end":10469902,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469907,"byte_end":10469928,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469933,"byte_end":10469954,"line_start":141,"line_end":141,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469959,"byte_end":10469973,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469978,"byte_end":10469983,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469988,"byte_end":10469995,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472256,"byte_end":10472264,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10470850,"byte_end":10470924,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10470929,"byte_end":10470932,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10470937,"byte_end":10471007,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471012,"byte_end":10471088,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471093,"byte_end":10471164,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471169,"byte_end":10471191,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471196,"byte_end":10471199,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471204,"byte_end":10471276,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471281,"byte_end":10471356,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471361,"byte_end":10471414,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471419,"byte_end":10471422,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471427,"byte_end":10471439,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471444,"byte_end":10471447,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471452,"byte_end":10471512,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471517,"byte_end":10471520,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471525,"byte_end":10471595,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471600,"byte_end":10471673,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471678,"byte_end":10471758,"line_start":191,"line_end":191,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471763,"byte_end":10471766,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471771,"byte_end":10471784,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471789,"byte_end":10471792,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471797,"byte_end":10471810,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471815,"byte_end":10471845,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471850,"byte_end":10471887,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471892,"byte_end":10471895,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471900,"byte_end":10471920,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471925,"byte_end":10471966,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10471971,"byte_end":10472032,"line_start":201,"line_end":201,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472037,"byte_end":10472089,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472094,"byte_end":10472130,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472135,"byte_end":10472181,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472186,"byte_end":10472203,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472208,"byte_end":10472220,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472225,"byte_end":10472232,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472237,"byte_end":10472244,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473234,"byte_end":10473242,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UdpSocket>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UdpSocket`] into a [`std::net::UdpSocket`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UdpSocket`] into a [`std::net::UdpSocket`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472410,"byte_end":10472478,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472483,"byte_end":10472486,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::UdpSocket`] will have nonblocking mode set as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472491,"byte_end":10472565,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472570,"byte_end":10472645,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472650,"byte_end":10472653,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472658,"byte_end":10472672,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472677,"byte_end":10472680,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472685,"byte_end":10472703,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472708,"byte_end":10472734,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472739,"byte_end":10472742,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472747,"byte_end":10472765,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472770,"byte_end":10472821,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/     let tokio_socket = tokio::net::UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472826,"byte_end":10472903,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/     let std_socket = tokio_socket.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472908,"byte_end":10472958,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/     std_socket.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10472963,"byte_end":10473006,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473011,"byte_end":10473025,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473030,"byte_end":10473035,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473040,"byte_end":10473047,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473052,"byte_end":10473055,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UdpSocket`]: UdpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473060,"byte_end":10473100,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/ [`std::net::UdpSocket`]: std::net::UdpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473105,"byte_end":10473153,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::UdpSocket::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473158,"byte_end":10473222,"line_start":235,"line_end":235,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474408,"byte_end":10474418,"line_start":273,"line_end":273,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473882,"byte_end":10473941,"line_start":256,"line_end":256,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473946,"byte_end":10473949,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473954,"byte_end":10473967,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473972,"byte_end":10473975,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473980,"byte_end":10473993,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10473998,"byte_end":10474028,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474033,"byte_end":10474070,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474075,"byte_end":10474078,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474083,"byte_end":10474103,"line_start":264,"line_end":264,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474108,"byte_end":10474149,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474154,"byte_end":10474215,"line_start":266,"line_end":266,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474220,"byte_end":10474264,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474269,"byte_end":10474310,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474315,"byte_end":10474355,"line_start":269,"line_end":269,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474360,"byte_end":10474372,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474377,"byte_end":10474384,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474389,"byte_end":10474396,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475338,"byte_end":10475345,"line_start":301,"line_end":301,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474494,"byte_end":10474568,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474573,"byte_end":10474646,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474651,"byte_end":10474662,"line_start":279,"line_end":279,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474667,"byte_end":10474670,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474675,"byte_end":10474688,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474693,"byte_end":10474696,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474701,"byte_end":10474714,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474719,"byte_end":10474749,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474754,"byte_end":10474791,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474796,"byte_end":10474799,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474804,"byte_end":10474824,"line_start":287,"line_end":287,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474829,"byte_end":10474870,"line_start":288,"line_end":288,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474875,"byte_end":10474960,"line_start":289,"line_end":289,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474965,"byte_end":10474968,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10474973,"byte_end":10475044,"line_start":291,"line_end":291,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475049,"byte_end":10475086,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475091,"byte_end":10475119,"line_start":293,"line_end":293,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475124,"byte_end":10475152,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475157,"byte_end":10475198,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475203,"byte_end":10475229,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475234,"byte_end":10475279,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475284,"byte_end":10475296,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475301,"byte_end":10475308,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475313,"byte_end":10475320,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478152,"byte_end":10478157,"line_start":379,"line_end":379,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475868,"byte_end":10475915,"line_start":320,"line_end":320,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475920,"byte_end":10475923,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10475928,"byte_end":10476001,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476006,"byte_end":10476080,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476085,"byte_end":10476123,"line_start":324,"line_end":324,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476128,"byte_end":10476131,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476136,"byte_end":10476207,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476212,"byte_end":10476275,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476280,"byte_end":10476312,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476317,"byte_end":10476320,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476325,"byte_end":10476339,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476344,"byte_end":10476347,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476352,"byte_end":10476421,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476426,"byte_end":10476448,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476453,"byte_end":10476456,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476461,"byte_end":10476474,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476479,"byte_end":10476515,"line_start":336,"line_end":336,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476520,"byte_end":10476550,"line_start":337,"line_end":337,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476555,"byte_end":10476558,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476563,"byte_end":10476581,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476586,"byte_end":10476625,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476630,"byte_end":10476692,"line_start":341,"line_end":341,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476697,"byte_end":10476745,"line_start":342,"line_end":342,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476750,"byte_end":10476753,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476758,"byte_end":10476772,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476777,"byte_end":10476862,"line_start":345,"line_end":345,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476867,"byte_end":10476870,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476875,"byte_end":10476911,"line_start":347,"line_end":347,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10476916,"byte_end":10477003,"line_start":348,"line_end":348,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477008,"byte_end":10477040,"line_start":349,"line_end":349,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477045,"byte_end":10477086,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477091,"byte_end":10477145,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477150,"byte_end":10477180,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477185,"byte_end":10477247,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477252,"byte_end":10477273,"line_start":354,"line_end":354,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477278,"byte_end":10477325,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477330,"byte_end":10477407,"line_start":356,"line_end":356,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477412,"byte_end":10477443,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477448,"byte_end":10477486,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477491,"byte_end":10477512,"line_start":359,"line_end":359,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477517,"byte_end":10477534,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477539,"byte_end":10477552,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477557,"byte_end":10477560,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477565,"byte_end":10477601,"line_start":363,"line_end":363,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477606,"byte_end":10477640,"line_start":364,"line_end":364,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477645,"byte_end":10477700,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477705,"byte_end":10477735,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477740,"byte_end":10477793,"line_start":367,"line_end":367,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477798,"byte_end":10477819,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477824,"byte_end":10477871,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477876,"byte_end":10477953,"line_start":370,"line_end":370,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477958,"byte_end":10477989,"line_start":371,"line_end":371,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10477994,"byte_end":10478032,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478037,"byte_end":10478058,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478063,"byte_end":10478080,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478085,"byte_end":10478098,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478103,"byte_end":10478112,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478117,"byte_end":10478122,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478127,"byte_end":10478134,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479759,"byte_end":10479767,"line_start":427,"line_end":427,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478314,"byte_end":10478357,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478362,"byte_end":10478365,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478370,"byte_end":10478439,"line_start":386,"line_end":386,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478444,"byte_end":10478500,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478505,"byte_end":10478508,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478513,"byte_end":10478587,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478592,"byte_end":10478657,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478662,"byte_end":10478694,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478699,"byte_end":10478702,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478707,"byte_end":10478721,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478726,"byte_end":10478729,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478734,"byte_end":10478747,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478752,"byte_end":10478782,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478787,"byte_end":10478803,"line_start":397,"line_end":397,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478808,"byte_end":10478811,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478816,"byte_end":10478834,"line_start":399,"line_end":399,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478839,"byte_end":10478878,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478883,"byte_end":10478905,"line_start":401,"line_end":401,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478910,"byte_end":10478972,"line_start":402,"line_end":402,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10478977,"byte_end":10479025,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479030,"byte_end":10479033,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479038,"byte_end":10479052,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479057,"byte_end":10479106,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479111,"byte_end":10479148,"line_start":407,"line_end":407,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479153,"byte_end":10479156,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479161,"byte_end":10479231,"line_start":409,"line_end":409,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479236,"byte_end":10479294,"line_start":410,"line_end":410,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479299,"byte_end":10479350,"line_start":411,"line_end":411,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479355,"byte_end":10479381,"line_start":412,"line_end":412,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479386,"byte_end":10479412,"line_start":413,"line_end":413,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479417,"byte_end":10479434,"line_start":414,"line_end":414,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479439,"byte_end":10479511,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479516,"byte_end":10479545,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479550,"byte_end":10479567,"line_start":417,"line_end":417,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479572,"byte_end":10479599,"line_start":418,"line_end":418,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479604,"byte_end":10479638,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479643,"byte_end":10479660,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479665,"byte_end":10479678,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479683,"byte_end":10479692,"line_start":422,"line_end":422,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479697,"byte_end":10479700,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479705,"byte_end":10479719,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479724,"byte_end":10479729,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479734,"byte_end":10479741,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480787,"byte_end":10480791,"line_start":463,"line_end":463,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479868,"byte_end":10479937,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479942,"byte_end":10479959,"line_start":433,"line_end":433,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479964,"byte_end":10479967,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10479972,"byte_end":10480044,"line_start":435,"line_end":435,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480049,"byte_end":10480106,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480111,"byte_end":10480114,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480119,"byte_end":10480156,"line_start":438,"line_end":438,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480161,"byte_end":10480164,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480169,"byte_end":10480181,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480186,"byte_end":10480189,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480194,"byte_end":10480262,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480267,"byte_end":10480301,"line_start":443,"line_end":443,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480306,"byte_end":10480309,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480314,"byte_end":10480328,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480333,"byte_end":10480336,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480341,"byte_end":10480354,"line_start":447,"line_end":447,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480359,"byte_end":10480377,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480382,"byte_end":10480412,"line_start":449,"line_end":449,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480417,"byte_end":10480420,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480425,"byte_end":10480443,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480448,"byte_end":10480487,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480492,"byte_end":10480514,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480519,"byte_end":10480581,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480586,"byte_end":10480634,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480639,"byte_end":10480642,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480647,"byte_end":10480672,"line_start":457,"line_end":457,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480677,"byte_end":10480720,"line_start":458,"line_end":458,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480725,"byte_end":10480728,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480733,"byte_end":10480747,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480752,"byte_end":10480757,"line_start":461,"line_end":461,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480762,"byte_end":10480769,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481879,"byte_end":10481888,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10480972,"byte_end":10481045,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481050,"byte_end":10481081,"line_start":471,"line_end":471,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481086,"byte_end":10481089,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481094,"byte_end":10481166,"line_start":473,"line_end":473,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481171,"byte_end":10481228,"line_start":474,"line_end":474,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481233,"byte_end":10481236,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481241,"byte_end":10481316,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481321,"byte_end":10481396,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481401,"byte_end":10481438,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481443,"byte_end":10481446,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481451,"byte_end":10481469,"line_start":480,"line_end":480,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481474,"byte_end":10481477,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481482,"byte_end":10481507,"line_start":482,"line_end":482,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481512,"byte_end":10481515,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481520,"byte_end":10481581,"line_start":484,"line_end":484,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481586,"byte_end":10481644,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481649,"byte_end":10481704,"line_start":486,"line_end":486,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481709,"byte_end":10481712,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481717,"byte_end":10481729,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481734,"byte_end":10481737,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481742,"byte_end":10481817,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481822,"byte_end":10481825,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10481830,"byte_end":10481867,"line_start":492,"line_end":492,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483632,"byte_end":10483640,"line_start":547,"line_end":547,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482067,"byte_end":10482138,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482143,"byte_end":10482157,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482162,"byte_end":10482165,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482170,"byte_end":10482241,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482246,"byte_end":10482310,"line_start":503,"line_end":503,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482315,"byte_end":10482318,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482323,"byte_end":10482336,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482341,"byte_end":10482344,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482349,"byte_end":10482421,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482426,"byte_end":10482476,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482481,"byte_end":10482526,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482531,"byte_end":10482534,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482539,"byte_end":10482553,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482558,"byte_end":10482561,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482566,"byte_end":10482579,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482584,"byte_end":10482614,"line_start":514,"line_end":514,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482619,"byte_end":10482635,"line_start":515,"line_end":515,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482640,"byte_end":10482643,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482648,"byte_end":10482666,"line_start":517,"line_end":517,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482671,"byte_end":10482710,"line_start":518,"line_end":518,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482715,"byte_end":10482743,"line_start":519,"line_end":519,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482748,"byte_end":10482810,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482815,"byte_end":10482818,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482823,"byte_end":10482851,"line_start":522,"line_end":522,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482856,"byte_end":10482904,"line_start":523,"line_end":523,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482909,"byte_end":10482912,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482917,"byte_end":10482931,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482936,"byte_end":10482985,"line_start":526,"line_end":526,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10482990,"byte_end":10483027,"line_start":527,"line_end":527,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483032,"byte_end":10483035,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483040,"byte_end":10483110,"line_start":529,"line_end":529,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483115,"byte_end":10483173,"line_start":530,"line_end":530,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483178,"byte_end":10483229,"line_start":531,"line_end":531,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483234,"byte_end":10483260,"line_start":532,"line_end":532,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483265,"byte_end":10483291,"line_start":533,"line_end":533,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483296,"byte_end":10483313,"line_start":534,"line_end":534,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483318,"byte_end":10483390,"line_start":535,"line_end":535,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483395,"byte_end":10483424,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483429,"byte_end":10483446,"line_start":537,"line_end":537,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483451,"byte_end":10483478,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483483,"byte_end":10483517,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483522,"byte_end":10483539,"line_start":540,"line_end":540,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483544,"byte_end":10483557,"line_start":541,"line_end":541,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483562,"byte_end":10483571,"line_start":542,"line_end":542,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483576,"byte_end":10483579,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483584,"byte_end":10483598,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483603,"byte_end":10483608,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483613,"byte_end":10483620,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485453,"byte_end":10485461,"line_start":601,"line_end":601,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483800,"byte_end":10483843,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483848,"byte_end":10483851,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483856,"byte_end":10483933,"line_start":555,"line_end":555,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483938,"byte_end":10483967,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483972,"byte_end":10483975,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10483980,"byte_end":10484054,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484059,"byte_end":10484124,"line_start":559,"line_end":559,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484129,"byte_end":10484161,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484166,"byte_end":10484169,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484174,"byte_end":10484188,"line_start":562,"line_end":562,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484193,"byte_end":10484196,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484201,"byte_end":10484214,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484219,"byte_end":10484249,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484254,"byte_end":10484270,"line_start":566,"line_end":566,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484275,"byte_end":10484278,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484283,"byte_end":10484301,"line_start":568,"line_end":568,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484306,"byte_end":10484345,"line_start":569,"line_end":569,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484350,"byte_end":10484378,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484383,"byte_end":10484445,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484450,"byte_end":10484498,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484503,"byte_end":10484506,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484511,"byte_end":10484525,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484530,"byte_end":10484579,"line_start":575,"line_end":575,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484584,"byte_end":10484621,"line_start":576,"line_end":576,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484626,"byte_end":10484629,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484634,"byte_end":10484706,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484711,"byte_end":10484750,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484755,"byte_end":10484791,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484796,"byte_end":10484799,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484804,"byte_end":10484874,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484879,"byte_end":10484937,"line_start":583,"line_end":583,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484942,"byte_end":10484987,"line_start":584,"line_end":584,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10484992,"byte_end":10485018,"line_start":585,"line_end":585,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485023,"byte_end":10485075,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485080,"byte_end":10485106,"line_start":587,"line_end":587,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485111,"byte_end":10485128,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485133,"byte_end":10485205,"line_start":589,"line_end":589,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485210,"byte_end":10485239,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485244,"byte_end":10485261,"line_start":591,"line_end":591,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485266,"byte_end":10485293,"line_start":592,"line_end":592,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485298,"byte_end":10485332,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485337,"byte_end":10485354,"line_start":594,"line_end":594,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485359,"byte_end":10485372,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485377,"byte_end":10485386,"line_start":596,"line_end":596,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485391,"byte_end":10485394,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485399,"byte_end":10485413,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485418,"byte_end":10485423,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485428,"byte_end":10485435,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486674,"byte_end":10486678,"line_start":636,"line_end":636,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485562,"byte_end":10485638,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485643,"byte_end":10485718,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485723,"byte_end":10485726,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485731,"byte_end":10485804,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485809,"byte_end":10485883,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485888,"byte_end":10485939,"line_start":611,"line_end":611,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485944,"byte_end":10485947,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10485952,"byte_end":10486024,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486029,"byte_end":10486086,"line_start":614,"line_end":614,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486091,"byte_end":10486094,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486099,"byte_end":10486136,"line_start":616,"line_end":616,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486141,"byte_end":10486144,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486149,"byte_end":10486162,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486167,"byte_end":10486197,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486202,"byte_end":10486218,"line_start":620,"line_end":620,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486223,"byte_end":10486226,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486231,"byte_end":10486249,"line_start":622,"line_end":622,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486254,"byte_end":10486293,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486298,"byte_end":10486320,"line_start":624,"line_end":624,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486325,"byte_end":10486387,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486392,"byte_end":10486440,"line_start":626,"line_end":626,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486445,"byte_end":10486448,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486453,"byte_end":10486487,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486492,"byte_end":10486537,"line_start":629,"line_end":629,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486542,"byte_end":10486545,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486550,"byte_end":10486607,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486612,"byte_end":10486615,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486620,"byte_end":10486634,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486639,"byte_end":10486644,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486649,"byte_end":10486656,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487803,"byte_end":10487812,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486863,"byte_end":10486942,"line_start":643,"line_end":643,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486947,"byte_end":10486986,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486991,"byte_end":10486994,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10486999,"byte_end":10487083,"line_start":646,"line_end":646,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487088,"byte_end":10487144,"line_start":647,"line_end":647,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487149,"byte_end":10487152,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487157,"byte_end":10487241,"line_start":649,"line_end":649,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487246,"byte_end":10487328,"line_start":650,"line_end":650,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487333,"byte_end":10487354,"line_start":651,"line_end":651,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487359,"byte_end":10487362,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487367,"byte_end":10487385,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487390,"byte_end":10487393,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487398,"byte_end":10487423,"line_start":655,"line_end":655,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487428,"byte_end":10487431,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487436,"byte_end":10487492,"line_start":657,"line_end":657,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487497,"byte_end":10487568,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487573,"byte_end":10487628,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487633,"byte_end":10487636,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487641,"byte_end":10487653,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487658,"byte_end":10487661,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487666,"byte_end":10487741,"line_start":663,"line_end":663,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487746,"byte_end":10487749,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10487754,"byte_end":10487791,"line_start":665,"line_end":665,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490233,"byte_end":10490241,"line_start":734,"line_end":734,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488406,"byte_end":10488480,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488485,"byte_end":10488556,"line_start":685,"line_end":685,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488561,"byte_end":10488576,"line_start":686,"line_end":686,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488581,"byte_end":10488584,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488589,"byte_end":10488665,"line_start":688,"line_end":688,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488670,"byte_end":10488739,"line_start":689,"line_end":689,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488744,"byte_end":10488795,"line_start":690,"line_end":690,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488800,"byte_end":10488803,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488808,"byte_end":10488878,"line_start":692,"line_end":692,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488883,"byte_end":10488947,"line_start":693,"line_end":693,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488952,"byte_end":10488955,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488960,"byte_end":10488974,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488979,"byte_end":10488982,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10488987,"byte_end":10489000,"line_start":697,"line_end":697,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489005,"byte_end":10489035,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489040,"byte_end":10489056,"line_start":699,"line_end":699,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489061,"byte_end":10489064,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489069,"byte_end":10489087,"line_start":701,"line_end":701,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489092,"byte_end":10489131,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489136,"byte_end":10489164,"line_start":703,"line_end":703,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489169,"byte_end":10489231,"line_start":704,"line_end":704,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489236,"byte_end":10489284,"line_start":705,"line_end":705,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489289,"byte_end":10489292,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489297,"byte_end":10489311,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489316,"byte_end":10489365,"line_start":708,"line_end":708,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489370,"byte_end":10489407,"line_start":709,"line_end":709,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489412,"byte_end":10489415,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489420,"byte_end":10489492,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489497,"byte_end":10489536,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489541,"byte_end":10489577,"line_start":713,"line_end":713,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489582,"byte_end":10489585,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489590,"byte_end":10489660,"line_start":715,"line_end":715,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489665,"byte_end":10489723,"line_start":716,"line_end":716,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489728,"byte_end":10489773,"line_start":717,"line_end":717,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489778,"byte_end":10489804,"line_start":718,"line_end":718,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489809,"byte_end":10489861,"line_start":719,"line_end":719,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489866,"byte_end":10489892,"line_start":720,"line_end":720,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489897,"byte_end":10489914,"line_start":721,"line_end":721,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489919,"byte_end":10489991,"line_start":722,"line_end":722,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10489996,"byte_end":10490025,"line_start":723,"line_end":723,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490030,"byte_end":10490047,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490052,"byte_end":10490079,"line_start":725,"line_end":725,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490084,"byte_end":10490118,"line_start":726,"line_end":726,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490123,"byte_end":10490140,"line_start":727,"line_end":727,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490145,"byte_end":10490158,"line_start":728,"line_end":728,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490163,"byte_end":10490172,"line_start":729,"line_end":729,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490177,"byte_end":10490180,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490185,"byte_end":10490199,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490204,"byte_end":10490209,"line_start":732,"line_end":732,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10490214,"byte_end":10490221,"line_start":733,"line_end":733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10492320,"byte_end":10492332,"line_start":788,"line_end":788,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UdpSocket>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10494760,"byte_end":10494777,"line_start":852,"line_end":852,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UdpSocket>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496464,"byte_end":10496471,"line_start":901,"line_end":901,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495419,"byte_end":10495493,"line_start":871,"line_end":871,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495498,"byte_end":10495526,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495531,"byte_end":10495534,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495539,"byte_end":10495614,"line_start":874,"line_end":874,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495619,"byte_end":10495659,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495664,"byte_end":10495667,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495672,"byte_end":10495744,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495749,"byte_end":10495812,"line_start":878,"line_end":878,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495817,"byte_end":10495820,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495825,"byte_end":10495899,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495904,"byte_end":10495955,"line_start":881,"line_end":881,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495960,"byte_end":10495963,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10495968,"byte_end":10496016,"line_start":883,"line_end":883,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496021,"byte_end":10496024,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496029,"byte_end":10496042,"line_start":885,"line_end":885,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496047,"byte_end":10496050,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496055,"byte_end":10496068,"line_start":887,"line_end":887,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496073,"byte_end":10496103,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496108,"byte_end":10496124,"line_start":889,"line_end":889,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496129,"byte_end":10496132,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496137,"byte_end":10496155,"line_start":891,"line_end":891,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496160,"byte_end":10496199,"line_start":892,"line_end":892,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496204,"byte_end":10496266,"line_start":893,"line_end":893,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496271,"byte_end":10496345,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496350,"byte_end":10496353,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496358,"byte_end":10496397,"line_start":896,"line_end":896,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496402,"byte_end":10496405,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496410,"byte_end":10496424,"line_start":898,"line_end":898,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496429,"byte_end":10496434,"line_start":899,"line_end":899,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496439,"byte_end":10496446,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497522,"byte_end":10497534,"line_start":930,"line_end":930,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496865,"byte_end":10496924,"line_start":913,"line_end":913,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496929,"byte_end":10496932,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10496937,"byte_end":10497021,"line_start":915,"line_end":915,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497026,"byte_end":10497108,"line_start":916,"line_end":916,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497113,"byte_end":10497134,"line_start":917,"line_end":917,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497139,"byte_end":10497142,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497147,"byte_end":10497165,"line_start":919,"line_end":919,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497170,"byte_end":10497173,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497178,"byte_end":10497203,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497208,"byte_end":10497211,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497216,"byte_end":10497273,"line_start":923,"line_end":923,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497278,"byte_end":10497337,"line_start":924,"line_end":924,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497342,"byte_end":10497397,"line_start":925,"line_end":925,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497402,"byte_end":10497405,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497410,"byte_end":10497422,"line_start":927,"line_end":927,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497427,"byte_end":10497430,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497435,"byte_end":10497510,"line_start":929,"line_end":929,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499334,"byte_end":10499345,"line_start":988,"line_end":988,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497783,"byte_end":10497858,"line_start":941,"line_end":941,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497863,"byte_end":10497903,"line_start":942,"line_end":942,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497908,"byte_end":10497911,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497916,"byte_end":10497970,"line_start":944,"line_end":944,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497975,"byte_end":10497978,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10497983,"byte_end":10497996,"line_start":946,"line_end":946,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498001,"byte_end":10498004,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498009,"byte_end":10498061,"line_start":948,"line_end":948,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498066,"byte_end":10498069,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498074,"byte_end":10498138,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498143,"byte_end":10498217,"line_start":951,"line_end":951,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498222,"byte_end":10498290,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498295,"byte_end":10498298,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498303,"byte_end":10498364,"line_start":954,"line_end":954,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498369,"byte_end":10498372,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498377,"byte_end":10498390,"line_start":956,"line_end":956,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498395,"byte_end":10498398,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498403,"byte_end":10498416,"line_start":958,"line_end":958,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498421,"byte_end":10498451,"line_start":959,"line_end":959,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498456,"byte_end":10498482,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498487,"byte_end":10498503,"line_start":961,"line_end":961,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498508,"byte_end":10498511,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498516,"byte_end":10498534,"line_start":963,"line_end":963,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498539,"byte_end":10498590,"line_start":964,"line_end":964,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498595,"byte_end":10498657,"line_start":965,"line_end":965,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498662,"byte_end":10498665,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498670,"byte_end":10498714,"line_start":967,"line_end":967,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498719,"byte_end":10498722,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498727,"byte_end":10498741,"line_start":969,"line_end":969,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498746,"byte_end":10498783,"line_start":970,"line_end":970,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498788,"byte_end":10498791,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498796,"byte_end":10498860,"line_start":972,"line_end":972,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498865,"byte_end":10498894,"line_start":973,"line_end":973,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498899,"byte_end":10498951,"line_start":974,"line_end":974,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498956,"byte_end":10498982,"line_start":975,"line_end":975,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10498987,"byte_end":10499004,"line_start":976,"line_end":976,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499009,"byte_end":10499081,"line_start":977,"line_end":977,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499086,"byte_end":10499133,"line_start":978,"line_end":978,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499138,"byte_end":10499167,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499172,"byte_end":10499189,"line_start":980,"line_end":980,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499194,"byte_end":10499241,"line_start":981,"line_end":981,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499246,"byte_end":10499259,"line_start":982,"line_end":982,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499264,"byte_end":10499273,"line_start":983,"line_end":983,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499278,"byte_end":10499281,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499286,"byte_end":10499300,"line_start":985,"line_end":985,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499305,"byte_end":10499310,"line_start":986,"line_end":986,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499315,"byte_end":10499322,"line_start":987,"line_end":987,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500617,"byte_end":10500626,"line_start":1026,"line_end":1026,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499769,"byte_end":10499842,"line_start":1001,"line_end":1001,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499847,"byte_end":10499891,"line_start":1002,"line_end":1002,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499896,"byte_end":10499899,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499904,"byte_end":10499977,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10499982,"byte_end":10500056,"line_start":1005,"line_end":1005,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500061,"byte_end":10500112,"line_start":1006,"line_end":1006,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500117,"byte_end":10500120,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500125,"byte_end":10500138,"line_start":1008,"line_end":1008,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500143,"byte_end":10500146,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500151,"byte_end":10500164,"line_start":1010,"line_end":1010,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500169,"byte_end":10500199,"line_start":1011,"line_end":1011,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500204,"byte_end":10500220,"line_start":1012,"line_end":1012,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500225,"byte_end":10500228,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500233,"byte_end":10500251,"line_start":1014,"line_end":1014,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500256,"byte_end":10500295,"line_start":1015,"line_end":1015,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500300,"byte_end":10500362,"line_start":1016,"line_end":1016,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500367,"byte_end":10500370,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500375,"byte_end":10500411,"line_start":1018,"line_end":1018,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500416,"byte_end":10500476,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500481,"byte_end":10500484,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500489,"byte_end":10500550,"line_start":1021,"line_end":1021,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500555,"byte_end":10500558,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500563,"byte_end":10500577,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500582,"byte_end":10500587,"line_start":1024,"line_end":1024,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500592,"byte_end":10500599,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501514,"byte_end":10501528,"line_start":1050,"line_end":1050,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500830,"byte_end":10500886,"line_start":1033,"line_end":1033,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500891,"byte_end":10500894,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500899,"byte_end":10500983,"line_start":1035,"line_end":1035,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10500988,"byte_end":10501070,"line_start":1036,"line_end":1036,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501075,"byte_end":10501096,"line_start":1037,"line_end":1037,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501101,"byte_end":10501104,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501109,"byte_end":10501127,"line_start":1039,"line_end":1039,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501132,"byte_end":10501135,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501140,"byte_end":10501165,"line_start":1041,"line_end":1041,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501170,"byte_end":10501173,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501178,"byte_end":10501234,"line_start":1043,"line_end":1043,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501239,"byte_end":10501329,"line_start":1044,"line_end":1044,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501334,"byte_end":10501389,"line_start":1045,"line_end":1045,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501394,"byte_end":10501397,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501402,"byte_end":10501414,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501419,"byte_end":10501422,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10501427,"byte_end":10501502,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3147},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503922,"byte_end":10503935,"line_start":1120,"line_end":1120,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502176,"byte_end":10502247,"line_start":1072,"line_end":1072,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502252,"byte_end":10502304,"line_start":1073,"line_end":1073,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502309,"byte_end":10502312,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502317,"byte_end":10502393,"line_start":1075,"line_end":1075,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502398,"byte_end":10502467,"line_start":1076,"line_end":1076,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502472,"byte_end":10502523,"line_start":1077,"line_end":1077,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502528,"byte_end":10502531,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502536,"byte_end":10502606,"line_start":1079,"line_end":1079,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502611,"byte_end":10502675,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502680,"byte_end":10502683,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502688,"byte_end":10502702,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502707,"byte_end":10502710,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502715,"byte_end":10502728,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502733,"byte_end":10502763,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502768,"byte_end":10502784,"line_start":1086,"line_end":1086,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502789,"byte_end":10502792,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502797,"byte_end":10502815,"line_start":1088,"line_end":1088,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502820,"byte_end":10502859,"line_start":1089,"line_end":1089,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502864,"byte_end":10502892,"line_start":1090,"line_end":1090,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502897,"byte_end":10502959,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502964,"byte_end":10502967,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502972,"byte_end":10502986,"line_start":1093,"line_end":1093,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10502991,"byte_end":10503040,"line_start":1094,"line_end":1094,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503045,"byte_end":10503082,"line_start":1095,"line_end":1095,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503087,"byte_end":10503090,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503095,"byte_end":10503167,"line_start":1097,"line_end":1097,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503172,"byte_end":10503211,"line_start":1098,"line_end":1098,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503216,"byte_end":10503252,"line_start":1099,"line_end":1099,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503257,"byte_end":10503260,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503265,"byte_end":10503335,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503340,"byte_end":10503398,"line_start":1102,"line_end":1102,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503403,"byte_end":10503453,"line_start":1103,"line_end":1103,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503458,"byte_end":10503493,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503498,"byte_end":10503550,"line_start":1105,"line_end":1105,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503555,"byte_end":10503581,"line_start":1106,"line_end":1106,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503586,"byte_end":10503603,"line_start":1107,"line_end":1107,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503608,"byte_end":10503680,"line_start":1108,"line_end":1108,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503685,"byte_end":10503714,"line_start":1109,"line_end":1109,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503719,"byte_end":10503736,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503741,"byte_end":10503768,"line_start":1111,"line_end":1111,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503773,"byte_end":10503807,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503812,"byte_end":10503829,"line_start":1113,"line_end":1113,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503834,"byte_end":10503847,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503852,"byte_end":10503861,"line_start":1115,"line_end":1115,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503866,"byte_end":10503869,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503874,"byte_end":10503888,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503893,"byte_end":10503898,"line_start":1118,"line_end":1118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10503903,"byte_end":10503910,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505195,"byte_end":10505204,"line_start":1156,"line_end":1156,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504118,"byte_end":10504194,"line_start":1126,"line_end":1126,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504199,"byte_end":10504275,"line_start":1127,"line_end":1127,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504280,"byte_end":10504298,"line_start":1128,"line_end":1128,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504303,"byte_end":10504306,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504311,"byte_end":10504322,"line_start":1130,"line_end":1130,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504327,"byte_end":10504330,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504335,"byte_end":10504410,"line_start":1132,"line_end":1132,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504415,"byte_end":10504493,"line_start":1133,"line_end":1133,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504498,"byte_end":10504546,"line_start":1134,"line_end":1134,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504551,"byte_end":10504618,"line_start":1135,"line_end":1135,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504623,"byte_end":10504691,"line_start":1136,"line_end":1136,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504696,"byte_end":10504699,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504704,"byte_end":10504718,"line_start":1138,"line_end":1138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504723,"byte_end":10504726,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504731,"byte_end":10504744,"line_start":1140,"line_end":1140,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504749,"byte_end":10504779,"line_start":1141,"line_end":1141,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504784,"byte_end":10504800,"line_start":1142,"line_end":1142,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504805,"byte_end":10504808,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504813,"byte_end":10504831,"line_start":1144,"line_end":1144,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504836,"byte_end":10504875,"line_start":1145,"line_end":1145,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504880,"byte_end":10504942,"line_start":1146,"line_end":1146,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504947,"byte_end":10504950,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504955,"byte_end":10504991,"line_start":1148,"line_end":1148,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10504996,"byte_end":10505056,"line_start":1149,"line_end":1149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505061,"byte_end":10505064,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505069,"byte_end":10505128,"line_start":1151,"line_end":1151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505133,"byte_end":10505136,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505141,"byte_end":10505155,"line_start":1153,"line_end":1153,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505160,"byte_end":10505165,"line_start":1154,"line_end":1154,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505170,"byte_end":10505177,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506553,"byte_end":10506567,"line_start":1189,"line_end":1189,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505408,"byte_end":10505484,"line_start":1163,"line_end":1163,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505489,"byte_end":10505538,"line_start":1164,"line_end":1164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505543,"byte_end":10505546,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505551,"byte_end":10505562,"line_start":1166,"line_end":1166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505567,"byte_end":10505570,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505575,"byte_end":10505659,"line_start":1168,"line_end":1168,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505664,"byte_end":10505746,"line_start":1169,"line_end":1169,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505751,"byte_end":10505771,"line_start":1170,"line_end":1170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505776,"byte_end":10505779,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505784,"byte_end":10505859,"line_start":1172,"line_end":1172,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505864,"byte_end":10505937,"line_start":1173,"line_end":1173,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505942,"byte_end":10505990,"line_start":1174,"line_end":1174,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10505995,"byte_end":10506062,"line_start":1175,"line_end":1175,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506067,"byte_end":10506135,"line_start":1176,"line_end":1176,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506140,"byte_end":10506143,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506148,"byte_end":10506166,"line_start":1178,"line_end":1178,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506171,"byte_end":10506174,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506179,"byte_end":10506204,"line_start":1180,"line_end":1180,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506209,"byte_end":10506212,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506217,"byte_end":10506273,"line_start":1182,"line_end":1182,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506278,"byte_end":10506368,"line_start":1183,"line_end":1183,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506373,"byte_end":10506428,"line_start":1184,"line_end":1184,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506433,"byte_end":10506436,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506441,"byte_end":10506453,"line_start":1186,"line_end":1186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506458,"byte_end":10506461,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10506466,"byte_end":10506541,"line_start":1188,"line_end":1188,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507432,"byte_end":10507441,"line_start":1216,"line_end":1216,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507215,"byte_end":10507279,"line_start":1211,"line_end":1211,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507284,"byte_end":10507287,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507292,"byte_end":10507358,"line_start":1213,"line_end":1213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507363,"byte_end":10507366,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507371,"byte_end":10507420,"line_start":1215,"line_end":1215,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507687,"byte_end":10507700,"line_start":1224,"line_end":1224,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507510,"byte_end":10507574,"line_start":1220,"line_end":1220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507579,"byte_end":10507582,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507587,"byte_end":10507658,"line_start":1222,"line_end":1222,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507663,"byte_end":10507675,"line_start":1223,"line_end":1223,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508029,"byte_end":10508046,"line_start":1233,"line_end":1233,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507783,"byte_end":10507852,"line_start":1228,"line_end":1228,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507857,"byte_end":10507860,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507865,"byte_end":10507939,"line_start":1230,"line_end":1230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507944,"byte_end":10507947,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10507952,"byte_end":10508017,"line_start":1232,"line_end":1232,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508376,"byte_end":10508397,"line_start":1244,"line_end":1244,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508123,"byte_end":10508192,"line_start":1237,"line_end":1237,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508197,"byte_end":10508200,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508205,"byte_end":10508279,"line_start":1239,"line_end":1239,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508284,"byte_end":10508287,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508292,"byte_end":10508302,"line_start":1241,"line_end":1241,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508307,"byte_end":10508310,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508315,"byte_end":10508364,"line_start":1243,"line_end":1243,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508730,"byte_end":10508746,"line_start":1253,"line_end":1253,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508488,"byte_end":10508556,"line_start":1248,"line_end":1248,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508561,"byte_end":10508564,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508569,"byte_end":10508642,"line_start":1250,"line_end":1250,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508647,"byte_end":10508650,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508655,"byte_end":10508718,"line_start":1252,"line_end":1252,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509215,"byte_end":10509235,"line_start":1266,"line_end":1266,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508821,"byte_end":10508889,"line_start":1257,"line_end":1257,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508894,"byte_end":10508897,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508902,"byte_end":10508972,"line_start":1259,"line_end":1259,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10508977,"byte_end":10509051,"line_start":1260,"line_end":1260,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509056,"byte_end":10509118,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509123,"byte_end":10509126,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509131,"byte_end":10509141,"line_start":1263,"line_end":1263,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509146,"byte_end":10509149,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509154,"byte_end":10509203,"line_start":1265,"line_end":1265,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509574,"byte_end":10509591,"line_start":1275,"line_end":1275,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509326,"byte_end":10509397,"line_start":1270,"line_end":1270,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509402,"byte_end":10509405,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509410,"byte_end":10509484,"line_start":1272,"line_end":1272,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509489,"byte_end":10509492,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509497,"byte_end":10509562,"line_start":1274,"line_end":1274,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509925,"byte_end":10509946,"line_start":1286,"line_end":1286,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509668,"byte_end":10509739,"line_start":1279,"line_end":1279,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509744,"byte_end":10509747,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509752,"byte_end":10509828,"line_start":1281,"line_end":1281,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509833,"byte_end":10509836,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509841,"byte_end":10509851,"line_start":1283,"line_end":1283,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509856,"byte_end":10509859,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10509864,"byte_end":10509913,"line_start":1285,"line_end":1285,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510543,"byte_end":10510546,"line_start":1309,"line_end":1309,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510037,"byte_end":10510095,"line_start":1290,"line_end":1290,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510100,"byte_end":10510103,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510108,"byte_end":10510168,"line_start":1292,"line_end":1292,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510173,"byte_end":10510176,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510181,"byte_end":10510218,"line_start":1294,"line_end":1294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510223,"byte_end":10510226,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510231,"byte_end":10510245,"line_start":1296,"line_end":1296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510250,"byte_end":10510253,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510258,"byte_end":10510271,"line_start":1298,"line_end":1298,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510276,"byte_end":10510306,"line_start":1299,"line_end":1299,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510311,"byte_end":10510329,"line_start":1300,"line_end":1300,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510334,"byte_end":10510337,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510342,"byte_end":10510382,"line_start":1302,"line_end":1302,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510387,"byte_end":10510443,"line_start":1303,"line_end":1303,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510448,"byte_end":10510451,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510456,"byte_end":10510490,"line_start":1305,"line_end":1305,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510495,"byte_end":10510507,"line_start":1306,"line_end":1306,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510512,"byte_end":10510519,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510524,"byte_end":10510531,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511094,"byte_end":10511101,"line_start":1331,"line_end":1331,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510608,"byte_end":10510666,"line_start":1313,"line_end":1313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510671,"byte_end":10510674,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510679,"byte_end":10510755,"line_start":1315,"line_end":1315,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510760,"byte_end":10510781,"line_start":1316,"line_end":1316,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510786,"byte_end":10510789,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510794,"byte_end":10510808,"line_start":1318,"line_end":1318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510813,"byte_end":10510816,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510821,"byte_end":10510834,"line_start":1320,"line_end":1320,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510839,"byte_end":10510869,"line_start":1321,"line_end":1321,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510874,"byte_end":10510892,"line_start":1322,"line_end":1322,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510897,"byte_end":10510900,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510905,"byte_end":10510945,"line_start":1324,"line_end":1324,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10510950,"byte_end":10511006,"line_start":1325,"line_end":1325,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511011,"byte_end":10511033,"line_start":1326,"line_end":1326,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511038,"byte_end":10511041,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511046,"byte_end":10511058,"line_start":1328,"line_end":1328,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511063,"byte_end":10511070,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511075,"byte_end":10511082,"line_start":1330,"line_end":1330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511609,"byte_end":10511626,"line_start":1342,"line_end":1342,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511179,"byte_end":10511237,"line_start":1335,"line_end":1335,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511242,"byte_end":10511245,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511250,"byte_end":10511324,"line_start":1337,"line_end":1337,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511329,"byte_end":10511402,"line_start":1338,"line_end":1338,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511407,"byte_end":10511479,"line_start":1339,"line_end":1339,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511484,"byte_end":10511554,"line_start":1340,"line_end":1340,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511559,"byte_end":10511597,"line_start":1341,"line_end":1341,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512081,"byte_end":10512098,"line_start":1351,"line_end":1351,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511765,"byte_end":10511825,"line_start":1346,"line_end":1346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511830,"byte_end":10511833,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511838,"byte_end":10511912,"line_start":1348,"line_end":1348,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511917,"byte_end":10511990,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10511995,"byte_end":10512069,"line_start":1350,"line_end":1350,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512455,"byte_end":10512473,"line_start":1360,"line_end":1360,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512231,"byte_end":10512290,"line_start":1355,"line_end":1355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512295,"byte_end":10512298,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512303,"byte_end":10512373,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512378,"byte_end":10512381,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512386,"byte_end":10512443,"line_start":1359,"line_end":1359,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512839,"byte_end":10512857,"line_start":1369,"line_end":1369,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512613,"byte_end":10512674,"line_start":1364,"line_end":1364,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512679,"byte_end":10512682,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512687,"byte_end":10512757,"line_start":1366,"line_end":1366,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512762,"byte_end":10512765,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512770,"byte_end":10512827,"line_start":1368,"line_end":1368,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513494,"byte_end":10513504,"line_start":1392,"line_end":1392,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10512991,"byte_end":10513038,"line_start":1373,"line_end":1373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513043,"byte_end":10513046,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513051,"byte_end":10513065,"line_start":1375,"line_end":1375,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513070,"byte_end":10513077,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513082,"byte_end":10513112,"line_start":1377,"line_end":1377,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513117,"byte_end":10513133,"line_start":1378,"line_end":1378,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513138,"byte_end":10513141,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513146,"byte_end":10513164,"line_start":1380,"line_end":1380,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513169,"byte_end":10513208,"line_start":1381,"line_end":1381,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513213,"byte_end":10513239,"line_start":1382,"line_end":1382,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513244,"byte_end":10513304,"line_start":1383,"line_end":1383,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513309,"byte_end":10513312,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513317,"byte_end":10513369,"line_start":1385,"line_end":1385,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513374,"byte_end":10513419,"line_start":1386,"line_end":1386,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513424,"byte_end":10513433,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513438,"byte_end":10513441,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513446,"byte_end":10513460,"line_start":1389,"line_end":1389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513465,"byte_end":10513470,"line_start":1390,"line_end":1390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513475,"byte_end":10513482,"line_start":1391,"line_end":1391,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3242},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3330},{"krate":0,"index":3371},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":12140},{"krate":0,"index":3443},{"krate":0,"index":3454},{"krate":0,"index":12146},{"krate":0,"index":3455},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3575}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514507,"byte_end":10514543,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":3243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":3244}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/mod.rs","byte_start":10514868,"byte_end":10514892,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10517946,"byte_end":10517958,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3581}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520373,"byte_end":10520378,"line_start":160,"line_end":160,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixDatagram>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518043,"byte_end":10518090,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518095,"byte_end":10518098,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518103,"byte_end":10518176,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518181,"byte_end":10518255,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518260,"byte_end":10518298,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518303,"byte_end":10518306,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518311,"byte_end":10518382,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518387,"byte_end":10518450,"line_start":106,"line_end":106,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518455,"byte_end":10518487,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518492,"byte_end":10518495,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518500,"byte_end":10518514,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518519,"byte_end":10518522,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518527,"byte_end":10518596,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518601,"byte_end":10518623,"line_start":112,"line_end":112,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518628,"byte_end":10518631,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518636,"byte_end":10518649,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518654,"byte_end":10518682,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518687,"byte_end":10518720,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518725,"byte_end":10518741,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518746,"byte_end":10518749,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518754,"byte_end":10518772,"line_start":119,"line_end":119,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518777,"byte_end":10518816,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518821,"byte_end":10518868,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518873,"byte_end":10518930,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518935,"byte_end":10518992,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518997,"byte_end":10519052,"line_start":124,"line_end":124,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519057,"byte_end":10519095,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519100,"byte_end":10519103,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519108,"byte_end":10519122,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519127,"byte_end":10519212,"line_start":128,"line_end":128,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519217,"byte_end":10519220,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519225,"byte_end":10519261,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519266,"byte_end":10519307,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519312,"byte_end":10519366,"line_start":132,"line_end":132,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519371,"byte_end":10519401,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519406,"byte_end":10519468,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519473,"byte_end":10519494,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519499,"byte_end":10519546,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519551,"byte_end":10519628,"line_start":137,"line_end":137,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519633,"byte_end":10519664,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519669,"byte_end":10519707,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519712,"byte_end":10519733,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519738,"byte_end":10519755,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519760,"byte_end":10519773,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519778,"byte_end":10519781,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519786,"byte_end":10519822,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519827,"byte_end":10519861,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519866,"byte_end":10519921,"line_start":146,"line_end":146,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519926,"byte_end":10519956,"line_start":147,"line_end":147,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10519961,"byte_end":10520014,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520019,"byte_end":10520040,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520045,"byte_end":10520092,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520097,"byte_end":10520174,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520179,"byte_end":10520210,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520215,"byte_end":10520253,"line_start":153,"line_end":153,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520258,"byte_end":10520279,"line_start":154,"line_end":154,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520284,"byte_end":10520301,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520306,"byte_end":10520319,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520324,"byte_end":10520333,"line_start":157,"line_end":157,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520338,"byte_end":10520343,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520348,"byte_end":10520355,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522115,"byte_end":10522123,"line_start":210,"line_end":210,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixDatagram>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520535,"byte_end":10520578,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520583,"byte_end":10520586,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520591,"byte_end":10520660,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520665,"byte_end":10520721,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520726,"byte_end":10520729,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520734,"byte_end":10520808,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520813,"byte_end":10520878,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520883,"byte_end":10520915,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520920,"byte_end":10520923,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520928,"byte_end":10520942,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520947,"byte_end":10520950,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520955,"byte_end":10520968,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10520973,"byte_end":10521006,"line_start":177,"line_end":177,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521011,"byte_end":10521027,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521032,"byte_end":10521035,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521040,"byte_end":10521058,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521063,"byte_end":10521102,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521107,"byte_end":10521154,"line_start":182,"line_end":182,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521159,"byte_end":10521216,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521221,"byte_end":10521278,"line_start":184,"line_end":184,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521283,"byte_end":10521338,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521343,"byte_end":10521381,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521386,"byte_end":10521389,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521394,"byte_end":10521408,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521413,"byte_end":10521462,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521467,"byte_end":10521504,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521509,"byte_end":10521512,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521517,"byte_end":10521587,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521592,"byte_end":10521650,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521655,"byte_end":10521706,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521711,"byte_end":10521737,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521742,"byte_end":10521768,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521773,"byte_end":10521790,"line_start":197,"line_end":197,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521795,"byte_end":10521867,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521872,"byte_end":10521901,"line_start":199,"line_end":199,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521906,"byte_end":10521923,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521928,"byte_end":10521955,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521960,"byte_end":10521994,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10521999,"byte_end":10522016,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522021,"byte_end":10522034,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522039,"byte_end":10522048,"line_start":205,"line_end":205,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522053,"byte_end":10522056,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522061,"byte_end":10522075,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522080,"byte_end":10522085,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522090,"byte_end":10522097,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524039,"byte_end":10524047,"line_start":266,"line_end":266,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixDatagram>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522224,"byte_end":10522267,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522272,"byte_end":10522275,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522280,"byte_end":10522357,"line_start":217,"line_end":217,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522362,"byte_end":10522391,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522396,"byte_end":10522399,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522404,"byte_end":10522478,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522483,"byte_end":10522548,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522553,"byte_end":10522585,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522590,"byte_end":10522593,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522598,"byte_end":10522612,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522617,"byte_end":10522620,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522625,"byte_end":10522638,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522643,"byte_end":10522676,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522681,"byte_end":10522697,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522702,"byte_end":10522705,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522710,"byte_end":10522728,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522733,"byte_end":10522772,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522777,"byte_end":10522805,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522810,"byte_end":10522857,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522862,"byte_end":10522919,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522924,"byte_end":10522981,"line_start":235,"line_end":235,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10522986,"byte_end":10523041,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523046,"byte_end":10523084,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523089,"byte_end":10523092,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523097,"byte_end":10523111,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523116,"byte_end":10523165,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523170,"byte_end":10523207,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523212,"byte_end":10523215,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523220,"byte_end":10523292,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523297,"byte_end":10523336,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523341,"byte_end":10523377,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523382,"byte_end":10523385,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523390,"byte_end":10523460,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523465,"byte_end":10523523,"line_start":248,"line_end":248,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523528,"byte_end":10523573,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523578,"byte_end":10523604,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523609,"byte_end":10523661,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523666,"byte_end":10523692,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523697,"byte_end":10523714,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523719,"byte_end":10523791,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523796,"byte_end":10523825,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523830,"byte_end":10523847,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523852,"byte_end":10523879,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523884,"byte_end":10523918,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523923,"byte_end":10523940,"line_start":259,"line_end":259,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523945,"byte_end":10523958,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523963,"byte_end":10523972,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523977,"byte_end":10523980,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10523985,"byte_end":10523999,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524004,"byte_end":10524009,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524014,"byte_end":10524021,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524820,"byte_end":10524824,"line_start":292,"line_end":292,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524148,"byte_end":10524209,"line_start":271,"line_end":271,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524214,"byte_end":10524217,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524222,"byte_end":10524236,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524241,"byte_end":10524248,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524253,"byte_end":10524281,"line_start":275,"line_end":275,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524286,"byte_end":10524306,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524311,"byte_end":10524364,"line_start":277,"line_end":277,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524369,"byte_end":10524402,"line_start":278,"line_end":278,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524407,"byte_end":10524433,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524438,"byte_end":10524441,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524446,"byte_end":10524500,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524505,"byte_end":10524564,"line_start":282,"line_end":282,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524569,"byte_end":10524594,"line_start":283,"line_end":283,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524599,"byte_end":10524602,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524607,"byte_end":10524650,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524655,"byte_end":10524703,"line_start":286,"line_end":286,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524708,"byte_end":10524759,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524764,"byte_end":10524767,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524772,"byte_end":10524784,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524789,"byte_end":10524796,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10524801,"byte_end":10524808,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525894,"byte_end":10525898,"line_start":329,"line_end":329,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525008,"byte_end":10525057,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525062,"byte_end":10525065,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525070,"byte_end":10525141,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525146,"byte_end":10525199,"line_start":303,"line_end":303,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525204,"byte_end":10525207,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525212,"byte_end":10525226,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525231,"byte_end":10525238,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525243,"byte_end":10525271,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525276,"byte_end":10525296,"line_start":308,"line_end":308,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525301,"byte_end":10525354,"line_start":309,"line_end":309,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525359,"byte_end":10525392,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525397,"byte_end":10525400,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525405,"byte_end":10525438,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525443,"byte_end":10525490,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525495,"byte_end":10525498,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525503,"byte_end":10525560,"line_start":315,"line_end":315,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525565,"byte_end":10525593,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hail eris\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525598,"byte_end":10525627,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525632,"byte_end":10525661,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525666,"byte_end":10525669,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525674,"byte_end":10525707,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525712,"byte_end":10525756,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525761,"byte_end":10525764,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525769,"byte_end":10525799,"line_start":323,"line_end":323,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525804,"byte_end":10525833,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525838,"byte_end":10525841,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525846,"byte_end":10525858,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525863,"byte_end":10525870,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10525875,"byte_end":10525882,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527562,"byte_end":10527570,"line_start":373,"line_end":373,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526110,"byte_end":10526183,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526188,"byte_end":10526191,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixDatagram from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526196,"byte_end":10526268,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526273,"byte_end":10526341,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying datagram; it is left up to the user to set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526346,"byte_end":10526421,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526426,"byte_end":10526454,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526459,"byte_end":10526462,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526467,"byte_end":10526479,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526484,"byte_end":10526487,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526492,"byte_end":10526552,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526557,"byte_end":10526560,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526565,"byte_end":10526635,"line_start":348,"line_end":348,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a Tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526640,"byte_end":10526713,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526718,"byte_end":10526798,"line_start":350,"line_end":350,"column_start":5,"column_end":85}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526803,"byte_end":10526817,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526822,"byte_end":10526829,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526834,"byte_end":10526862,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526867,"byte_end":10526887,"line_start":354,"line_end":354,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526892,"byte_end":10526945,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526950,"byte_end":10526983,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ use std::os::unix::net::UnixDatagram as StdUDS;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10526988,"byte_end":10527039,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527044,"byte_end":10527070,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527075,"byte_end":10527078,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527083,"byte_end":10527137,"line_start":360,"line_end":360,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527142,"byte_end":10527201,"line_start":361,"line_end":361,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527206,"byte_end":10527231,"line_start":362,"line_end":362,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527236,"byte_end":10527239,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527244,"byte_end":10527287,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527292,"byte_end":10527340,"line_start":365,"line_end":365,"column_start":5,"column_end":53}},{"value":"/ let std_socket = StdUDS::bind(&socket_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527345,"byte_end":10527394,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ std_socket.set_nonblocking(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527399,"byte_end":10527437,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/ let tokio_socket = UnixDatagram::from_std(std_socket)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527442,"byte_end":10527501,"line_start":368,"line_end":368,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527506,"byte_end":10527509,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527514,"byte_end":10527526,"line_start":370,"line_end":370,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527531,"byte_end":10527538,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527543,"byte_end":10527550,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528685,"byte_end":10528693,"line_start":402,"line_end":402,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixDatagram>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixDatagram`] into a [`std::os::unix::net::UnixDatagram`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixDatagram`] into a [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527782,"byte_end":10527866,"line_start":379,"line_end":379,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527871,"byte_end":10527874,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixDatagram`] will have nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527879,"byte_end":10527954,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ mode set as `true`.  Use [`set_nonblocking`] to change the blocking mode","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10527959,"byte_end":10528035,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528040,"byte_end":10528054,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528059,"byte_end":10528062,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528067,"byte_end":10528081,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528086,"byte_end":10528089,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528094,"byte_end":10528112,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528117,"byte_end":10528143,"line_start":388,"line_end":388,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528148,"byte_end":10528151,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528156,"byte_end":10528174,"line_start":390,"line_end":390,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528179,"byte_end":10528230,"line_start":391,"line_end":391,"column_start":5,"column_end":56}},{"value":"/     let tokio_socket = tokio::net::UnixDatagram::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528235,"byte_end":10528309,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/     let std_socket = tokio_socket.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528314,"byte_end":10528364,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/     std_socket.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528369,"byte_end":10528412,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528417,"byte_end":10528431,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528436,"byte_end":10528441,"line_start":396,"line_end":396,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528446,"byte_end":10528453,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528458,"byte_end":10528461,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528466,"byte_end":10528512,"line_start":399,"line_end":399,"column_start":5,"column_end":51}},{"value":"/ [`std::os::unix::net::UnixDatagram`]: std::os::unix::net::UnixDatagram","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528517,"byte_end":10528591,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixDatagram::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10528596,"byte_end":10528673,"line_start":401,"line_end":401,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3283},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530004,"byte_end":10530011,"line_start":445,"line_end":445,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529091,"byte_end":10529158,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529163,"byte_end":10529166,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529171,"byte_end":10529185,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529190,"byte_end":10529197,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529202,"byte_end":10529230,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529235,"byte_end":10529255,"line_start":419,"line_end":419,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529260,"byte_end":10529313,"line_start":420,"line_end":420,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529318,"byte_end":10529351,"line_start":421,"line_end":421,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529356,"byte_end":10529382,"line_start":422,"line_end":422,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529387,"byte_end":10529390,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529395,"byte_end":10529426,"line_start":424,"line_end":424,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529431,"byte_end":10529469,"line_start":425,"line_end":425,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529474,"byte_end":10529477,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529482,"byte_end":10529517,"line_start":427,"line_end":427,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529522,"byte_end":10529547,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529552,"byte_end":10529592,"line_start":429,"line_end":429,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529597,"byte_end":10529640,"line_start":430,"line_end":430,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529645,"byte_end":10529648,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529653,"byte_end":10529684,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529689,"byte_end":10529720,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529725,"byte_end":10529764,"line_start":434,"line_end":434,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529769,"byte_end":10529772,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529777,"byte_end":10529809,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529814,"byte_end":10529867,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529872,"byte_end":10529875,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529880,"byte_end":10529909,"line_start":439,"line_end":439,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529914,"byte_end":10529943,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529948,"byte_end":10529951,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529956,"byte_end":10529968,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529973,"byte_end":10529980,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10529985,"byte_end":10529992,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531264,"byte_end":10531271,"line_start":487,"line_end":487,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530146,"byte_end":10530195,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530200,"byte_end":10530203,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530208,"byte_end":10530280,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530285,"byte_end":10530353,"line_start":453,"line_end":453,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530358,"byte_end":10530361,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530366,"byte_end":10530380,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530385,"byte_end":10530392,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530397,"byte_end":10530425,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530430,"byte_end":10530450,"line_start":458,"line_end":458,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530455,"byte_end":10530508,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530513,"byte_end":10530546,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530551,"byte_end":10530577,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530582,"byte_end":10530585,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530590,"byte_end":10530621,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530626,"byte_end":10530664,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530669,"byte_end":10530672,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530677,"byte_end":10530712,"line_start":466,"line_end":466,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530717,"byte_end":10530742,"line_start":467,"line_end":467,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530747,"byte_end":10530787,"line_start":468,"line_end":468,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530792,"byte_end":10530835,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530840,"byte_end":10530843,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530848,"byte_end":10530882,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530887,"byte_end":10530913,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530918,"byte_end":10530921,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530926,"byte_end":10530957,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530962,"byte_end":10530993,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"/ tx.send(bytes).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10530998,"byte_end":10531024,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531029,"byte_end":10531032,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531037,"byte_end":10531069,"line_start":478,"line_end":478,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531074,"byte_end":10531127,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531132,"byte_end":10531135,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531140,"byte_end":10531169,"line_start":481,"line_end":481,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531174,"byte_end":10531203,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531208,"byte_end":10531211,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531216,"byte_end":10531228,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531233,"byte_end":10531240,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531245,"byte_end":10531252,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532118,"byte_end":10532122,"line_start":517,"line_end":517,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531365,"byte_end":10531415,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531420,"byte_end":10531423,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531428,"byte_end":10531442,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531447,"byte_end":10531454,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531459,"byte_end":10531487,"line_start":495,"line_end":495,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531492,"byte_end":10531512,"line_start":496,"line_end":496,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531517,"byte_end":10531570,"line_start":497,"line_end":497,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531575,"byte_end":10531608,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531613,"byte_end":10531616,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531621,"byte_end":10531654,"line_start":500,"line_end":500,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531659,"byte_end":10531706,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531711,"byte_end":10531714,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531719,"byte_end":10531776,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531781,"byte_end":10531809,"line_start":504,"line_end":504,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531814,"byte_end":10531845,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531850,"byte_end":10531879,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531884,"byte_end":10531887,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531892,"byte_end":10531925,"line_start":508,"line_end":508,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531930,"byte_end":10531974,"line_start":509,"line_end":509,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531979,"byte_end":10531982,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10531987,"byte_end":10532017,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532022,"byte_end":10532051,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532056,"byte_end":10532059,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532064,"byte_end":10532076,"line_start":514,"line_end":514,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532081,"byte_end":10532088,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532093,"byte_end":10532100,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3290},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533552,"byte_end":10533560,"line_start":562,"line_end":562,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532303,"byte_end":10532358,"line_start":524,"line_end":524,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532363,"byte_end":10532366,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532371,"byte_end":10532385,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532390,"byte_end":10532393,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532398,"byte_end":10532411,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532416,"byte_end":10532449,"line_start":529,"line_end":529,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532454,"byte_end":10532470,"line_start":530,"line_end":530,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532475,"byte_end":10532478,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532483,"byte_end":10532501,"line_start":532,"line_end":532,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532506,"byte_end":10532545,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532550,"byte_end":10532597,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532602,"byte_end":10532659,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532664,"byte_end":10532721,"line_start":536,"line_end":536,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532726,"byte_end":10532781,"line_start":537,"line_end":537,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532786,"byte_end":10532824,"line_start":538,"line_end":538,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532829,"byte_end":10532832,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532837,"byte_end":10532851,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532856,"byte_end":10532905,"line_start":541,"line_end":541,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532910,"byte_end":10532947,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532952,"byte_end":10532955,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10532960,"byte_end":10533030,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533035,"byte_end":10533093,"line_start":545,"line_end":545,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533098,"byte_end":10533149,"line_start":546,"line_end":546,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533154,"byte_end":10533180,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533185,"byte_end":10533211,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533216,"byte_end":10533233,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533238,"byte_end":10533310,"line_start":550,"line_end":550,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533315,"byte_end":10533344,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533349,"byte_end":10533366,"line_start":552,"line_end":552,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533371,"byte_end":10533398,"line_start":553,"line_end":553,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533403,"byte_end":10533437,"line_start":554,"line_end":554,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533442,"byte_end":10533459,"line_start":555,"line_end":555,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533464,"byte_end":10533477,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533482,"byte_end":10533491,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533496,"byte_end":10533499,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533504,"byte_end":10533518,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533523,"byte_end":10533528,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533533,"byte_end":10533540,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3292},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534943,"byte_end":10534954,"line_start":605,"line_end":605,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533720,"byte_end":10533775,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533780,"byte_end":10533783,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533788,"byte_end":10533802,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533807,"byte_end":10533810,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533815,"byte_end":10533828,"line_start":572,"line_end":572,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533833,"byte_end":10533866,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533871,"byte_end":10533887,"line_start":574,"line_end":574,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533892,"byte_end":10533895,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533900,"byte_end":10533918,"line_start":576,"line_end":576,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533923,"byte_end":10533962,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10533967,"byte_end":10534014,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534019,"byte_end":10534076,"line_start":579,"line_end":579,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534081,"byte_end":10534138,"line_start":580,"line_end":580,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534143,"byte_end":10534198,"line_start":581,"line_end":581,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534203,"byte_end":10534206,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534211,"byte_end":10534225,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534230,"byte_end":10534279,"line_start":584,"line_end":584,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534284,"byte_end":10534321,"line_start":585,"line_end":585,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534326,"byte_end":10534329,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534334,"byte_end":10534404,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534409,"byte_end":10534467,"line_start":588,"line_end":588,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send_to(b\"hello world\", &server_path) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534472,"byte_end":10534540,"line_start":589,"line_end":589,"column_start":5,"column_end":73}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534545,"byte_end":10534571,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534576,"byte_end":10534602,"line_start":591,"line_end":591,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534607,"byte_end":10534624,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534629,"byte_end":10534701,"line_start":593,"line_end":593,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534706,"byte_end":10534735,"line_start":594,"line_end":594,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534740,"byte_end":10534757,"line_start":595,"line_end":595,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534762,"byte_end":10534789,"line_start":596,"line_end":596,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534794,"byte_end":10534828,"line_start":597,"line_end":597,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534833,"byte_end":10534850,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534855,"byte_end":10534868,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534873,"byte_end":10534882,"line_start":600,"line_end":600,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534887,"byte_end":10534890,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534895,"byte_end":10534909,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534914,"byte_end":10534919,"line_start":603,"line_end":603,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10534924,"byte_end":10534931,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535914,"byte_end":10535918,"line_start":640,"line_end":640,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535177,"byte_end":10535211,"line_start":614,"line_end":614,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535216,"byte_end":10535219,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535224,"byte_end":10535238,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535243,"byte_end":10535250,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535255,"byte_end":10535283,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535288,"byte_end":10535308,"line_start":619,"line_end":619,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535313,"byte_end":10535366,"line_start":620,"line_end":620,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535371,"byte_end":10535404,"line_start":621,"line_end":621,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535409,"byte_end":10535412,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535417,"byte_end":10535450,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535455,"byte_end":10535502,"line_start":624,"line_end":624,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535507,"byte_end":10535510,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535515,"byte_end":10535572,"line_start":626,"line_end":626,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535577,"byte_end":10535605,"line_start":627,"line_end":627,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535610,"byte_end":10535641,"line_start":628,"line_end":628,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535646,"byte_end":10535675,"line_start":629,"line_end":629,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535680,"byte_end":10535683,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535688,"byte_end":10535721,"line_start":631,"line_end":631,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535726,"byte_end":10535770,"line_start":632,"line_end":632,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535775,"byte_end":10535778,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535783,"byte_end":10535813,"line_start":634,"line_end":634,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535818,"byte_end":10535847,"line_start":635,"line_end":635,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535852,"byte_end":10535855,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535860,"byte_end":10535872,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535877,"byte_end":10535884,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10535889,"byte_end":10535896,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537611,"byte_end":10537619,"line_start":691,"line_end":691,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536103,"byte_end":10536163,"line_start":647,"line_end":647,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536168,"byte_end":10536171,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536176,"byte_end":10536190,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536195,"byte_end":10536198,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536203,"byte_end":10536216,"line_start":651,"line_end":651,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536221,"byte_end":10536254,"line_start":652,"line_end":652,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536259,"byte_end":10536275,"line_start":653,"line_end":653,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536280,"byte_end":10536283,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536288,"byte_end":10536306,"line_start":655,"line_end":655,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536311,"byte_end":10536350,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536355,"byte_end":10536383,"line_start":657,"line_end":657,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536388,"byte_end":10536435,"line_start":658,"line_end":658,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536440,"byte_end":10536497,"line_start":659,"line_end":659,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536502,"byte_end":10536559,"line_start":660,"line_end":660,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536564,"byte_end":10536619,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536624,"byte_end":10536662,"line_start":662,"line_end":662,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536667,"byte_end":10536670,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536675,"byte_end":10536689,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536694,"byte_end":10536743,"line_start":665,"line_end":665,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536748,"byte_end":10536785,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536790,"byte_end":10536793,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536798,"byte_end":10536870,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536875,"byte_end":10536914,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536919,"byte_end":10536955,"line_start":670,"line_end":670,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536960,"byte_end":10536963,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10536968,"byte_end":10537038,"line_start":672,"line_end":672,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537043,"byte_end":10537101,"line_start":673,"line_end":673,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537106,"byte_end":10537151,"line_start":674,"line_end":674,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537156,"byte_end":10537182,"line_start":675,"line_end":675,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537187,"byte_end":10537239,"line_start":676,"line_end":676,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537244,"byte_end":10537270,"line_start":677,"line_end":677,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537275,"byte_end":10537292,"line_start":678,"line_end":678,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537297,"byte_end":10537369,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537374,"byte_end":10537403,"line_start":680,"line_end":680,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537408,"byte_end":10537425,"line_start":681,"line_end":681,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537430,"byte_end":10537457,"line_start":682,"line_end":682,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537462,"byte_end":10537496,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537501,"byte_end":10537518,"line_start":684,"line_end":684,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537523,"byte_end":10537536,"line_start":685,"line_end":685,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537541,"byte_end":10537550,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537555,"byte_end":10537558,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537563,"byte_end":10537577,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537582,"byte_end":10537587,"line_start":689,"line_end":689,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10537592,"byte_end":10537599,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10539343,"byte_end":10539360,"line_start":739,"line_end":739,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UnixDatagram>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10541724,"byte_end":10541736,"line_start":802,"line_end":802,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UnixDatagram>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543416,"byte_end":10543423,"line_start":854,"line_end":854,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ Self, &'_ [u8], P) -> /*impl Trait*/ where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542341,"byte_end":10542395,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542400,"byte_end":10542403,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542408,"byte_end":10542422,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542427,"byte_end":10542434,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542439,"byte_end":10542467,"line_start":825,"line_end":825,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542472,"byte_end":10542492,"line_start":826,"line_end":826,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542497,"byte_end":10542550,"line_start":827,"line_end":827,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542555,"byte_end":10542588,"line_start":828,"line_end":828,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542593,"byte_end":10542619,"line_start":829,"line_end":829,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542624,"byte_end":10542627,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542632,"byte_end":10542686,"line_start":831,"line_end":831,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542691,"byte_end":10542750,"line_start":832,"line_end":832,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542755,"byte_end":10542780,"line_start":833,"line_end":833,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542785,"byte_end":10542788,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542793,"byte_end":10542837,"line_start":835,"line_end":835,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542842,"byte_end":10542882,"line_start":836,"line_end":836,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542887,"byte_end":10542930,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542935,"byte_end":10542975,"line_start":838,"line_end":838,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10542980,"byte_end":10543023,"line_start":839,"line_end":839,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543028,"byte_end":10543031,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543036,"byte_end":10543067,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543072,"byte_end":10543111,"line_start":842,"line_end":842,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543116,"byte_end":10543119,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543124,"byte_end":10543156,"line_start":844,"line_end":844,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543161,"byte_end":10543214,"line_start":845,"line_end":845,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543219,"byte_end":10543222,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543227,"byte_end":10543256,"line_start":847,"line_end":847,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543261,"byte_end":10543290,"line_start":848,"line_end":848,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543295,"byte_end":10543349,"line_start":849,"line_end":849,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543354,"byte_end":10543357,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543362,"byte_end":10543374,"line_start":851,"line_end":851,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543379,"byte_end":10543386,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543391,"byte_end":10543398,"line_start":853,"line_end":853,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544731,"byte_end":10544740,"line_start":897,"line_end":897,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543676,"byte_end":10543710,"line_start":864,"line_end":864,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543715,"byte_end":10543718,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543723,"byte_end":10543737,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543742,"byte_end":10543749,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543754,"byte_end":10543782,"line_start":868,"line_end":868,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543787,"byte_end":10543807,"line_start":869,"line_end":869,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543812,"byte_end":10543865,"line_start":870,"line_end":870,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543870,"byte_end":10543903,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543908,"byte_end":10543934,"line_start":872,"line_end":872,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543939,"byte_end":10543942,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10543947,"byte_end":10544001,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544006,"byte_end":10544065,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544070,"byte_end":10544095,"line_start":876,"line_end":876,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544100,"byte_end":10544103,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544108,"byte_end":10544152,"line_start":878,"line_end":878,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544157,"byte_end":10544197,"line_start":879,"line_end":879,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544202,"byte_end":10544245,"line_start":880,"line_end":880,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544250,"byte_end":10544290,"line_start":881,"line_end":881,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544295,"byte_end":10544338,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544343,"byte_end":10544346,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544351,"byte_end":10544382,"line_start":884,"line_end":884,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544387,"byte_end":10544426,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544431,"byte_end":10544434,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544439,"byte_end":10544471,"line_start":887,"line_end":887,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544476,"byte_end":10544529,"line_start":888,"line_end":888,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544534,"byte_end":10544537,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544542,"byte_end":10544571,"line_start":890,"line_end":890,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544576,"byte_end":10544605,"line_start":891,"line_end":891,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544610,"byte_end":10544664,"line_start":892,"line_end":892,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544669,"byte_end":10544672,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544677,"byte_end":10544689,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544694,"byte_end":10544701,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10544706,"byte_end":10544713,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545705,"byte_end":10545719,"line_start":924,"line_end":924,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UnixDatagram>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the specified address.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545010,"byte_end":10545077,"line_start":907,"line_end":907,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545082,"byte_end":10545085,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545090,"byte_end":10545174,"line_start":909,"line_end":909,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545179,"byte_end":10545261,"line_start":910,"line_end":910,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545266,"byte_end":10545287,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545292,"byte_end":10545295,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545300,"byte_end":10545318,"line_start":913,"line_end":913,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545323,"byte_end":10545326,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545331,"byte_end":10545356,"line_start":915,"line_end":915,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545361,"byte_end":10545364,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545369,"byte_end":10545425,"line_start":917,"line_end":917,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545430,"byte_end":10545520,"line_start":918,"line_end":918,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545525,"byte_end":10545580,"line_start":919,"line_end":919,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545585,"byte_end":10545588,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545593,"byte_end":10545605,"line_start":921,"line_end":921,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545610,"byte_end":10545613,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10545618,"byte_end":10545693,"line_start":923,"line_end":923,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3311},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547028,"byte_end":10547040,"line_start":963,"line_end":963,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UnixDatagram>::poll_send_to","value":"pub fn poll_send_to<P>(&Self, &mut Context, &[u8], P)\n-> Poll<io::Result<usize>> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data to the specified address.","sig":null,"attributes":[{"value":"/ Attempts to send data to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546379,"byte_end":10546430,"line_start":946,"line_end":946,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546435,"byte_end":10546438,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546443,"byte_end":10546527,"line_start":948,"line_end":948,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546532,"byte_end":10546614,"line_start":949,"line_end":949,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546619,"byte_end":10546640,"line_start":950,"line_end":950,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546645,"byte_end":10546648,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546653,"byte_end":10546671,"line_start":952,"line_end":952,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546676,"byte_end":10546679,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546684,"byte_end":10546709,"line_start":954,"line_end":954,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546714,"byte_end":10546717,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546722,"byte_end":10546779,"line_start":956,"line_end":956,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546784,"byte_end":10546843,"line_start":957,"line_end":957,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546848,"byte_end":10546903,"line_start":958,"line_end":958,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546908,"byte_end":10546911,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546916,"byte_end":10546928,"line_start":960,"line_end":960,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546933,"byte_end":10546936,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10546941,"byte_end":10547016,"line_start":962,"line_end":962,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548237,"byte_end":10548246,"line_start":1000,"line_end":1000,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UnixDatagram>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547330,"byte_end":10547403,"line_start":977,"line_end":977,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547408,"byte_end":10547439,"line_start":978,"line_end":978,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547444,"byte_end":10547447,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547452,"byte_end":10547524,"line_start":980,"line_end":980,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547529,"byte_end":10547586,"line_start":981,"line_end":981,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547591,"byte_end":10547594,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547599,"byte_end":10547674,"line_start":983,"line_end":983,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547679,"byte_end":10547754,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547759,"byte_end":10547796,"line_start":985,"line_end":985,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547801,"byte_end":10547804,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547809,"byte_end":10547827,"line_start":987,"line_end":987,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547832,"byte_end":10547835,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547840,"byte_end":10547865,"line_start":989,"line_end":989,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547870,"byte_end":10547873,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547878,"byte_end":10547939,"line_start":991,"line_end":991,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10547944,"byte_end":10548002,"line_start":992,"line_end":992,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548007,"byte_end":10548062,"line_start":993,"line_end":993,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548067,"byte_end":10548070,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548075,"byte_end":10548087,"line_start":995,"line_end":995,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548092,"byte_end":10548095,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548100,"byte_end":10548175,"line_start":997,"line_end":997,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548180,"byte_end":10548183,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548188,"byte_end":10548225,"line_start":999,"line_end":999,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549365,"byte_end":10549374,"line_start":1029,"line_end":1029,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnixDatagram>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548425,"byte_end":10548504,"line_start":1006,"line_end":1006,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548509,"byte_end":10548548,"line_start":1007,"line_end":1007,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548553,"byte_end":10548556,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548561,"byte_end":10548645,"line_start":1009,"line_end":1009,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548650,"byte_end":10548706,"line_start":1010,"line_end":1010,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548711,"byte_end":10548714,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548719,"byte_end":10548803,"line_start":1012,"line_end":1012,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548808,"byte_end":10548890,"line_start":1013,"line_end":1013,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548895,"byte_end":10548916,"line_start":1014,"line_end":1014,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548921,"byte_end":10548924,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548929,"byte_end":10548947,"line_start":1016,"line_end":1016,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548952,"byte_end":10548955,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548960,"byte_end":10548985,"line_start":1018,"line_end":1018,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548990,"byte_end":10548993,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10548998,"byte_end":10549054,"line_start":1020,"line_end":1020,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549059,"byte_end":10549130,"line_start":1021,"line_end":1021,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549135,"byte_end":10549190,"line_start":1022,"line_end":1022,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549195,"byte_end":10549198,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549203,"byte_end":10549215,"line_start":1024,"line_end":1024,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549220,"byte_end":10549223,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549228,"byte_end":10549303,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549308,"byte_end":10549311,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549316,"byte_end":10549353,"line_start":1028,"line_end":1028,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551443,"byte_end":10551456,"line_start":1090,"line_end":1090,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10549968,"byte_end":10550024,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550029,"byte_end":10550032,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550037,"byte_end":10550051,"line_start":1049,"line_end":1049,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550056,"byte_end":10550059,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550064,"byte_end":10550077,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550082,"byte_end":10550115,"line_start":1052,"line_end":1052,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550120,"byte_end":10550136,"line_start":1053,"line_end":1053,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550141,"byte_end":10550144,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550149,"byte_end":10550167,"line_start":1055,"line_end":1055,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550172,"byte_end":10550211,"line_start":1056,"line_end":1056,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550216,"byte_end":10550244,"line_start":1057,"line_end":1057,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550249,"byte_end":10550296,"line_start":1058,"line_end":1058,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550301,"byte_end":10550358,"line_start":1059,"line_end":1059,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550363,"byte_end":10550420,"line_start":1060,"line_end":1060,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550425,"byte_end":10550480,"line_start":1061,"line_end":1061,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550485,"byte_end":10550488,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550493,"byte_end":10550507,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550512,"byte_end":10550561,"line_start":1064,"line_end":1064,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550566,"byte_end":10550603,"line_start":1065,"line_end":1065,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550608,"byte_end":10550611,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550616,"byte_end":10550688,"line_start":1067,"line_end":1067,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550693,"byte_end":10550732,"line_start":1068,"line_end":1068,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550737,"byte_end":10550773,"line_start":1069,"line_end":1069,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550778,"byte_end":10550781,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550786,"byte_end":10550856,"line_start":1071,"line_end":1071,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550861,"byte_end":10550919,"line_start":1072,"line_end":1072,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550924,"byte_end":10550974,"line_start":1073,"line_end":1073,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10550979,"byte_end":10551014,"line_start":1074,"line_end":1074,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551019,"byte_end":10551071,"line_start":1075,"line_end":1075,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551076,"byte_end":10551102,"line_start":1076,"line_end":1076,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551107,"byte_end":10551124,"line_start":1077,"line_end":1077,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551129,"byte_end":10551201,"line_start":1078,"line_end":1078,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551206,"byte_end":10551235,"line_start":1079,"line_end":1079,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551240,"byte_end":10551257,"line_start":1080,"line_end":1080,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551262,"byte_end":10551289,"line_start":1081,"line_end":1081,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551294,"byte_end":10551328,"line_start":1082,"line_end":1082,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551333,"byte_end":10551350,"line_start":1083,"line_end":1083,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551355,"byte_end":10551368,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551373,"byte_end":10551382,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551387,"byte_end":10551390,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551395,"byte_end":10551409,"line_start":1087,"line_end":1087,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551414,"byte_end":10551419,"line_start":1088,"line_end":1088,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551424,"byte_end":10551431,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552905,"byte_end":10552915,"line_start":1139,"line_end":1139,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551705,"byte_end":10551764,"line_start":1099,"line_end":1099,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551769,"byte_end":10551772,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551777,"byte_end":10551791,"line_start":1101,"line_end":1101,"column_start":5,"column_end":19}},{"value":"/ For a socket bound to a local path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551796,"byte_end":10551834,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551839,"byte_end":10551846,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551851,"byte_end":10551879,"line_start":1104,"line_end":1104,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551884,"byte_end":10551904,"line_start":1105,"line_end":1105,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551909,"byte_end":10551962,"line_start":1106,"line_end":1106,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10551967,"byte_end":10552000,"line_start":1107,"line_end":1107,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552005,"byte_end":10552031,"line_start":1108,"line_end":1108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552036,"byte_end":10552039,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552044,"byte_end":10552098,"line_start":1110,"line_end":1110,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552103,"byte_end":10552162,"line_start":1111,"line_end":1111,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552167,"byte_end":10552192,"line_start":1112,"line_end":1112,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552197,"byte_end":10552200,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ // Bind socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552205,"byte_end":10552244,"line_start":1114,"line_end":1114,"column_start":5,"column_end":44}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552249,"byte_end":10552297,"line_start":1115,"line_end":1115,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552302,"byte_end":10552353,"line_start":1116,"line_end":1116,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552358,"byte_end":10552361,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.local_addr()?.as_pathname().unwrap(), &socket_path);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552366,"byte_end":10552440,"line_start":1118,"line_end":1118,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552445,"byte_end":10552448,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552453,"byte_end":10552465,"line_start":1120,"line_end":1120,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552470,"byte_end":10552477,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552482,"byte_end":10552489,"line_start":1122,"line_end":1122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552494,"byte_end":10552497,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ For an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552502,"byte_end":10552527,"line_start":1124,"line_end":1124,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552532,"byte_end":10552539,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552544,"byte_end":10552572,"line_start":1126,"line_end":1126,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552577,"byte_end":10552597,"line_start":1127,"line_end":1127,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552602,"byte_end":10552655,"line_start":1128,"line_end":1128,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552660,"byte_end":10552693,"line_start":1129,"line_end":1129,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552698,"byte_end":10552701,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552706,"byte_end":10552737,"line_start":1131,"line_end":1131,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552742,"byte_end":10552784,"line_start":1132,"line_end":1132,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552789,"byte_end":10552792,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ assert!(socket.local_addr()?.is_unnamed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552797,"byte_end":10552844,"line_start":1134,"line_end":1134,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552849,"byte_end":10552852,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552857,"byte_end":10552869,"line_start":1136,"line_end":1136,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552874,"byte_end":10552881,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10552886,"byte_end":10552893,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554268,"byte_end":10554277,"line_start":1188,"line_end":1188,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553007,"byte_end":10553053,"line_start":1143,"line_end":1143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553058,"byte_end":10553061,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553066,"byte_end":10553125,"line_start":1145,"line_end":1145,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553130,"byte_end":10553133,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553138,"byte_end":10553152,"line_start":1147,"line_end":1147,"column_start":5,"column_end":19}},{"value":"/ For a peer with a local path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553157,"byte_end":10553189,"line_start":1148,"line_end":1148,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553194,"byte_end":10553201,"line_start":1149,"line_end":1149,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553206,"byte_end":10553234,"line_start":1150,"line_end":1150,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553239,"byte_end":10553259,"line_start":1151,"line_end":1151,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553264,"byte_end":10553317,"line_start":1152,"line_end":1152,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553322,"byte_end":10553355,"line_start":1153,"line_end":1153,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553360,"byte_end":10553386,"line_start":1154,"line_end":1154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553391,"byte_end":10553394,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553399,"byte_end":10553430,"line_start":1156,"line_end":1156,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553435,"byte_end":10553473,"line_start":1157,"line_end":1157,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553478,"byte_end":10553481,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553486,"byte_end":10553521,"line_start":1159,"line_end":1159,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553526,"byte_end":10553551,"line_start":1160,"line_end":1160,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553556,"byte_end":10553596,"line_start":1161,"line_end":1161,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553601,"byte_end":10553644,"line_start":1162,"line_end":1162,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553649,"byte_end":10553652,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553657,"byte_end":10553691,"line_start":1164,"line_end":1164,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553696,"byte_end":10553722,"line_start":1165,"line_end":1165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553727,"byte_end":10553730,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tx.peer_addr()?.as_pathname().unwrap(), &rx_path);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553735,"byte_end":10553800,"line_start":1167,"line_end":1167,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553805,"byte_end":10553808,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553813,"byte_end":10553825,"line_start":1169,"line_end":1169,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553830,"byte_end":10553837,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553842,"byte_end":10553849,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553854,"byte_end":10553857,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ For an unbound peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553862,"byte_end":10553885,"line_start":1173,"line_end":1173,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553890,"byte_end":10553897,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553902,"byte_end":10553930,"line_start":1175,"line_end":1175,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553935,"byte_end":10553955,"line_start":1176,"line_end":1176,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10553960,"byte_end":10554013,"line_start":1177,"line_end":1177,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554018,"byte_end":10554051,"line_start":1178,"line_end":1178,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554056,"byte_end":10554059,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554064,"byte_end":10554097,"line_start":1180,"line_end":1180,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554102,"byte_end":10554149,"line_start":1181,"line_end":1181,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554154,"byte_end":10554157,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert!(sock1.peer_addr()?.is_unnamed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554162,"byte_end":10554207,"line_start":1183,"line_end":1183,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554212,"byte_end":10554215,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554220,"byte_end":10554232,"line_start":1185,"line_end":1185,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554237,"byte_end":10554244,"line_start":1186,"line_end":1186,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554249,"byte_end":10554256,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554877,"byte_end":10554887,"line_start":1211,"line_end":1211,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554368,"byte_end":10554415,"line_start":1192,"line_end":1192,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554420,"byte_end":10554423,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554428,"byte_end":10554442,"line_start":1194,"line_end":1194,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554447,"byte_end":10554454,"line_start":1195,"line_end":1195,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554459,"byte_end":10554487,"line_start":1196,"line_end":1196,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554492,"byte_end":10554512,"line_start":1197,"line_end":1197,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554517,"byte_end":10554570,"line_start":1198,"line_end":1198,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554575,"byte_end":10554608,"line_start":1199,"line_end":1199,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554613,"byte_end":10554616,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554621,"byte_end":10554652,"line_start":1201,"line_end":1201,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554657,"byte_end":10554699,"line_start":1202,"line_end":1202,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554704,"byte_end":10554707,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554712,"byte_end":10554760,"line_start":1204,"line_end":1204,"column_start":5,"column_end":53}},{"value":"/     println!(\"Got error: {:?}\", err);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554765,"byte_end":10554806,"line_start":1205,"line_end":1205,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554811,"byte_end":10554816,"line_start":1206,"line_end":1206,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554821,"byte_end":10554824,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554829,"byte_end":10554841,"line_start":1208,"line_end":1208,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554846,"byte_end":10554853,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554858,"byte_end":10554865,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556128,"byte_end":10556136,"line_start":1247,"line_end":1247,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10554970,"byte_end":10555036,"line_start":1215,"line_end":1215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555041,"byte_end":10555044,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555049,"byte_end":10555117,"line_start":1217,"line_end":1217,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555122,"byte_end":10555192,"line_start":1218,"line_end":1218,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555197,"byte_end":10555239,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555244,"byte_end":10555247,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555252,"byte_end":10555266,"line_start":1221,"line_end":1221,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555271,"byte_end":10555278,"line_start":1222,"line_end":1222,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555283,"byte_end":10555311,"line_start":1223,"line_end":1223,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555316,"byte_end":10555336,"line_start":1224,"line_end":1224,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555341,"byte_end":10555394,"line_start":1225,"line_end":1225,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555399,"byte_end":10555432,"line_start":1226,"line_end":1226,"column_start":5,"column_end":38}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555437,"byte_end":10555464,"line_start":1227,"line_end":1227,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555469,"byte_end":10555472,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555477,"byte_end":10555508,"line_start":1229,"line_end":1229,"column_start":5,"column_end":36}},{"value":"/ let (socket, other) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555513,"byte_end":10555561,"line_start":1230,"line_end":1230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555566,"byte_end":10555569,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555574,"byte_end":10555611,"line_start":1232,"line_end":1232,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555616,"byte_end":10555619,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ // NOTE: the following commented out code does NOT work as expected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555624,"byte_end":10555696,"line_start":1234,"line_end":1234,"column_start":5,"column_end":77}},{"value":"/ // Due to an underlying issue, the recv call will block indefinitely.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555701,"byte_end":10555774,"line_start":1235,"line_end":1235,"column_start":5,"column_end":78}},{"value":"/ // See: https://github.com/tokio-rs/tokio/issues/1679","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555779,"byte_end":10555836,"line_start":1236,"line_end":1236,"column_start":5,"column_end":62}},{"value":"/ //let mut buff = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555841,"byte_end":10555876,"line_start":1237,"line_end":1237,"column_start":5,"column_end":40}},{"value":"/ //let size = socket.recv(&mut buff).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555881,"byte_end":10555928,"line_start":1238,"line_end":1238,"column_start":5,"column_end":52}},{"value":"/ //assert_eq!(size, 0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555933,"byte_end":10555959,"line_start":1239,"line_end":1239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555964,"byte_end":10555967,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let send_result = socket.send(b\"hello world\").await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10555972,"byte_end":10556028,"line_start":1241,"line_end":1241,"column_start":5,"column_end":61}},{"value":"/ assert!(send_result.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556033,"byte_end":10556067,"line_start":1242,"line_end":1242,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556072,"byte_end":10556075,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556080,"byte_end":10556092,"line_start":1244,"line_end":1244,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556097,"byte_end":10556104,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556109,"byte_end":10556116,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3590},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558439,"byte_end":10558451,"line_start":47,"line_end":47,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3591}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558953,"byte_end":10558957,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558536,"byte_end":10558597,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558602,"byte_end":10558605,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558610,"byte_end":10558622,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558627,"byte_end":10558630,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558635,"byte_end":10558695,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558700,"byte_end":10558703,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558708,"byte_end":10558778,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558783,"byte_end":10558856,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558861,"byte_end":10558941,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559888,"byte_end":10559896,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","sig":null,"attributes":[{"value":"/ Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559187,"byte_end":10559261,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559266,"byte_end":10559269,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixListener from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559274,"byte_end":10559346,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559351,"byte_end":10559419,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying listener; it is left up to the user to set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559424,"byte_end":10559499,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559504,"byte_end":10559532,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559537,"byte_end":10559540,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559545,"byte_end":10559557,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559562,"byte_end":10559565,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559570,"byte_end":10559630,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559635,"byte_end":10559638,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559643,"byte_end":10559713,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559718,"byte_end":10559791,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10559796,"byte_end":10559876,"line_start":84,"line_end":84,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10561015,"byte_end":10561023,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixListener>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixListener`] into a [`std::os::unix::net::UnixListener`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixListener`] into a [`std::os::unix::net::UnixListener`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560112,"byte_end":10560196,"line_start":91,"line_end":91,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560201,"byte_end":10560204,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixListener`] will have nonblocking mode","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560209,"byte_end":10560289,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"/ set as `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560294,"byte_end":10560376,"line_start":94,"line_end":94,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560381,"byte_end":10560384,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560389,"byte_end":10560403,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560408,"byte_end":10560411,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560416,"byte_end":10560434,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560439,"byte_end":10560465,"line_start":99,"line_end":99,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560470,"byte_end":10560473,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560478,"byte_end":10560496,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560501,"byte_end":10560552,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/     let tokio_listener = tokio::net::UnixListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560557,"byte_end":10560633,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/     let std_listener = tokio_listener.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560638,"byte_end":10560692,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/     std_listener.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560697,"byte_end":10560742,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560747,"byte_end":10560761,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560766,"byte_end":10560771,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560776,"byte_end":10560783,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560788,"byte_end":10560791,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UnixListener`]: UnixListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560796,"byte_end":10560842,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/ [`std::os::unix::net::UnixListener`]: std::os::unix::net::UnixListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560847,"byte_end":10560921,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixListener::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10560926,"byte_end":10561003,"line_start":112,"line_end":112,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10561316,"byte_end":10561326,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10561250,"byte_end":10561304,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10561477,"byte_end":10561487,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10561418,"byte_end":10561465,"line_start":125,"line_end":125,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10561643,"byte_end":10561649,"line_start":131,"line_end":131,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10561570,"byte_end":10561625,"line_start":130,"line_end":130,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10562356,"byte_end":10562367,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10561978,"byte_end":10562041,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10562046,"byte_end":10562049,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10562054,"byte_end":10562130,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10562135,"byte_end":10562209,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10562214,"byte_end":10562290,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10562295,"byte_end":10562344,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3593},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564178,"byte_end":10564186,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10563841,"byte_end":10563906,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10563907,"byte_end":10563910,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10563911,"byte_end":10563999,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564000,"byte_end":10564027,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564028,"byte_end":10564031,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564032,"byte_end":10564062,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564063,"byte_end":10564097,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564098,"byte_end":10564149,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3600},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564812,"byte_end":10564821,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564209,"byte_end":10564275,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564276,"byte_end":10564279,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564280,"byte_end":10564366,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564367,"byte_end":10564426,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564427,"byte_end":10564430,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564431,"byte_end":10564512,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564513,"byte_end":10564548,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564549,"byte_end":10564552,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564553,"byte_end":10564583,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564584,"byte_end":10564618,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564619,"byte_end":10564666,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564667,"byte_end":10564729,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564730,"byte_end":10564783,"line_start":42,"line_end":42,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3607},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567217,"byte_end":10567230,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3608}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10566838,"byte_end":10566905,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10566906,"byte_end":10566909,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10566910,"byte_end":10566997,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10566998,"byte_end":10567032,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567033,"byte_end":10567036,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567037,"byte_end":10567079,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567080,"byte_end":10567136,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567137,"byte_end":10567188,"line_start":28,"line_end":28,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3611},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567976,"byte_end":10567990,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3612},{"krate":0,"index":3613}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567264,"byte_end":10567332,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567333,"byte_end":10567336,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567337,"byte_end":10567401,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567402,"byte_end":10567473,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567474,"byte_end":10567551,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567552,"byte_end":10567555,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567556,"byte_end":10567636,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567637,"byte_end":10567678,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567679,"byte_end":10567682,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567683,"byte_end":10567725,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567726,"byte_end":10567782,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567783,"byte_end":10567830,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567831,"byte_end":10567893,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10567894,"byte_end":10567947,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3616},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10568959,"byte_end":10568971,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10568827,"byte_end":10568909,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10568910,"byte_end":10568930,"line_start":81,"line_end":81,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3618},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10568972,"byte_end":10568989,"line_start":83,"line_end":83,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3619},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10568991,"byte_end":10569009,"line_start":83,"line_end":83,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569569,"byte_end":10569576,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569292,"byte_end":10569362,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569367,"byte_end":10569431,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569436,"byte_end":10569488,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569493,"byte_end":10569496,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569501,"byte_end":10569557,"line_start":101,"line_end":101,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570213,"byte_end":10570220,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569936,"byte_end":10570006,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570011,"byte_end":10570075,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570080,"byte_end":10570132,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570137,"byte_end":10570140,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570145,"byte_end":10570201,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570526,"byte_end":10570532,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570327,"byte_end":10570399,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570404,"byte_end":10570473,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570478,"byte_end":10570514,"line_start":129,"line_end":129,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3446},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572158,"byte_end":10572168,"line_start":5,"line_end":5,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::net::unix::socketaddr::SocketAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" An address associated with a Tokio Unix socket.\n","sig":null,"attributes":[{"value":"/ An address associated with a Tokio Unix socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572095,"byte_end":10572146,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572404,"byte_end":10572414,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"/ Returns `true` if the address is unnamed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572226,"byte_end":10572271,"line_start":8,"line_end":8,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572276,"byte_end":10572279,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572284,"byte_end":10572329,"line_start":10,"line_end":10,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572334,"byte_end":10572337,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572342,"byte_end":10572392,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572675,"byte_end":10572686,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[{"value":"/ Returns the contents of this address if it is a `pathname` address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572471,"byte_end":10572542,"line_start":17,"line_end":17,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572547,"byte_end":10572550,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572555,"byte_end":10572600,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572605,"byte_end":10572608,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572613,"byte_end":10572663,"line_start":21,"line_end":21,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3623},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574189,"byte_end":10574199,"line_start":35,"line_end":35,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3624}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574522,"byte_end":10574529,"line_start":46,"line_end":46,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574280,"byte_end":10574323,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574328,"byte_end":10574331,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574336,"byte_end":10574407,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574412,"byte_end":10574488,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574493,"byte_end":10574504,"line_start":45,"line_end":45,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577192,"byte_end":10577197,"line_start":119,"line_end":119,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574821,"byte_end":10574868,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574873,"byte_end":10574876,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574881,"byte_end":10574955,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574960,"byte_end":10575035,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575040,"byte_end":10575078,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575083,"byte_end":10575086,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575091,"byte_end":10575105,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575110,"byte_end":10575113,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575118,"byte_end":10575188,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575193,"byte_end":10575207,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575212,"byte_end":10575215,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575220,"byte_end":10575233,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575238,"byte_end":10575266,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575271,"byte_end":10575302,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575307,"byte_end":10575333,"line_start":71,"line_end":71,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575338,"byte_end":10575354,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575359,"byte_end":10575362,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575367,"byte_end":10575385,"line_start":74,"line_end":74,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575390,"byte_end":10575441,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575446,"byte_end":10575493,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575498,"byte_end":10575551,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575556,"byte_end":10575615,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575620,"byte_end":10575623,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575628,"byte_end":10575642,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575647,"byte_end":10575732,"line_start":81,"line_end":81,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575737,"byte_end":10575740,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575745,"byte_end":10575781,"line_start":83,"line_end":83,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575786,"byte_end":10575831,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575836,"byte_end":10575910,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575915,"byte_end":10575977,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10575982,"byte_end":10576032,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576037,"byte_end":10576067,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576072,"byte_end":10576133,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576138,"byte_end":10576159,"line_start":90,"line_end":90,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576164,"byte_end":10576240,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576245,"byte_end":10576278,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576283,"byte_end":10576304,"line_start":93,"line_end":93,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576309,"byte_end":10576340,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576345,"byte_end":10576390,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576395,"byte_end":10576416,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576421,"byte_end":10576438,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576443,"byte_end":10576446,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576451,"byte_end":10576464,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576469,"byte_end":10576472,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576477,"byte_end":10576513,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576518,"byte_end":10576593,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576598,"byte_end":10576660,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576665,"byte_end":10576721,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576726,"byte_end":10576756,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576761,"byte_end":10576815,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576820,"byte_end":10576841,"line_start":107,"line_end":107,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576846,"byte_end":10576922,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576927,"byte_end":10576960,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576965,"byte_end":10576986,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10576991,"byte_end":10577022,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577027,"byte_end":10577072,"line_start":112,"line_end":112,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577077,"byte_end":10577098,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577103,"byte_end":10577120,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577125,"byte_end":10577138,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577143,"byte_end":10577152,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577157,"byte_end":10577162,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577167,"byte_end":10577174,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578822,"byte_end":10578830,"line_start":169,"line_end":169,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577354,"byte_end":10577397,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577402,"byte_end":10577405,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577410,"byte_end":10577487,"line_start":126,"line_end":126,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577492,"byte_end":10577521,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577526,"byte_end":10577529,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577534,"byte_end":10577548,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577553,"byte_end":10577556,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577561,"byte_end":10577574,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577579,"byte_end":10577610,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577615,"byte_end":10577641,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577646,"byte_end":10577662,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577667,"byte_end":10577670,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577675,"byte_end":10577693,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577698,"byte_end":10577749,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577754,"byte_end":10577782,"line_start":138,"line_end":138,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577787,"byte_end":10577834,"line_start":139,"line_end":139,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577839,"byte_end":10577892,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577897,"byte_end":10577956,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577961,"byte_end":10577964,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10577969,"byte_end":10578005,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578010,"byte_end":10578013,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578018,"byte_end":10578032,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578037,"byte_end":10578086,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578091,"byte_end":10578128,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578133,"byte_end":10578136,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578141,"byte_end":10578211,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578216,"byte_end":10578274,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578279,"byte_end":10578324,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578329,"byte_end":10578355,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578360,"byte_end":10578396,"line_start":153,"line_end":153,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578401,"byte_end":10578427,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578432,"byte_end":10578449,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578454,"byte_end":10578526,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578531,"byte_end":10578560,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578565,"byte_end":10578582,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578587,"byte_end":10578614,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578619,"byte_end":10578660,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578665,"byte_end":10578682,"line_start":161,"line_end":161,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578687,"byte_end":10578700,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578705,"byte_end":10578714,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578719,"byte_end":10578722,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578727,"byte_end":10578763,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578768,"byte_end":10578782,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578787,"byte_end":10578792,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578797,"byte_end":10578804,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580193,"byte_end":10580208,"line_start":203,"line_end":203,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<UnixStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578931,"byte_end":10578960,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578965,"byte_end":10578968,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for reading, this method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10578973,"byte_end":10579048,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579053,"byte_end":10579128,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579133,"byte_end":10579206,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579211,"byte_end":10579221,"line_start":179,"line_end":179,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579226,"byte_end":10579229,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready` or `poll_read`, only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579234,"byte_end":10579307,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579312,"byte_end":10579380,"line_start":182,"line_end":182,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_write_ready` retains a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579385,"byte_end":10579458,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579463,"byte_end":10579494,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579499,"byte_end":10579502,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579507,"byte_end":10579582,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579587,"byte_end":10579662,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579667,"byte_end":10579735,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579740,"byte_end":10579743,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579748,"byte_end":10579766,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579771,"byte_end":10579774,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579779,"byte_end":10579804,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579809,"byte_end":10579812,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for reading.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579817,"byte_end":10579883,"line_start":194,"line_end":194,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for reading.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579888,"byte_end":10579956,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10579961,"byte_end":10580016,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580021,"byte_end":10580024,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580029,"byte_end":10580041,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580046,"byte_end":10580049,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580054,"byte_end":10580129,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580134,"byte_end":10580137,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580142,"byte_end":10580181,"line_start":202,"line_end":202,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582651,"byte_end":10582659,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"try_read","qualname":"<UnixStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580341,"byte_end":10580417,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580422,"byte_end":10580447,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580452,"byte_end":10580455,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580460,"byte_end":10580536,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580541,"byte_end":10580609,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580614,"byte_end":10580688,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580693,"byte_end":10580748,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580753,"byte_end":10580756,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580761,"byte_end":10580831,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580836,"byte_end":10580839,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: UnixStream::readable()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580844,"byte_end":10580886,"line_start":217,"line_end":217,"column_start":5,"column_end":47}},{"value":"/ [`ready()`]: UnixStream::ready()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580891,"byte_end":10580927,"line_start":218,"line_end":218,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580932,"byte_end":10580935,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580940,"byte_end":10580952,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580957,"byte_end":10580960,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10580965,"byte_end":10581036,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581041,"byte_end":10581117,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581122,"byte_end":10581196,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581201,"byte_end":10581250,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581255,"byte_end":10581258,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581263,"byte_end":10581277,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581282,"byte_end":10581285,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581290,"byte_end":10581303,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581308,"byte_end":10581339,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581344,"byte_end":10581370,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581375,"byte_end":10581391,"line_start":232,"line_end":232,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581396,"byte_end":10581399,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581404,"byte_end":10581422,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581427,"byte_end":10581478,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581483,"byte_end":10581511,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581516,"byte_end":10581563,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581568,"byte_end":10581621,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581626,"byte_end":10581685,"line_start":239,"line_end":239,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581690,"byte_end":10581693,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581698,"byte_end":10581712,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581717,"byte_end":10581766,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581771,"byte_end":10581808,"line_start":243,"line_end":243,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581813,"byte_end":10581816,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581821,"byte_end":10581894,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581899,"byte_end":10581945,"line_start":246,"line_end":246,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581950,"byte_end":10581986,"line_start":247,"line_end":247,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581991,"byte_end":10581994,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10581999,"byte_end":10582069,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582074,"byte_end":10582132,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582137,"byte_end":10582182,"line_start":251,"line_end":251,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582187,"byte_end":10582218,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582223,"byte_end":10582249,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582254,"byte_end":10582303,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582308,"byte_end":10582325,"line_start":255,"line_end":255,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582330,"byte_end":10582402,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582407,"byte_end":10582436,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582441,"byte_end":10582458,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582463,"byte_end":10582490,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582495,"byte_end":10582536,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582541,"byte_end":10582558,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582563,"byte_end":10582576,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582581,"byte_end":10582590,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582595,"byte_end":10582598,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582603,"byte_end":10582617,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582622,"byte_end":10582627,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10582632,"byte_end":10582639,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3625},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10585330,"byte_end":10585342,"line_start":334,"line_end":334,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<UnixStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587327,"byte_end":10587335,"line_start":396,"line_end":396,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10585981,"byte_end":10586024,"line_start":355,"line_end":355,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586029,"byte_end":10586032,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586037,"byte_end":10586114,"line_start":357,"line_end":357,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586119,"byte_end":10586149,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586154,"byte_end":10586157,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586162,"byte_end":10586176,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586181,"byte_end":10586184,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586189,"byte_end":10586202,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586207,"byte_end":10586238,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586243,"byte_end":10586269,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586274,"byte_end":10586290,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586295,"byte_end":10586298,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586303,"byte_end":10586321,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586326,"byte_end":10586377,"line_start":368,"line_end":368,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586382,"byte_end":10586410,"line_start":369,"line_end":369,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586415,"byte_end":10586462,"line_start":370,"line_end":370,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586467,"byte_end":10586520,"line_start":371,"line_end":371,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586525,"byte_end":10586584,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586589,"byte_end":10586592,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586597,"byte_end":10586611,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586616,"byte_end":10586665,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586670,"byte_end":10586707,"line_start":376,"line_end":376,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586712,"byte_end":10586715,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586720,"byte_end":10586791,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586796,"byte_end":10586854,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586859,"byte_end":10586911,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586916,"byte_end":10586942,"line_start":381,"line_end":381,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586947,"byte_end":10586973,"line_start":382,"line_end":382,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10586978,"byte_end":10586995,"line_start":383,"line_end":383,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587000,"byte_end":10587072,"line_start":384,"line_end":384,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587077,"byte_end":10587106,"line_start":385,"line_end":385,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587111,"byte_end":10587128,"line_start":386,"line_end":386,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587133,"byte_end":10587160,"line_start":387,"line_end":387,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587165,"byte_end":10587206,"line_start":388,"line_end":388,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587211,"byte_end":10587228,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587233,"byte_end":10587246,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587251,"byte_end":10587260,"line_start":391,"line_end":391,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587265,"byte_end":10587268,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587273,"byte_end":10587287,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587292,"byte_end":10587297,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587302,"byte_end":10587309,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3513},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588700,"byte_end":10588716,"line_start":430,"line_end":430,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<UnixStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587436,"byte_end":10587466,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587471,"byte_end":10587474,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for writing, this method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587479,"byte_end":10587554,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587559,"byte_end":10587634,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587639,"byte_end":10587712,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587717,"byte_end":10587727,"line_start":406,"line_end":406,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587732,"byte_end":10587735,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587740,"byte_end":10587815,"line_start":408,"line_end":408,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587820,"byte_end":10587888,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587893,"byte_end":10587965,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10587970,"byte_end":10588001,"line_start":411,"line_end":411,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588006,"byte_end":10588009,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588014,"byte_end":10588089,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588094,"byte_end":10588169,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588174,"byte_end":10588242,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588247,"byte_end":10588250,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588255,"byte_end":10588273,"line_start":417,"line_end":417,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588278,"byte_end":10588281,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588286,"byte_end":10588311,"line_start":419,"line_end":419,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588316,"byte_end":10588319,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for writing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588324,"byte_end":10588390,"line_start":421,"line_end":421,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for writing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588395,"byte_end":10588463,"line_start":422,"line_end":422,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588468,"byte_end":10588523,"line_start":423,"line_end":423,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588528,"byte_end":10588531,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588536,"byte_end":10588548,"line_start":425,"line_end":425,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588553,"byte_end":10588556,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588561,"byte_end":10588636,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588641,"byte_end":10588644,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588649,"byte_end":10588688,"line_start":429,"line_end":429,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590550,"byte_end":10590559,"line_start":484,"line_end":484,"column_start":12,"column_end":21},"name":"try_write","qualname":"<UnixStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588850,"byte_end":10588920,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588925,"byte_end":10588937,"line_start":435,"line_end":435,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588942,"byte_end":10588945,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10588950,"byte_end":10589022,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589027,"byte_end":10589070,"line_start":438,"line_end":438,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589075,"byte_end":10589078,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589083,"byte_end":10589137,"line_start":440,"line_end":440,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589142,"byte_end":10589145,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589150,"byte_end":10589162,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589167,"byte_end":10589170,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589175,"byte_end":10589249,"line_start":444,"line_end":444,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589254,"byte_end":10589324,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589329,"byte_end":10589378,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589383,"byte_end":10589386,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589391,"byte_end":10589405,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589410,"byte_end":10589413,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589418,"byte_end":10589431,"line_start":450,"line_end":450,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589436,"byte_end":10589467,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589472,"byte_end":10589498,"line_start":452,"line_end":452,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589503,"byte_end":10589519,"line_start":453,"line_end":453,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589524,"byte_end":10589527,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589532,"byte_end":10589550,"line_start":455,"line_end":455,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589555,"byte_end":10589606,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589611,"byte_end":10589639,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589644,"byte_end":10589691,"line_start":458,"line_end":458,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589696,"byte_end":10589749,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589754,"byte_end":10589813,"line_start":460,"line_end":460,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589818,"byte_end":10589821,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589826,"byte_end":10589840,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589845,"byte_end":10589894,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589899,"byte_end":10589936,"line_start":464,"line_end":464,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589941,"byte_end":10589944,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10589949,"byte_end":10590020,"line_start":466,"line_end":466,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590025,"byte_end":10590083,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590088,"byte_end":10590140,"line_start":468,"line_end":468,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590145,"byte_end":10590171,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590176,"byte_end":10590202,"line_start":470,"line_end":470,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590207,"byte_end":10590224,"line_start":471,"line_end":471,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590229,"byte_end":10590301,"line_start":472,"line_end":472,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590306,"byte_end":10590335,"line_start":473,"line_end":473,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590340,"byte_end":10590357,"line_start":474,"line_end":474,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590362,"byte_end":10590389,"line_start":475,"line_end":475,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590394,"byte_end":10590435,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590440,"byte_end":10590457,"line_start":477,"line_end":477,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590462,"byte_end":10590475,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590480,"byte_end":10590489,"line_start":479,"line_end":479,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590494,"byte_end":10590497,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590502,"byte_end":10590516,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590521,"byte_end":10590526,"line_start":482,"line_end":482,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590531,"byte_end":10590538,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591416,"byte_end":10591424,"line_start":504,"line_end":504,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590724,"byte_end":10590793,"line_start":490,"line_end":490,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590798,"byte_end":10590801,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixStream from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590806,"byte_end":10590876,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590881,"byte_end":10590949,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying stream; it is left up to the user to set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10590954,"byte_end":10591027,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591032,"byte_end":10591060,"line_start":495,"line_end":495,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591065,"byte_end":10591068,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591073,"byte_end":10591085,"line_start":497,"line_end":497,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591090,"byte_end":10591093,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591098,"byte_end":10591158,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591163,"byte_end":10591166,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591171,"byte_end":10591241,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591246,"byte_end":10591319,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591324,"byte_end":10591404,"line_start":503,"line_end":503,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593234,"byte_end":10593242,"line_start":549,"line_end":549,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixStream`] into a [`std::os::unix::net::UnixStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixStream`] into a [`std::os::unix::net::UnixStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591625,"byte_end":10591705,"line_start":511,"line_end":511,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591710,"byte_end":10591713,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixStream`] will have nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591718,"byte_end":10591791,"line_start":513,"line_end":513,"column_start":5,"column_end":78}},{"value":"/ mode set as `true`.  Use [`set_nonblocking`] to change the blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591796,"byte_end":10591867,"line_start":514,"line_end":514,"column_start":5,"column_end":76}},{"value":"/ mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591872,"byte_end":10591891,"line_start":515,"line_end":515,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591896,"byte_end":10591899,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591904,"byte_end":10591918,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591923,"byte_end":10591926,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591931,"byte_end":10591938,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591943,"byte_end":10591969,"line_start":520,"line_end":520,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10591974,"byte_end":10591996,"line_start":521,"line_end":521,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592001,"byte_end":10592034,"line_start":522,"line_end":522,"column_start":5,"column_end":38}},{"value":"/ # use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592039,"byte_end":10592072,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592077,"byte_end":10592112,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592117,"byte_end":10592120,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592125,"byte_end":10592143,"line_start":526,"line_end":526,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592148,"byte_end":10592199,"line_start":527,"line_end":527,"column_start":5,"column_end":56}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592204,"byte_end":10592251,"line_start":528,"line_end":528,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592256,"byte_end":10592309,"line_start":529,"line_end":529,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592314,"byte_end":10592317,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592322,"byte_end":10592355,"line_start":531,"line_end":531,"column_start":5,"column_end":38}},{"value":"/     let listener = UnixListener::bind(&bind_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592360,"byte_end":10592415,"line_start":532,"line_end":532,"column_start":5,"column_end":60}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592420,"byte_end":10592461,"line_start":533,"line_end":533,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream = UnixStream::connect(bind_path).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592466,"byte_end":10592541,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592546,"byte_end":10592603,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592608,"byte_end":10592619,"line_start":536,"line_end":536,"column_start":5,"column_end":16}},{"value":"/     let (tokio_unix_stream, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592624,"byte_end":10592686,"line_start":537,"line_end":537,"column_start":5,"column_end":67}},{"value":"/     let mut std_unix_stream = tokio_unix_stream.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592691,"byte_end":10592755,"line_start":538,"line_end":538,"column_start":5,"column_end":69}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592760,"byte_end":10592826,"line_start":539,"line_end":539,"column_start":5,"column_end":71}},{"value":"/     std_unix_stream.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592831,"byte_end":10592879,"line_start":540,"line_end":540,"column_start":5,"column_end":53}},{"value":"/     std_unix_stream.read_exact(&mut data)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592884,"byte_end":10592931,"line_start":541,"line_end":541,"column_start":5,"column_end":52}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592936,"byte_end":10592979,"line_start":542,"line_end":542,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10592984,"byte_end":10592998,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593003,"byte_end":10593008,"line_start":544,"line_end":544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593013,"byte_end":10593020,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::UnixStream`]: UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593025,"byte_end":10593067,"line_start":546,"line_end":546,"column_start":5,"column_end":47}},{"value":"/ [`std::os::unix::net::UnixStream`]: std::os::unix::net::UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593072,"byte_end":10593142,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixStream::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593147,"byte_end":10593222,"line_start":548,"line_end":548,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593760,"byte_end":10593764,"line_start":561,"line_end":561,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593480,"byte_end":10593529,"line_start":556,"line_end":556,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593534,"byte_end":10593537,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593542,"byte_end":10593613,"line_start":558,"line_end":558,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593618,"byte_end":10593688,"line_start":559,"line_end":559,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10593693,"byte_end":10593748,"line_start":560,"line_end":560,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10594207,"byte_end":10594217,"line_start":575,"line_end":575,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10594127,"byte_end":10594195,"line_start":574,"line_end":574,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10594390,"byte_end":10594399,"line_start":580,"line_end":580,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10594309,"byte_end":10594378,"line_start":579,"line_end":579,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10594584,"byte_end":10594593,"line_start":585,"line_end":585,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10594490,"byte_end":10594572,"line_start":584,"line_end":584,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10594729,"byte_end":10594739,"line_start":590,"line_end":590,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10594670,"byte_end":10594717,"line_start":589,"line_end":589,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595715,"byte_end":10595720,"line_start":613,"line_end":613,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595343,"byte_end":10595379,"line_start":605,"line_end":605,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595384,"byte_end":10595461,"line_start":606,"line_end":606,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595466,"byte_end":10595512,"line_start":607,"line_end":607,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595517,"byte_end":10595520,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595525,"byte_end":10595604,"line_start":609,"line_end":609,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595609,"byte_end":10595652,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595657,"byte_end":10595660,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595665,"byte_end":10595703,"line_start":612,"line_end":612,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596362,"byte_end":10596372,"line_start":628,"line_end":628,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595805,"byte_end":10595883,"line_start":617,"line_end":617,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595888,"byte_end":10595934,"line_start":618,"line_end":618,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595939,"byte_end":10595942,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10595947,"byte_end":10596025,"line_start":620,"line_end":620,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596030,"byte_end":10596078,"line_start":621,"line_end":621,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596083,"byte_end":10596086,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596091,"byte_end":10596165,"line_start":623,"line_end":623,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `UnixStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596170,"byte_end":10596247,"line_start":624,"line_end":624,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596252,"byte_end":10596255,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596260,"byte_end":10596288,"line_start":626,"line_end":626,"column_start":5,"column_end":33}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596293,"byte_end":10596350,"line_start":627,"line_end":627,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3629},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599411,"byte_end":10599416,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred {  }","parent":null,"children":[{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599320,"byte_end":10599348,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599660,"byte_end":10599663,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"uid","qualname":"<UCred>::uid","value":"pub fn uid(&Self) -> uid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets UID (user ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets UID (user ID) of the process.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599610,"byte_end":10599648,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3558},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599761,"byte_end":10599764,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"gid","qualname":"<UCred>::gid","value":"pub fn gid(&Self) -> gid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets GID (group ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets GID (group ID) of the process.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599710,"byte_end":10599749,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10600018,"byte_end":10600021,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"pid","qualname":"<UCred>::pid","value":"pub fn pid(&Self) -> Option<pid_t>","parent":null,"children":[],"decl_id":null,"docs":" Gets PID (process ID) of the process.","sig":null,"attributes":[{"value":"/ Gets PID (process ID) of the process.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599811,"byte_end":10599852,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599857,"byte_end":10599860,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is only implemented under Linux, Android, iOS, macOS, Solaris and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599865,"byte_end":10599939,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ Illumos. On other plaforms this will always return `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599944,"byte_end":10600006,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":585},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":103598,"byte_end":103604,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":103535,"byte_end":103588,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":586},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":103657,"byte_end":103662,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":103619,"byte_end":103647,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3720},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":3721},{"krate":0,"index":3736},{"krate":0,"index":4275},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4525},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4582},{"krate":0,"index":4583},{"krate":0,"index":4593},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4660},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4772},{"krate":0,"index":4776},{"krate":0,"index":4778},{"krate":0,"index":4782},{"krate":0,"index":4759},{"krate":0,"index":4760}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10606938,"byte_end":10606960,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10606961,"byte_end":10606964,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10606965,"byte_end":10607038,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607039,"byte_end":10607112,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607113,"byte_end":10607116,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607117,"byte_end":10607195,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607196,"byte_end":10607253,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607254,"byte_end":10607324,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607325,"byte_end":10607397,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607398,"byte_end":10607401,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607402,"byte_end":10607482,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607483,"byte_end":10607563,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607564,"byte_end":10607645,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607646,"byte_end":10607726,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607727,"byte_end":10607730,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607731,"byte_end":10607742,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607743,"byte_end":10607746,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607747,"byte_end":10607826,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607827,"byte_end":10607836,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607837,"byte_end":10607840,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607841,"byte_end":10607854,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607855,"byte_end":10607887,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607888,"byte_end":10607937,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607938,"byte_end":10607941,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607942,"byte_end":10607960,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10607961,"byte_end":10608024,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608025,"byte_end":10608091,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608092,"byte_end":10608095,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608096,"byte_end":10608110,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608111,"byte_end":10608170,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608171,"byte_end":10608174,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608175,"byte_end":10608212,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608213,"byte_end":10608253,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608254,"byte_end":10608257,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608258,"byte_end":10608338,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608339,"byte_end":10608361,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608362,"byte_end":10608425,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608426,"byte_end":10608466,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608467,"byte_end":10608517,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608518,"byte_end":10608553,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608554,"byte_end":10608589,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608590,"byte_end":10608672,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608673,"byte_end":10608708,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608709,"byte_end":10608734,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608735,"byte_end":10608757,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608758,"byte_end":10608761,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608762,"byte_end":10608804,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608805,"byte_end":10608877,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608878,"byte_end":10608955,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608956,"byte_end":10608987,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10608988,"byte_end":10609009,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609010,"byte_end":10609027,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609028,"byte_end":10609043,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609044,"byte_end":10609053,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609054,"byte_end":10609059,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609060,"byte_end":10609067,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609068,"byte_end":10609071,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609072,"byte_end":10609150,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609151,"byte_end":10609229,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609230,"byte_end":10609291,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609292,"byte_end":10609295,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609296,"byte_end":10609349,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609350,"byte_end":10609353,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609354,"byte_end":10609367,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609368,"byte_end":10609400,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609401,"byte_end":10609450,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609451,"byte_end":10609483,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609484,"byte_end":10609487,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609488,"byte_end":10609545,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609546,"byte_end":10609575,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609576,"byte_end":10609610,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609611,"byte_end":10609614,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609615,"byte_end":10609645,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609646,"byte_end":10609673,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609674,"byte_end":10609744,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609745,"byte_end":10609748,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609749,"byte_end":10609767,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609768,"byte_end":10609831,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609832,"byte_end":10609835,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609836,"byte_end":10609877,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609878,"byte_end":10609922,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609923,"byte_end":10609926,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10609927,"byte_end":10610011,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610012,"byte_end":10610038,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610039,"byte_end":10610106,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610107,"byte_end":10610151,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610152,"byte_end":10610206,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610207,"byte_end":10610246,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610247,"byte_end":10610286,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610287,"byte_end":10610373,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610374,"byte_end":10610413,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610414,"byte_end":10610443,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610444,"byte_end":10610470,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610471,"byte_end":10610474,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610475,"byte_end":10610521,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610522,"byte_end":10610598,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610599,"byte_end":10610680,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610681,"byte_end":10610716,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610717,"byte_end":10610742,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610743,"byte_end":10610764,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610765,"byte_end":10610784,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610785,"byte_end":10610798,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610799,"byte_end":10610809,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610810,"byte_end":10610815,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610816,"byte_end":10610823,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610824,"byte_end":10610827,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610828,"byte_end":10610857,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610858,"byte_end":10610861,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610862,"byte_end":10610940,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10610941,"byte_end":10611017,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611018,"byte_end":10611060,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611061,"byte_end":10611064,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611065,"byte_end":10611096,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611097,"byte_end":10611100,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611101,"byte_end":10611176,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611177,"byte_end":10611255,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611256,"byte_end":10611334,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611335,"byte_end":10611419,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611420,"byte_end":10611465,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611466,"byte_end":10611473,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611474,"byte_end":10611497,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611498,"byte_end":10611501,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611502,"byte_end":10611561,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611562,"byte_end":10611609,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611610,"byte_end":10611624,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611625,"byte_end":10611632,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611633,"byte_end":10611636,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611637,"byte_end":10611712,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611713,"byte_end":10611788,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611789,"byte_end":10611792,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611793,"byte_end":10611826,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611827,"byte_end":10611830,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611831,"byte_end":10611909,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611910,"byte_end":10611989,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10611990,"byte_end":10612016,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612017,"byte_end":10612024,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612025,"byte_end":10612048,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612049,"byte_end":10612052,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612053,"byte_end":10612112,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612113,"byte_end":10612170,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612171,"byte_end":10612189,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612190,"byte_end":10612204,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612205,"byte_end":10612212,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612213,"byte_end":10612216,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612217,"byte_end":10612242,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612243,"byte_end":10612246,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612247,"byte_end":10612321,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612322,"byte_end":10612402,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612403,"byte_end":10612482,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612483,"byte_end":10612562,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612563,"byte_end":10612632,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612633,"byte_end":10612636,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612637,"byte_end":10612671,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612672,"byte_end":10612675,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612676,"byte_end":10612755,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612756,"byte_end":10612840,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612841,"byte_end":10612851,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612852,"byte_end":10612855,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612856,"byte_end":10612934,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10612935,"byte_end":10613014,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613015,"byte_end":10613073,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613074,"byte_end":10613077,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613078,"byte_end":10613102,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613103,"byte_end":10613127,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613128,"byte_end":10613162,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613163,"byte_end":10613201,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613202,"byte_end":10613248,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613249,"byte_end":10613299,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613300,"byte_end":10613374,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613375,"byte_end":10613455,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613456,"byte_end":10613518,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613519,"byte_end":10613585,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10613586,"byte_end":10613650,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10648805,"byte_end":10648814,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4258}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649303,"byte_end":10649315,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649223,"byte_end":10649291,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649769,"byte_end":10649777,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649390,"byte_end":10649452,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649457,"byte_end":10649460,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649465,"byte_end":10649479,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649484,"byte_end":10649487,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649492,"byte_end":10649499,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649504,"byte_end":10649523,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649528,"byte_end":10649531,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649536,"byte_end":10649554,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649559,"byte_end":10649580,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649585,"byte_end":10649623,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649628,"byte_end":10649655,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649660,"byte_end":10649690,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649695,"byte_end":10649698,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649703,"byte_end":10649735,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649740,"byte_end":10649745,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649750,"byte_end":10649757,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650632,"byte_end":10650642,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649851,"byte_end":10649930,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649935,"byte_end":10649938,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649943,"byte_end":10649955,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649960,"byte_end":10649963,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10649968,"byte_end":10650042,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650047,"byte_end":10650122,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650127,"byte_end":10650185,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650190,"byte_end":10650193,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650198,"byte_end":10650212,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650217,"byte_end":10650220,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650225,"byte_end":10650244,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650249,"byte_end":10650268,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650273,"byte_end":10650276,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650281,"byte_end":10650299,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650304,"byte_end":10650325,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650330,"byte_end":10650368,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650373,"byte_end":10650400,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650405,"byte_end":10650435,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650440,"byte_end":10650443,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650448,"byte_end":10650475,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650480,"byte_end":10650528,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650533,"byte_end":10650584,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650589,"byte_end":10650598,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650603,"byte_end":10650608,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650613,"byte_end":10650620,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651407,"byte_end":10651421,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650783,"byte_end":10650852,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650857,"byte_end":10650929,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650934,"byte_end":10650947,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650952,"byte_end":10650955,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650960,"byte_end":10650974,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650979,"byte_end":10650982,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10650987,"byte_end":10651006,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651011,"byte_end":10651030,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651035,"byte_end":10651038,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651043,"byte_end":10651061,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651066,"byte_end":10651087,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651092,"byte_end":10651130,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651135,"byte_end":10651162,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651167,"byte_end":10651197,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651202,"byte_end":10651205,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651210,"byte_end":10651260,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651265,"byte_end":10651313,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651318,"byte_end":10651359,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651364,"byte_end":10651373,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651378,"byte_end":10651383,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651388,"byte_end":10651395,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4259},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671405,"byte_end":10671415,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4262}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672718,"byte_end":10672723,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671761,"byte_end":10671807,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671812,"byte_end":10671815,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671820,"byte_end":10671889,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671894,"byte_end":10671964,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671969,"byte_end":10672022,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672027,"byte_end":10672030,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672035,"byte_end":10672046,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672051,"byte_end":10672071,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672076,"byte_end":10672079,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672084,"byte_end":10672102,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672107,"byte_end":10672128,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672133,"byte_end":10672169,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672174,"byte_end":10672177,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672182,"byte_end":10672222,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672227,"byte_end":10672286,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672291,"byte_end":10672305,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672310,"byte_end":10672321,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672326,"byte_end":10672329,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672334,"byte_end":10672374,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672379,"byte_end":10672438,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672443,"byte_end":10672458,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672463,"byte_end":10672474,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672479,"byte_end":10672482,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672487,"byte_end":10672518,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672523,"byte_end":10672549,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672554,"byte_end":10672562,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672567,"byte_end":10672570,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672575,"byte_end":10672605,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672610,"byte_end":10672671,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672676,"byte_end":10672684,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672689,"byte_end":10672694,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672699,"byte_end":10672706,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4538},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727806,"byte_end":10727813,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4545},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4549}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10726850,"byte_end":10726908,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10726909,"byte_end":10726912,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10726913,"byte_end":10726985,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10726986,"byte_end":10727034,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727035,"byte_end":10727038,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727039,"byte_end":10727116,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727117,"byte_end":10727156,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727157,"byte_end":10727160,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727161,"byte_end":10727238,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727239,"byte_end":10727252,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727253,"byte_end":10727256,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727257,"byte_end":10727290,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727291,"byte_end":10727355,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727356,"byte_end":10727424,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727425,"byte_end":10727428,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727429,"byte_end":10727443,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727444,"byte_end":10727447,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727448,"byte_end":10727455,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727456,"byte_end":10727488,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727489,"byte_end":10727492,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727493,"byte_end":10727508,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727509,"byte_end":10727533,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727534,"byte_end":10727583,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727584,"byte_end":10727614,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727615,"byte_end":10727657,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727658,"byte_end":10727705,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727706,"byte_end":10727726,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727727,"byte_end":10727749,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727750,"byte_end":10727753,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727754,"byte_end":10727780,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727781,"byte_end":10727786,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10727787,"byte_end":10727794,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729334,"byte_end":10729352,"line_start":94,"line_end":94,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729019,"byte_end":10729088,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729093,"byte_end":10729096,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729101,"byte_end":10729162,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729167,"byte_end":10729170,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ To spawn non-`Send` tasks on the resulting runtime, combine it with a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729175,"byte_end":10729248,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ [`LocalSet`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729253,"byte_end":10729270,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729275,"byte_end":10729278,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`LocalSet`]: crate::task::LocalSet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729283,"byte_end":10729322,"line_start":93,"line_end":93,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4558},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731223,"byte_end":10731233,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10730730,"byte_end":10730768,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10730773,"byte_end":10730776,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10730781,"byte_end":10730852,"line_start":145,"line_end":145,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10730857,"byte_end":10730933,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10730938,"byte_end":10730992,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10730997,"byte_end":10731000,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731005,"byte_end":10731019,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731024,"byte_end":10731027,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731032,"byte_end":10731039,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731044,"byte_end":10731067,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731072,"byte_end":10731075,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731080,"byte_end":10731129,"line_start":154,"line_end":154,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731134,"byte_end":10731155,"line_start":155,"line_end":155,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731160,"byte_end":10731176,"line_start":156,"line_end":156,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731181,"byte_end":10731199,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731204,"byte_end":10731211,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4559},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732910,"byte_end":10732924,"line_start":217,"line_end":217,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731461,"byte_end":10731522,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731527,"byte_end":10731530,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This can be any number above 0 though it is advised to keep this value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731535,"byte_end":10731609,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ on the smaller side.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731614,"byte_end":10731638,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731643,"byte_end":10731646,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731651,"byte_end":10731664,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731669,"byte_end":10731672,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731677,"byte_end":10731746,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731751,"byte_end":10731754,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731759,"byte_end":10731770,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731775,"byte_end":10731778,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731783,"byte_end":10731856,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731861,"byte_end":10731922,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731927,"byte_end":10731930,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731935,"byte_end":10731938,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731943,"byte_end":10731957,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731962,"byte_end":10731965,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10731970,"byte_end":10732014,"line_start":185,"line_end":185,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732019,"byte_end":10732022,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732027,"byte_end":10732034,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732039,"byte_end":10732062,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732067,"byte_end":10732070,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732075,"byte_end":10732144,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732149,"byte_end":10732198,"line_start":191,"line_end":191,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732203,"byte_end":10732229,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732234,"byte_end":10732250,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732255,"byte_end":10732273,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732278,"byte_end":10732281,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732286,"byte_end":10732314,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732319,"byte_end":10732326,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732331,"byte_end":10732334,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732339,"byte_end":10732430,"line_start":199,"line_end":199,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732435,"byte_end":10732438,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732443,"byte_end":10732450,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732455,"byte_end":10732478,"line_start":202,"line_end":202,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732483,"byte_end":10732486,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732491,"byte_end":10732548,"line_start":204,"line_end":204,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732553,"byte_end":10732583,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732588,"byte_end":10732639,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732644,"byte_end":10732660,"line_start":207,"line_end":207,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732665,"byte_end":10732683,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732688,"byte_end":10732691,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732696,"byte_end":10732761,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732766,"byte_end":10732797,"line_start":211,"line_end":211,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732802,"byte_end":10732809,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732814,"byte_end":10732817,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732822,"byte_end":10732833,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732838,"byte_end":10732841,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10732846,"byte_end":10732898,"line_start":216,"line_end":216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4560},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734049,"byte_end":10734069,"line_start":245,"line_end":245,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the limit for additional threads spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies the limit for additional threads spawned by the Runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733091,"byte_end":10733161,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733166,"byte_end":10733169,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ These threads are used for blocking operations like tasks spawned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733174,"byte_end":10733243,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ through [`spawn_blocking`]. Unlike the [`worker_threads`], they are not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733248,"byte_end":10733323,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ always active and will exit if left idle for too long. You can change","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733328,"byte_end":10733401,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ this timeout duration with [`thread_keep_alive`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733406,"byte_end":10733459,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733464,"byte_end":10733467,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733472,"byte_end":10733501,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733506,"byte_end":10733509,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733514,"byte_end":10733525,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733530,"byte_end":10733533,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733538,"byte_end":10733590,"line_start":234,"line_end":234,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733595,"byte_end":10733598,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Upgrading from 0.x","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733603,"byte_end":10733627,"line_start":236,"line_end":236,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733632,"byte_end":10733635,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ In old versions `max_threads` limited both blocking and worker threads, but the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733640,"byte_end":10733723,"line_start":238,"line_end":238,"column_start":5,"column_end":88}},{"value":"/ current `max_blocking_threads` does not include async worker threads in the count.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733728,"byte_end":10733814,"line_start":239,"line_end":239,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733819,"byte_end":10733822,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733827,"byte_end":10733881,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/ [`worker_threads`]: Self::worker_threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733886,"byte_end":10733930,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/ [`thread_keep_alive`]: Self::thread_keep_alive","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10733935,"byte_end":10733985,"line_start":243,"line_end":243,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4561},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734625,"byte_end":10734636,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734242,"byte_end":10734306,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734311,"byte_end":10734314,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734319,"byte_end":10734366,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734371,"byte_end":10734374,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734379,"byte_end":10734393,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734398,"byte_end":10734401,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734406,"byte_end":10734413,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734418,"byte_end":10734443,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734448,"byte_end":10734451,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734456,"byte_end":10734477,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734482,"byte_end":10734531,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734536,"byte_end":10734567,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734572,"byte_end":10734589,"line_start":263,"line_end":263,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734594,"byte_end":10734601,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734606,"byte_end":10734613,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735485,"byte_end":10735499,"line_start":292,"line_end":292,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734810,"byte_end":10734906,"line_start":272,"line_end":272,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734911,"byte_end":10734914,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734919,"byte_end":10734981,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734986,"byte_end":10734989,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10734994,"byte_end":10735008,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735013,"byte_end":10735016,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735021,"byte_end":10735028,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735033,"byte_end":10735058,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735063,"byte_end":10735116,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735121,"byte_end":10735124,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735129,"byte_end":10735150,"line_start":282,"line_end":282,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735155,"byte_end":10735204,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735209,"byte_end":10735237,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735242,"byte_end":10735305,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735310,"byte_end":10735371,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735376,"byte_end":10735412,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735417,"byte_end":10735427,"line_start":288,"line_end":288,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735432,"byte_end":10735449,"line_start":289,"line_end":289,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735454,"byte_end":10735461,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735466,"byte_end":10735473,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736264,"byte_end":10736281,"line_start":319,"line_end":319,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735675,"byte_end":10735729,"line_start":300,"line_end":300,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735734,"byte_end":10735737,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735742,"byte_end":10735814,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735819,"byte_end":10735852,"line_start":303,"line_end":303,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735857,"byte_end":10735860,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735865,"byte_end":10735933,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10735938,"byte_end":10735999,"line_start":306,"line_end":306,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736004,"byte_end":10736007,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736012,"byte_end":10736026,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736031,"byte_end":10736034,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736039,"byte_end":10736046,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736051,"byte_end":10736076,"line_start":311,"line_end":311,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736081,"byte_end":10736084,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736089,"byte_end":10736110,"line_start":313,"line_end":313,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736115,"byte_end":10736164,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736169,"byte_end":10736206,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736211,"byte_end":10736228,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736233,"byte_end":10736240,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736245,"byte_end":10736252,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4567},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736901,"byte_end":10736916,"line_start":343,"line_end":343,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736388,"byte_end":10736463,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736468,"byte_end":10736483,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736488,"byte_end":10736491,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736496,"byte_end":10736558,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736563,"byte_end":10736566,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736571,"byte_end":10736585,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736590,"byte_end":10736593,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736598,"byte_end":10736605,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736610,"byte_end":10736635,"line_start":332,"line_end":332,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736640,"byte_end":10736643,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736648,"byte_end":10736669,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736674,"byte_end":10736728,"line_start":335,"line_end":335,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736733,"byte_end":10736762,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736767,"byte_end":10736806,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736811,"byte_end":10736821,"line_start":338,"line_end":338,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736826,"byte_end":10736843,"line_start":339,"line_end":339,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736848,"byte_end":10736855,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736860,"byte_end":10736867,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10736872,"byte_end":10736889,"line_start":342,"line_end":342,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4569},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737557,"byte_end":10737571,"line_start":369,"line_end":369,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737088,"byte_end":10737139,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737144,"byte_end":10737147,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737152,"byte_end":10737214,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737219,"byte_end":10737222,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737227,"byte_end":10737241,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737246,"byte_end":10737249,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737254,"byte_end":10737261,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737266,"byte_end":10737291,"line_start":358,"line_end":358,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737296,"byte_end":10737299,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737304,"byte_end":10737325,"line_start":360,"line_end":360,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737330,"byte_end":10737384,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737389,"byte_end":10737417,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737422,"byte_end":10737462,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737467,"byte_end":10737477,"line_start":364,"line_end":364,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737482,"byte_end":10737499,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737504,"byte_end":10737511,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737516,"byte_end":10737523,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737528,"byte_end":10737545,"line_start":368,"line_end":368,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738135,"byte_end":10738140,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737743,"byte_end":10737780,"line_start":377,"line_end":377,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737785,"byte_end":10737788,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737793,"byte_end":10737853,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737858,"byte_end":10737861,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737866,"byte_end":10737880,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737885,"byte_end":10737888,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737893,"byte_end":10737900,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737905,"byte_end":10737937,"line_start":384,"line_end":384,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737942,"byte_end":10737945,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10737950,"byte_end":10738009,"line_start":386,"line_end":386,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738014,"byte_end":10738017,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738022,"byte_end":10738045,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738050,"byte_end":10738099,"line_start":389,"line_end":389,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738104,"byte_end":10738111,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738116,"byte_end":10738123,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4573},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739319,"byte_end":10739336,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738810,"byte_end":10738870,"line_start":413,"line_end":413,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738875,"byte_end":10738878,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738883,"byte_end":10738954,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10738959,"byte_end":10739003,"line_start":416,"line_end":416,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739008,"byte_end":10739011,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739016,"byte_end":10739029,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739034,"byte_end":10739037,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739042,"byte_end":10739049,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739054,"byte_end":10739079,"line_start":421,"line_end":421,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739084,"byte_end":10739114,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739119,"byte_end":10739122,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739127,"byte_end":10739148,"line_start":424,"line_end":424,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739153,"byte_end":10739202,"line_start":425,"line_end":425,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739207,"byte_end":10739261,"line_start":426,"line_end":426,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739266,"byte_end":10739283,"line_start":427,"line_end":427,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739288,"byte_end":10739295,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10739300,"byte_end":10739307,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10741083,"byte_end":10741092,"line_start":483,"line_end":483,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4687},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10741616,"byte_end":10741627,"line_start":506,"line_end":506,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4724},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752427,"byte_end":10752433,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752158,"byte_end":10752184,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752185,"byte_end":10752188,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752189,"byte_end":10752277,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752278,"byte_end":10752328,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752329,"byte_end":10752332,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752333,"byte_end":10752391,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4735},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753179,"byte_end":10753189,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":4737},{"krate":0,"index":4738}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752884,"byte_end":10752910,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752911,"byte_end":10752914,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752915,"byte_end":10752996,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10752997,"byte_end":10753029,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753030,"byte_end":10753033,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753034,"byte_end":10753091,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"must_use = \"Creating and dropping a guard does nothing\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753109,"byte_end":10753167,"line_start":42,"line_end":42,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753663,"byte_end":10753668,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753273,"byte_end":10753348,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753353,"byte_end":10753431,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753436,"byte_end":10753504,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753509,"byte_end":10753512,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753517,"byte_end":10753557,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753562,"byte_end":10753609,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753614,"byte_end":10753651,"line_start":55,"line_end":55,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4636},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755162,"byte_end":10755169,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753813,"byte_end":10753877,"line_start":63,"line_end":63,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753882,"byte_end":10753885,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753890,"byte_end":10753901,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753906,"byte_end":10753909,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753914,"byte_end":10754008,"line_start":67,"line_end":67,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754013,"byte_end":10754105,"line_start":68,"line_end":68,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754110,"byte_end":10754186,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754191,"byte_end":10754194,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754199,"byte_end":10754213,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754218,"byte_end":10754221,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754226,"byte_end":10754308,"line_start":73,"line_end":73,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754313,"byte_end":10754359,"line_start":74,"line_end":74,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754364,"byte_end":10754367,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754372,"byte_end":10754379,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754384,"byte_end":10754406,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754411,"byte_end":10754445,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754450,"byte_end":10754466,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754471,"byte_end":10754510,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754515,"byte_end":10754537,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754542,"byte_end":10754573,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754578,"byte_end":10754581,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754586,"byte_end":10754627,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754632,"byte_end":10754667,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754672,"byte_end":10754696,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754701,"byte_end":10754757,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754762,"byte_end":10754769,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754774,"byte_end":10754777,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754782,"byte_end":10754800,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754805,"byte_end":10754832,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754837,"byte_end":10754922,"line_start":92,"line_end":92,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754927,"byte_end":10754968,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10754973,"byte_end":10755018,"line_start":94,"line_end":94,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755023,"byte_end":10755066,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755071,"byte_end":10755078,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755083,"byte_end":10755112,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755117,"byte_end":10755126,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755131,"byte_end":10755138,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755143,"byte_end":10755150,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4637},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755443,"byte_end":10755454,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755250,"byte_end":10755310,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755315,"byte_end":10755318,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755323,"byte_end":10755374,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755379,"byte_end":10755382,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755387,"byte_end":10755431,"line_start":109,"line_end":109,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756409,"byte_end":10756414,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755557,"byte_end":10755599,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755604,"byte_end":10755607,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755612,"byte_end":10755683,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755688,"byte_end":10755763,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755768,"byte_end":10755791,"line_start":118,"line_end":118,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755796,"byte_end":10755799,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755804,"byte_end":10755863,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755868,"byte_end":10755871,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755876,"byte_end":10755897,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755902,"byte_end":10755905,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755910,"byte_end":10755924,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755929,"byte_end":10755932,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755937,"byte_end":10755944,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755949,"byte_end":10755981,"line_start":127,"line_end":127,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755986,"byte_end":10755989,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10755994,"byte_end":10756010,"line_start":129,"line_end":129,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756015,"byte_end":10756040,"line_start":130,"line_end":130,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756045,"byte_end":10756082,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756087,"byte_end":10756124,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756129,"byte_end":10756158,"line_start":133,"line_end":133,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756163,"byte_end":10756166,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756171,"byte_end":10756226,"line_start":135,"line_end":135,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756231,"byte_end":10756255,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756260,"byte_end":10756311,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756316,"byte_end":10756323,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756328,"byte_end":10756335,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756340,"byte_end":10756347,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756383,"byte_end":10756395,"line_start":141,"line_end":141,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4640},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757317,"byte_end":10757331,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756714,"byte_end":10756780,"line_start":152,"line_end":152,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756785,"byte_end":10756800,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756805,"byte_end":10756808,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756813,"byte_end":10756827,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756832,"byte_end":10756835,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756840,"byte_end":10756847,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756852,"byte_end":10756884,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756889,"byte_end":10756892,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756897,"byte_end":10756913,"line_start":160,"line_end":160,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756918,"byte_end":10756943,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756948,"byte_end":10756985,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10756990,"byte_end":10757027,"line_start":163,"line_end":163,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757032,"byte_end":10757061,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757066,"byte_end":10757069,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757074,"byte_end":10757140,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757145,"byte_end":10757175,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757180,"byte_end":10757231,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757236,"byte_end":10757243,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757248,"byte_end":10757255,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10757291,"byte_end":10757303,"line_start":171,"line_end":171,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761349,"byte_end":10761357,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on this `Handle`'s associated `Runtime`.","sig":null,"attributes":[{"value":"/ Run a future to completion on this `Handle`'s associated `Runtime`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758522,"byte_end":10758593,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758598,"byte_end":10758601,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the current thread, blocking until it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758606,"byte_end":10758680,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758685,"byte_end":10758758,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758763,"byte_end":10758828,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758833,"byte_end":10758836,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ When this is used on a `current_thread` runtime, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758841,"byte_end":10758902,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ [`Runtime::block_on`] method can drive the IO and timer drivers, but the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758907,"byte_end":10758983,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ `Handle::block_on` method cannot drive them. This means that, when using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10758988,"byte_end":10759064,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ this method on a current_thread runtime, anything that relies on IO or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759069,"byte_end":10759143,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ timers will not work unless there is another thread currently calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759148,"byte_end":10759221,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ [`Runtime::block_on`] on the same runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759226,"byte_end":10759272,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759277,"byte_end":10759280,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # If the runtime has been shut down","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759285,"byte_end":10759324,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759329,"byte_end":10759332,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If the `Handle`'s associated `Runtime` has been shut down (through","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759337,"byte_end":10759407,"line_start":221,"line_end":221,"column_start":5,"column_end":75}},{"value":"/ [`Runtime::shutdown_background`], [`Runtime::shutdown_timeout`], or by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759412,"byte_end":10759486,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ dropping it) and `Handle::block_on` is used it might return an error or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759491,"byte_end":10759566,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ panic. Specifically IO resources will return an error and timers will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759571,"byte_end":10759644,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ panic. Runtime independent futures will run as normal.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759649,"byte_end":10759707,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759712,"byte_end":10759715,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759720,"byte_end":10759732,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759737,"byte_end":10759740,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, if called within an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759745,"byte_end":10759820,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ asynchronous execution context, or if a timer future is executed on a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759825,"byte_end":10759898,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ runtime that has been shut down.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759903,"byte_end":10759939,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759944,"byte_end":10759947,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759952,"byte_end":10759966,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759971,"byte_end":10759974,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759979,"byte_end":10759986,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10759991,"byte_end":10760023,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760028,"byte_end":10760031,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760036,"byte_end":10760061,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760066,"byte_end":10760104,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760109,"byte_end":10760112,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760117,"byte_end":10760154,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760159,"byte_end":10760188,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760193,"byte_end":10760196,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760201,"byte_end":10760272,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ handle.block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760277,"byte_end":10760304,"line_start":245,"line_end":245,"column_start":5,"column_end":32}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760309,"byte_end":10760335,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760340,"byte_end":10760347,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760352,"byte_end":10760359,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760364,"byte_end":10760367,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Or using `Handle::current`:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760372,"byte_end":10760403,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760408,"byte_end":10760411,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760416,"byte_end":10760423,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760428,"byte_end":10760459,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760464,"byte_end":10760467,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760472,"byte_end":10760490,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ async fn main () {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760495,"byte_end":10760517,"line_start":256,"line_end":256,"column_start":5,"column_end":27}},{"value":"/     let handle = Handle::current();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760522,"byte_end":10760561,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760566,"byte_end":10760602,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/         // Using Handle::block_on to run async code in the new thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760607,"byte_end":10760681,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/         handle.block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760686,"byte_end":10760721,"line_start":260,"line_end":260,"column_start":5,"column_end":40}},{"value":"/             println!(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760726,"byte_end":10760760,"line_start":261,"line_end":261,"column_start":5,"column_end":39}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760765,"byte_end":10760780,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760785,"byte_end":10760796,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760801,"byte_end":10760806,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760811,"byte_end":10760818,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760823,"byte_end":10760826,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`JoinError`]: struct@crate::task::JoinError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760831,"byte_end":10760879,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/ [`JoinHandle`]: struct@crate::task::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760884,"byte_end":10760934,"line_start":268,"line_end":268,"column_start":5,"column_end":55}},{"value":"/ [`Runtime::block_on`]: fn@crate::runtime::Runtime::block_on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10760939,"byte_end":10761002,"line_start":269,"line_end":269,"column_start":5,"column_end":68}},{"value":"/ [`Runtime::shutdown_background`]: fn@crate::runtime::Runtime::shutdown_background","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761007,"byte_end":10761092,"line_start":270,"line_end":270,"column_start":5,"column_end":90}},{"value":"/ [`Runtime::shutdown_timeout`]: fn@crate::runtime::Runtime::shutdown_timeout","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761097,"byte_end":10761176,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761181,"byte_end":10761232,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761237,"byte_end":10761265,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761270,"byte_end":10761300,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761305,"byte_end":10761337,"line_start":275,"line_end":275,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4646},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761977,"byte_end":10761992,"line_start":295,"line_end":295,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10761897,"byte_end":10761965,"line_start":294,"line_end":294,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4772},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10616026,"byte_end":10616033,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10618657,"byte_end":10618663,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4762},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10619587,"byte_end":10619592,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10619557,"byte_end":10619569,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4764},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10620365,"byte_end":10620379,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10620335,"byte_end":10620347,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4767},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10622311,"byte_end":10622319,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4769},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10623807,"byte_end":10623812,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4770},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10625382,"byte_end":10625398,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4771},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10626819,"byte_end":10626838,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4814},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":4815},{"krate":0,"index":4825},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4991},{"krate":0,"index":5401},{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493},{"krate":0,"index":13026},{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5669},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5763},{"krate":0,"index":5764},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":6141},{"krate":0,"index":6142},{"krate":0,"index":6143},{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6146},{"krate":0,"index":6147},{"krate":0,"index":6148},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6272},{"krate":0,"index":6273}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763530,"byte_end":10763594,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763595,"byte_end":10763598,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763599,"byte_end":10763674,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763675,"byte_end":10763755,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763756,"byte_end":10763835,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763836,"byte_end":10763870,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763871,"byte_end":10763874,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763875,"byte_end":10763899,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763900,"byte_end":10763903,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763904,"byte_end":10763925,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763926,"byte_end":10763929,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10763930,"byte_end":10764003,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764004,"byte_end":10764083,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764084,"byte_end":10764153,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764154,"byte_end":10764157,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764158,"byte_end":10764237,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764238,"byte_end":10764315,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764316,"byte_end":10764391,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764392,"byte_end":10764464,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764465,"byte_end":10764537,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764538,"byte_end":10764616,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764617,"byte_end":10764630,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764631,"byte_end":10764634,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764635,"byte_end":10764713,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764714,"byte_end":10764775,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764776,"byte_end":10764779,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764780,"byte_end":10764804,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764805,"byte_end":10764808,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764809,"byte_end":10764888,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764889,"byte_end":10764967,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10764968,"byte_end":10765012,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765013,"byte_end":10765016,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765017,"byte_end":10765097,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765098,"byte_end":10765114,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765115,"byte_end":10765118,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765119,"byte_end":10765126,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765127,"byte_end":10765156,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765157,"byte_end":10765160,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765161,"byte_end":10765204,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765205,"byte_end":10765267,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765268,"byte_end":10765273,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765274,"byte_end":10765277,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765278,"byte_end":10765296,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765297,"byte_end":10765318,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765319,"byte_end":10765361,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765362,"byte_end":10765365,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765366,"byte_end":10765399,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765400,"byte_end":10765447,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765448,"byte_end":10765482,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765483,"byte_end":10765494,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765495,"byte_end":10765498,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765499,"byte_end":10765576,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765577,"byte_end":10765580,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765581,"byte_end":10765623,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765624,"byte_end":10765660,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765661,"byte_end":10765666,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765667,"byte_end":10765674,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765675,"byte_end":10765678,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765679,"byte_end":10765743,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765744,"byte_end":10765808,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765809,"byte_end":10765871,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765872,"byte_end":10765942,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10765943,"byte_end":10766008,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766009,"byte_end":10766019,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766020,"byte_end":10766023,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766024,"byte_end":10766040,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766041,"byte_end":10766044,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766045,"byte_end":10766052,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766053,"byte_end":10766096,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766097,"byte_end":10766148,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766149,"byte_end":10766154,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766155,"byte_end":10766158,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766159,"byte_end":10766177,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766178,"byte_end":10766199,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766200,"byte_end":10766251,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766252,"byte_end":10766288,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766289,"byte_end":10766300,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766301,"byte_end":10766304,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766305,"byte_end":10766382,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766383,"byte_end":10766386,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766387,"byte_end":10766429,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766430,"byte_end":10766475,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766476,"byte_end":10766481,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766482,"byte_end":10766489,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766490,"byte_end":10766493,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766494,"byte_end":10766516,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766517,"byte_end":10766560,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766561,"byte_end":10766564,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766565,"byte_end":10766586,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766587,"byte_end":10766590,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766591,"byte_end":10766668,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766669,"byte_end":10766749,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766750,"byte_end":10766805,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766806,"byte_end":10766809,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766810,"byte_end":10766888,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766889,"byte_end":10766909,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766910,"byte_end":10766913,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766914,"byte_end":10766921,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766922,"byte_end":10766948,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766949,"byte_end":10766952,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10766953,"byte_end":10767006,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767007,"byte_end":10767061,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767062,"byte_end":10767067,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767068,"byte_end":10767071,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767072,"byte_end":10767090,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767091,"byte_end":10767112,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767113,"byte_end":10767159,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767160,"byte_end":10767163,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767164,"byte_end":10767197,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767198,"byte_end":10767226,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767227,"byte_end":10767279,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767280,"byte_end":10767324,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767325,"byte_end":10767338,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767339,"byte_end":10767350,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767351,"byte_end":10767354,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767355,"byte_end":10767402,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767403,"byte_end":10767441,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767442,"byte_end":10767451,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767452,"byte_end":10767457,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767458,"byte_end":10767465,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767466,"byte_end":10767469,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767470,"byte_end":10767550,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767551,"byte_end":10767628,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767629,"byte_end":10767702,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767703,"byte_end":10767778,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767779,"byte_end":10767792,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767793,"byte_end":10767796,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767797,"byte_end":10767872,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767873,"byte_end":10767952,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10767953,"byte_end":10768031,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768032,"byte_end":10768111,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768112,"byte_end":10768192,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768193,"byte_end":10768258,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768259,"byte_end":10768262,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768263,"byte_end":10768343,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768344,"byte_end":10768356,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768357,"byte_end":10768360,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768361,"byte_end":10768374,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768375,"byte_end":10768416,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768417,"byte_end":10768447,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768448,"byte_end":10768474,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768475,"byte_end":10768478,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768479,"byte_end":10768497,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768498,"byte_end":10768537,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768538,"byte_end":10768613,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768614,"byte_end":10768660,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768661,"byte_end":10768664,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768665,"byte_end":10768689,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768690,"byte_end":10768769,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768770,"byte_end":10768801,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768802,"byte_end":10768834,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768835,"byte_end":10768838,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768839,"byte_end":10768876,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768877,"byte_end":10768939,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768940,"byte_end":10768955,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768956,"byte_end":10768965,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768966,"byte_end":10768969,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10768970,"byte_end":10769049,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769050,"byte_end":10769125,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769126,"byte_end":10769204,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769205,"byte_end":10769252,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769253,"byte_end":10769270,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769271,"byte_end":10769274,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769275,"byte_end":10769322,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769323,"byte_end":10769364,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769365,"byte_end":10769374,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769375,"byte_end":10769378,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769379,"byte_end":10769393,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769394,"byte_end":10769399,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769400,"byte_end":10769407,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769408,"byte_end":10769411,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769412,"byte_end":10769487,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769488,"byte_end":10769563,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769564,"byte_end":10769643,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769644,"byte_end":10769709,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769710,"byte_end":10769787,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769788,"byte_end":10769791,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769792,"byte_end":10769870,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769871,"byte_end":10769951,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769952,"byte_end":10769997,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10769998,"byte_end":10770001,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770002,"byte_end":10770009,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770010,"byte_end":10770047,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770048,"byte_end":10770075,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770076,"byte_end":10770079,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770080,"byte_end":10770098,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770099,"byte_end":10770117,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770118,"byte_end":10770161,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770162,"byte_end":10770167,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770168,"byte_end":10770171,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770172,"byte_end":10770190,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770191,"byte_end":10770212,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770213,"byte_end":10770302,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770303,"byte_end":10770306,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770307,"byte_end":10770352,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770353,"byte_end":10770386,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770387,"byte_end":10770424,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770425,"byte_end":10770428,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770429,"byte_end":10770496,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770497,"byte_end":10770524,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770525,"byte_end":10770559,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770560,"byte_end":10770603,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770604,"byte_end":10770641,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770642,"byte_end":10770695,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770696,"byte_end":10770717,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770718,"byte_end":10770735,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770736,"byte_end":10770749,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770750,"byte_end":10770761,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770762,"byte_end":10770765,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770766,"byte_end":10770804,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770805,"byte_end":10770808,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770809,"byte_end":10770869,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770870,"byte_end":10770894,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770895,"byte_end":10770935,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770936,"byte_end":10770939,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770940,"byte_end":10770995,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10770996,"byte_end":10771056,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771057,"byte_end":10771060,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771061,"byte_end":10771131,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771132,"byte_end":10771181,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771182,"byte_end":10771185,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771186,"byte_end":10771239,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771240,"byte_end":10771256,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771257,"byte_end":10771266,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771267,"byte_end":10771270,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771271,"byte_end":10771312,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771313,"byte_end":10771364,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771365,"byte_end":10771404,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771405,"byte_end":10771414,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771415,"byte_end":10771420,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771421,"byte_end":10771428,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771429,"byte_end":10771432,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771433,"byte_end":10771449,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771450,"byte_end":10771453,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771454,"byte_end":10771480,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771481,"byte_end":10771484,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771485,"byte_end":10771552,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771553,"byte_end":10771625,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771626,"byte_end":10771699,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771700,"byte_end":10771753,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771754,"byte_end":10771757,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771758,"byte_end":10771838,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771839,"byte_end":10771861,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771862,"byte_end":10771865,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771866,"byte_end":10771881,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771882,"byte_end":10771885,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771886,"byte_end":10771893,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771894,"byte_end":10771925,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771926,"byte_end":10771929,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771930,"byte_end":10771948,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771949,"byte_end":10771970,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10771971,"byte_end":10772022,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772023,"byte_end":10772060,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772061,"byte_end":10772064,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772065,"byte_end":10772098,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772099,"byte_end":10772153,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772154,"byte_end":10772208,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772209,"byte_end":10772220,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772221,"byte_end":10772224,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772225,"byte_end":10772258,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772259,"byte_end":10772313,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772314,"byte_end":10772368,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772369,"byte_end":10772380,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772381,"byte_end":10772384,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772385,"byte_end":10772414,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772415,"byte_end":10772444,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772445,"byte_end":10772450,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772451,"byte_end":10772458,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772459,"byte_end":10772462,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772463,"byte_end":10772512,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772513,"byte_end":10772516,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772517,"byte_end":10772539,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772540,"byte_end":10772543,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772544,"byte_end":10772620,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772621,"byte_end":10772699,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772700,"byte_end":10772779,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772780,"byte_end":10772845,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772846,"byte_end":10772849,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772850,"byte_end":10772930,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772931,"byte_end":10772934,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10772935,"byte_end":10773009,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773010,"byte_end":10773083,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773084,"byte_end":10773097,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773098,"byte_end":10773101,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773102,"byte_end":10773175,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773176,"byte_end":10773256,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773257,"byte_end":10773332,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773333,"byte_end":10773336,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773337,"byte_end":10773344,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773345,"byte_end":10773372,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773373,"byte_end":10773420,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773421,"byte_end":10773424,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773425,"byte_end":10773441,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773442,"byte_end":10773445,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773446,"byte_end":10773488,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773489,"byte_end":10773508,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773509,"byte_end":10773535,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773536,"byte_end":10773541,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773542,"byte_end":10773545,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773546,"byte_end":10773563,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773564,"byte_end":10773621,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773622,"byte_end":10773680,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773681,"byte_end":10773733,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773734,"byte_end":10773743,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773744,"byte_end":10773749,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773750,"byte_end":10773753,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773754,"byte_end":10773789,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773790,"byte_end":10773818,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773819,"byte_end":10773824,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773825,"byte_end":10773828,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773829,"byte_end":10773847,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773848,"byte_end":10773869,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773870,"byte_end":10773913,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773914,"byte_end":10773979,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773980,"byte_end":10773983,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10773984,"byte_end":10774062,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774063,"byte_end":10774117,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774118,"byte_end":10774121,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774122,"byte_end":10774166,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774167,"byte_end":10774200,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774201,"byte_end":10774219,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774220,"byte_end":10774269,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774270,"byte_end":10774329,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774330,"byte_end":10774333,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774334,"byte_end":10774380,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774381,"byte_end":10774454,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774455,"byte_end":10774458,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774459,"byte_end":10774533,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774534,"byte_end":10774574,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774575,"byte_end":10774616,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774617,"byte_end":10774674,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774675,"byte_end":10774715,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774716,"byte_end":10774733,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774734,"byte_end":10774747,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774748,"byte_end":10774759,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774760,"byte_end":10774763,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774764,"byte_end":10774797,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774798,"byte_end":10774801,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774802,"byte_end":10774880,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774881,"byte_end":10774935,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774936,"byte_end":10774946,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10774947,"byte_end":10775024,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775025,"byte_end":10775103,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775104,"byte_end":10775139,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775140,"byte_end":10775163,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775164,"byte_end":10775227,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775228,"byte_end":10775264,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775265,"byte_end":10775268,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775269,"byte_end":10775319,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775320,"byte_end":10775399,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775400,"byte_end":10775475,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775476,"byte_end":10775529,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775530,"byte_end":10775576,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775577,"byte_end":10775609,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775610,"byte_end":10775613,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775614,"byte_end":10775661,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775662,"byte_end":10775713,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775714,"byte_end":10775717,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775718,"byte_end":10775768,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775769,"byte_end":10775840,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775841,"byte_end":10775876,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775877,"byte_end":10775880,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775881,"byte_end":10775903,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775904,"byte_end":10775940,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775941,"byte_end":10775984,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10775985,"byte_end":10776049,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776050,"byte_end":10776107,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776108,"byte_end":10776111,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776112,"byte_end":10776167,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776168,"byte_end":10776222,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776223,"byte_end":10776226,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776227,"byte_end":10776277,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776278,"byte_end":10776360,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776361,"byte_end":10776386,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776387,"byte_end":10776432,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776433,"byte_end":10776488,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776489,"byte_end":10776492,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776493,"byte_end":10776570,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776571,"byte_end":10776640,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776641,"byte_end":10776715,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776716,"byte_end":10776741,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776742,"byte_end":10776782,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776783,"byte_end":10776838,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776839,"byte_end":10776873,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776874,"byte_end":10776899,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776900,"byte_end":10776921,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776922,"byte_end":10776939,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776940,"byte_end":10776955,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776956,"byte_end":10776959,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776960,"byte_end":10776993,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10776994,"byte_end":10777003,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777004,"byte_end":10777007,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777008,"byte_end":10777049,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777050,"byte_end":10777084,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777085,"byte_end":10777094,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777095,"byte_end":10777100,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777101,"byte_end":10777108,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777109,"byte_end":10777112,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777113,"byte_end":10777158,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777159,"byte_end":10777212,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777213,"byte_end":10777216,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777217,"byte_end":10777244,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777245,"byte_end":10777248,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777249,"byte_end":10777323,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777324,"byte_end":10777398,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777399,"byte_end":10777469,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777470,"byte_end":10777520,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777521,"byte_end":10777524,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777525,"byte_end":10777602,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777603,"byte_end":10777680,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777681,"byte_end":10777684,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777685,"byte_end":10777762,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777763,"byte_end":10777818,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777819,"byte_end":10777822,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777823,"byte_end":10777902,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777903,"byte_end":10777981,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10777982,"byte_end":10778007,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778008,"byte_end":10778011,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778012,"byte_end":10778087,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778088,"byte_end":10778164,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778165,"byte_end":10778232,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778233,"byte_end":10778236,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778237,"byte_end":10778313,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778314,"byte_end":10778390,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778391,"byte_end":10778465,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778466,"byte_end":10778493,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6327},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781215,"byte_end":10781222,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6328},{"krate":0,"index":6329},{"krate":0,"index":6330}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780152,"byte_end":10780240,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780241,"byte_end":10780244,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780245,"byte_end":10780252,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780253,"byte_end":10780273,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780274,"byte_end":10780297,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780298,"byte_end":10780327,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780328,"byte_end":10780351,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780352,"byte_end":10780355,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780356,"byte_end":10780401,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780402,"byte_end":10780447,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780448,"byte_end":10780468,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780469,"byte_end":10780501,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780502,"byte_end":10780556,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780557,"byte_end":10780602,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/     handles.push(tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780603,"byte_end":10780649,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780650,"byte_end":10780686,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/         let wait_result = c.wait().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780687,"byte_end":10780732,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780733,"byte_end":10780768,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/         wait_result","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780769,"byte_end":10780792,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/     }));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780793,"byte_end":10780805,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780806,"byte_end":10780811,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780812,"byte_end":10780815,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Will not resolve until all \"after wait\" messages have been printed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780816,"byte_end":10780889,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ let mut num_leaders = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780890,"byte_end":10780918,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ for handle in handles {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780919,"byte_end":10780946,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/     let wait_result = handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780947,"byte_end":10780995,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/     if wait_result.is_leader() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10780996,"byte_end":10781032,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/         num_leaders += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781033,"byte_end":10781062,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781063,"byte_end":10781072,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781073,"byte_end":10781078,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781079,"byte_end":10781082,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781083,"byte_end":10781138,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(num_leaders, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781139,"byte_end":10781170,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781171,"byte_end":10781178,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781179,"byte_end":10781186,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4819},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781685,"byte_end":10781688,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781445,"byte_end":10781512,"line_start":55,"line_end":55,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781517,"byte_end":10781520,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781525,"byte_end":10781613,"line_start":57,"line_end":57,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781618,"byte_end":10781673,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4820},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782761,"byte_end":10782765,"line_start":88,"line_end":88,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782287,"byte_end":10782347,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782352,"byte_end":10782355,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782360,"byte_end":10782436,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782441,"byte_end":10782466,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782471,"byte_end":10782474,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782479,"byte_end":10782572,"line_start":85,"line_end":85,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782577,"byte_end":10782670,"line_start":86,"line_end":86,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10782675,"byte_end":10782743,"line_start":87,"line_end":87,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6339},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784686,"byte_end":10784703,"line_start":134,"line_end":134,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784550,"byte_end":10784650,"line_start":132,"line_end":132,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":4824},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784951,"byte_end":10784960,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784741,"byte_end":10784808,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784813,"byte_end":10784816,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784821,"byte_end":10784913,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784918,"byte_end":10784939,"line_start":140,"line_end":140,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":4828},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836},{"krate":0,"index":4837},{"krate":0,"index":4838},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":12840},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":12846},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4853},{"krate":0,"index":4857},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4877},{"krate":0,"index":4882},{"krate":0,"index":4888},{"krate":0,"index":4893},{"krate":0,"index":4897},{"krate":0,"index":4902},{"krate":0,"index":4905},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4911},{"krate":0,"index":4913},{"krate":0,"index":4915},{"krate":0,"index":4917},{"krate":0,"index":4919},{"krate":0,"index":4928},{"krate":0,"index":4930},{"krate":0,"index":4932},{"krate":0,"index":4935},{"krate":0,"index":4938},{"krate":0,"index":4942},{"krate":0,"index":4948},{"krate":0,"index":4951},{"krate":0,"index":4956},{"krate":0,"index":4961},{"krate":0,"index":4967},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4984},{"krate":0,"index":4989}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785002,"byte_end":10785082,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785083,"byte_end":10785101,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785102,"byte_end":10785105,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785106,"byte_end":10785184,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785185,"byte_end":10785260,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785261,"byte_end":10785339,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785340,"byte_end":10785394,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785395,"byte_end":10785398,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785399,"byte_end":10785475,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785476,"byte_end":10785556,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785557,"byte_end":10785634,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785635,"byte_end":10785685,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785686,"byte_end":10785689,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785690,"byte_end":10785768,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785769,"byte_end":10785826,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785827,"byte_end":10785830,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785831,"byte_end":10785909,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785910,"byte_end":10785982,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10785983,"byte_end":10785999,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786000,"byte_end":10786003,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786004,"byte_end":10786018,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786019,"byte_end":10786022,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786023,"byte_end":10786103,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786104,"byte_end":10786183,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786184,"byte_end":10786261,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786262,"byte_end":10786340,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786341,"byte_end":10786348,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786349,"byte_end":10786352,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786353,"byte_end":10786430,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786431,"byte_end":10786506,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786507,"byte_end":10786587,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786588,"byte_end":10786591,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786592,"byte_end":10786664,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786665,"byte_end":10786743,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786744,"byte_end":10786820,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786821,"byte_end":10786880,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786881,"byte_end":10786884,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786885,"byte_end":10786963,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10786964,"byte_end":10787038,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787039,"byte_end":10787075,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787076,"byte_end":10787079,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787080,"byte_end":10787159,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787160,"byte_end":10787237,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787238,"byte_end":10787313,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787314,"byte_end":10787345,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787346,"byte_end":10787349,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787350,"byte_end":10787364,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787365,"byte_end":10787368,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787369,"byte_end":10787444,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787445,"byte_end":10787523,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787524,"byte_end":10787601,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787602,"byte_end":10787633,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787634,"byte_end":10787637,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787638,"byte_end":10787684,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787685,"byte_end":10787753,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787754,"byte_end":10787804,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787805,"byte_end":10787853,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787854,"byte_end":10787929,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10787930,"byte_end":10788005,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788006,"byte_end":10788058,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788059,"byte_end":10788062,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788063,"byte_end":10788077,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788078,"byte_end":10788081,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788082,"byte_end":10788097,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788098,"byte_end":10788101,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788102,"byte_end":10788109,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788110,"byte_end":10788141,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788142,"byte_end":10788145,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788146,"byte_end":10788164,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788165,"byte_end":10788186,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788187,"byte_end":10788238,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788239,"byte_end":10788276,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788277,"byte_end":10788280,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788281,"byte_end":10788314,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788315,"byte_end":10788369,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788370,"byte_end":10788424,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788425,"byte_end":10788436,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788437,"byte_end":10788440,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788441,"byte_end":10788474,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788475,"byte_end":10788529,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788530,"byte_end":10788584,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788585,"byte_end":10788596,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788597,"byte_end":10788600,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788601,"byte_end":10788630,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788631,"byte_end":10788660,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788661,"byte_end":10788666,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788667,"byte_end":10788674,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788675,"byte_end":10788678,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788679,"byte_end":10788695,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788696,"byte_end":10788699,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788700,"byte_end":10788707,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788708,"byte_end":10788739,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788740,"byte_end":10788743,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788744,"byte_end":10788762,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788763,"byte_end":10788784,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788785,"byte_end":10788834,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788835,"byte_end":10788838,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788839,"byte_end":10788868,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788869,"byte_end":10788898,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788899,"byte_end":10788928,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788929,"byte_end":10788932,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788933,"byte_end":10788970,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10788971,"byte_end":10789013,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789014,"byte_end":10789017,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789018,"byte_end":10789087,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789088,"byte_end":10789091,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789092,"byte_end":10789141,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789142,"byte_end":10789191,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789192,"byte_end":10789197,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789198,"byte_end":10789205,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4850},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790402,"byte_end":10790408,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4852}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789609,"byte_end":10789655,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789656,"byte_end":10789659,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789660,"byte_end":10789720,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789721,"byte_end":10789748,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789749,"byte_end":10789752,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789753,"byte_end":10789767,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789768,"byte_end":10789771,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789772,"byte_end":10789779,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789780,"byte_end":10789811,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789812,"byte_end":10789815,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789816,"byte_end":10789834,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789835,"byte_end":10789856,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789857,"byte_end":10789908,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789909,"byte_end":10789946,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789947,"byte_end":10789950,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789951,"byte_end":10789984,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10789985,"byte_end":10790039,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790040,"byte_end":10790094,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790095,"byte_end":10790106,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790107,"byte_end":10790110,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790111,"byte_end":10790144,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790145,"byte_end":10790199,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790200,"byte_end":10790254,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790255,"byte_end":10790266,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790267,"byte_end":10790270,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790271,"byte_end":10790300,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790301,"byte_end":10790330,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790331,"byte_end":10790336,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790337,"byte_end":10790344,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790345,"byte_end":10790348,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790349,"byte_end":10790390,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4853},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791456,"byte_end":10791464,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4856}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790445,"byte_end":10790493,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790494,"byte_end":10790497,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790498,"byte_end":10790564,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790565,"byte_end":10790594,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790595,"byte_end":10790598,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790599,"byte_end":10790677,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790678,"byte_end":10790690,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790691,"byte_end":10790694,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790695,"byte_end":10790802,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790803,"byte_end":10790806,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790807,"byte_end":10790821,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790822,"byte_end":10790825,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790826,"byte_end":10790833,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790834,"byte_end":10790865,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790866,"byte_end":10790869,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790870,"byte_end":10790888,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790889,"byte_end":10790910,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790911,"byte_end":10790962,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10790963,"byte_end":10791000,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791001,"byte_end":10791004,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791005,"byte_end":10791038,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791039,"byte_end":10791093,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791094,"byte_end":10791148,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791149,"byte_end":10791160,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791161,"byte_end":10791164,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791165,"byte_end":10791198,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791199,"byte_end":10791253,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791254,"byte_end":10791308,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791309,"byte_end":10791320,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791321,"byte_end":10791324,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791325,"byte_end":10791354,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791355,"byte_end":10791384,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791385,"byte_end":10791390,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791391,"byte_end":10791398,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791399,"byte_end":10791402,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791403,"byte_end":10791444,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":4857},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791613,"byte_end":10791618,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":4858},{"krate":0,"index":6346},{"krate":0,"index":6350},{"krate":0,"index":4859},{"krate":0,"index":4862},{"krate":0,"index":6353},{"krate":0,"index":6363},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":4864},{"krate":0,"index":4866},{"krate":0,"index":6365},{"krate":0,"index":6377},{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":4867},{"krate":0,"index":4869}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791625,"byte_end":10791650,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6346},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792122,"byte_end":10792131,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791675,"byte_end":10791740,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791745,"byte_end":10791748,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791753,"byte_end":10791825,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791830,"byte_end":10791907,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791912,"byte_end":10791971,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791976,"byte_end":10791979,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10791984,"byte_end":10792034,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792039,"byte_end":10792085,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6349},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792135,"byte_end":10792140,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6354},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792737,"byte_end":10792743,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6353},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792632,"byte_end":10792707,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792716,"byte_end":10792728,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6356},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792969,"byte_end":10792975,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6353},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792754,"byte_end":10792826,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792835,"byte_end":10792895,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792904,"byte_end":10792907,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792916,"byte_end":10792960,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6353},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792612,"byte_end":10792621,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6354},{"krate":0,"index":6356}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792379,"byte_end":10792446,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792451,"byte_end":10792454,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792459,"byte_end":10792511,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792516,"byte_end":10792566,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6366},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793815,"byte_end":10793820,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6365},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793615,"byte_end":10793673,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793682,"byte_end":10793739,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793748,"byte_end":10793751,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793760,"byte_end":10793806,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6368},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793936,"byte_end":10793942,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6365},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793831,"byte_end":10793906,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793915,"byte_end":10793927,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6370},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794215,"byte_end":10794221,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":6365},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793953,"byte_end":10794027,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794036,"byte_end":10794104,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794113,"byte_end":10794141,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794150,"byte_end":10794153,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794162,"byte_end":10794206,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6365},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793592,"byte_end":10793604,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`] handles, so data may yet become available.\n    ///\n    /// [`Sender`]: crate::sync::broadcast::Sender\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6366},{"krate":0,"index":6368},{"krate":0,"index":6370}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793347,"byte_end":10793418,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793423,"byte_end":10793426,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793431,"byte_end":10793491,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793496,"byte_end":10793546,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":4909},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798416,"byte_end":10798423,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796790,"byte_end":10796866,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796867,"byte_end":10796916,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796917,"byte_end":10796920,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796921,"byte_end":10796990,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796991,"byte_end":10797041,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797042,"byte_end":10797045,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797046,"byte_end":10797120,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797121,"byte_end":10797196,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797197,"byte_end":10797265,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797266,"byte_end":10797269,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797270,"byte_end":10797346,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797347,"byte_end":10797428,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797429,"byte_end":10797468,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797469,"byte_end":10797472,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797473,"byte_end":10797519,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797520,"byte_end":10797588,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797589,"byte_end":10797639,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797640,"byte_end":10797692,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797693,"byte_end":10797752,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797753,"byte_end":10797812,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797813,"byte_end":10797816,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797817,"byte_end":10797831,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797832,"byte_end":10797835,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797836,"byte_end":10797843,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797844,"byte_end":10797875,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797876,"byte_end":10797879,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797880,"byte_end":10797898,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797899,"byte_end":10797920,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797921,"byte_end":10797972,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10797973,"byte_end":10798010,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798011,"byte_end":10798014,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798015,"byte_end":10798048,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798049,"byte_end":10798103,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798104,"byte_end":10798158,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798159,"byte_end":10798170,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798171,"byte_end":10798174,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798175,"byte_end":10798208,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798209,"byte_end":10798263,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798264,"byte_end":10798318,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798319,"byte_end":10798330,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798331,"byte_end":10798334,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798335,"byte_end":10798364,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798365,"byte_end":10798394,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798395,"byte_end":10798400,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10798401,"byte_end":10798408,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4921},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801475,"byte_end":10801479,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799625,"byte_end":10799699,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799704,"byte_end":10799740,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799745,"byte_end":10799748,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799753,"byte_end":10799828,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799833,"byte_end":10799899,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799904,"byte_end":10799955,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799960,"byte_end":10799963,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799968,"byte_end":10799980,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799985,"byte_end":10799988,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799993,"byte_end":10800067,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800072,"byte_end":10800148,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800153,"byte_end":10800206,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800211,"byte_end":10800214,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800219,"byte_end":10800229,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800234,"byte_end":10800237,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800242,"byte_end":10800314,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800319,"byte_end":10800394,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800399,"byte_end":10800460,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800465,"byte_end":10800468,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800473,"byte_end":10800546,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800551,"byte_end":10800616,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800621,"byte_end":10800639,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800644,"byte_end":10800647,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800652,"byte_end":10800702,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800707,"byte_end":10800767,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800772,"byte_end":10800775,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800780,"byte_end":10800794,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800799,"byte_end":10800802,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800807,"byte_end":10800814,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800819,"byte_end":10800850,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800855,"byte_end":10800858,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800863,"byte_end":10800881,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800886,"byte_end":10800907,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800912,"byte_end":10800963,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10800968,"byte_end":10801005,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801010,"byte_end":10801013,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801018,"byte_end":10801051,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801056,"byte_end":10801110,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801115,"byte_end":10801169,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801174,"byte_end":10801185,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801190,"byte_end":10801193,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801198,"byte_end":10801231,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801236,"byte_end":10801290,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801295,"byte_end":10801349,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801354,"byte_end":10801365,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801370,"byte_end":10801373,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801378,"byte_end":10801407,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801412,"byte_end":10801441,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801446,"byte_end":10801451,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801456,"byte_end":10801463,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802239,"byte_end":10802248,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801644,"byte_end":10801721,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801726,"byte_end":10801755,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801760,"byte_end":10801763,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801768,"byte_end":10801782,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801787,"byte_end":10801790,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801795,"byte_end":10801802,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801807,"byte_end":10801838,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801843,"byte_end":10801846,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801851,"byte_end":10801869,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801874,"byte_end":10801895,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801900,"byte_end":10801947,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801952,"byte_end":10801955,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801960,"byte_end":10801987,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10801992,"byte_end":10802021,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802026,"byte_end":10802029,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802034,"byte_end":10802070,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802075,"byte_end":10802078,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802083,"byte_end":10802112,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802117,"byte_end":10802120,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802125,"byte_end":10802170,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802175,"byte_end":10802205,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802210,"byte_end":10802215,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802220,"byte_end":10802227,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4924},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803507,"byte_end":10803521,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802355,"byte_end":10802397,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802402,"byte_end":10802405,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802410,"byte_end":10802486,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802491,"byte_end":10802564,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802569,"byte_end":10802589,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802594,"byte_end":10802597,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802602,"byte_end":10802612,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802617,"byte_end":10802620,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802625,"byte_end":10802695,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802700,"byte_end":10802768,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802773,"byte_end":10802786,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802791,"byte_end":10802794,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802799,"byte_end":10802851,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802856,"byte_end":10802906,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802911,"byte_end":10802957,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10802962,"byte_end":10803022,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803027,"byte_end":10803075,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803080,"byte_end":10803083,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803088,"byte_end":10803102,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803107,"byte_end":10803110,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803115,"byte_end":10803122,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803127,"byte_end":10803158,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803163,"byte_end":10803166,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803171,"byte_end":10803189,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803194,"byte_end":10803215,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803220,"byte_end":10803268,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803273,"byte_end":10803276,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803281,"byte_end":10803324,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803329,"byte_end":10803332,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803337,"byte_end":10803375,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803380,"byte_end":10803383,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803388,"byte_end":10803431,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803436,"byte_end":10803439,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803444,"byte_end":10803473,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803478,"byte_end":10803483,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10803488,"byte_end":10803495,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813084,"byte_end":10813088,"line_start":877,"line_end":877,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10810856,"byte_end":10810902,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10810907,"byte_end":10810910,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10810915,"byte_end":10810983,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10810988,"byte_end":10811020,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811025,"byte_end":10811028,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811033,"byte_end":10811103,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811108,"byte_end":10811182,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811187,"byte_end":10811190,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811195,"byte_end":10811271,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811276,"byte_end":10811352,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811357,"byte_end":10811425,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811430,"byte_end":10811503,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811508,"byte_end":10811577,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811582,"byte_end":10811627,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811632,"byte_end":10811635,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811640,"byte_end":10811690,"line_start":827,"line_end":827,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811695,"byte_end":10811747,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811752,"byte_end":10811755,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811760,"byte_end":10811774,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811779,"byte_end":10811782,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811787,"byte_end":10811794,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811799,"byte_end":10811830,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811835,"byte_end":10811838,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811843,"byte_end":10811861,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811866,"byte_end":10811887,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811892,"byte_end":10811943,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811948,"byte_end":10811985,"line_start":838,"line_end":838,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811990,"byte_end":10811993,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10811998,"byte_end":10812031,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812036,"byte_end":10812090,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812095,"byte_end":10812149,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812154,"byte_end":10812165,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812170,"byte_end":10812173,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812178,"byte_end":10812211,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812216,"byte_end":10812270,"line_start":846,"line_end":846,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812275,"byte_end":10812329,"line_start":847,"line_end":847,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812334,"byte_end":10812345,"line_start":848,"line_end":848,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812350,"byte_end":10812353,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812358,"byte_end":10812387,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812392,"byte_end":10812421,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812426,"byte_end":10812431,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812436,"byte_end":10812443,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812448,"byte_end":10812451,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812456,"byte_end":10812472,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812477,"byte_end":10812480,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812485,"byte_end":10812492,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812497,"byte_end":10812528,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812533,"byte_end":10812536,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812541,"byte_end":10812559,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812564,"byte_end":10812585,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812590,"byte_end":10812639,"line_start":862,"line_end":862,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812644,"byte_end":10812647,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812652,"byte_end":10812681,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812686,"byte_end":10812715,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812720,"byte_end":10812749,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812754,"byte_end":10812757,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812762,"byte_end":10812799,"line_start":868,"line_end":868,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812804,"byte_end":10812846,"line_start":869,"line_end":869,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812851,"byte_end":10812854,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812859,"byte_end":10812928,"line_start":871,"line_end":871,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812933,"byte_end":10812936,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812941,"byte_end":10812990,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10812995,"byte_end":10813044,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813049,"byte_end":10813054,"line_start":875,"line_end":875,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813059,"byte_end":10813066,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4947},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814849,"byte_end":10814857,"line_start":922,"line_end":922,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813190,"byte_end":10813263,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813268,"byte_end":10813271,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813276,"byte_end":10813348,"line_start":884,"line_end":884,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813353,"byte_end":10813377,"line_start":885,"line_end":885,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813382,"byte_end":10813385,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813390,"byte_end":10813470,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813475,"byte_end":10813549,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813554,"byte_end":10813557,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813562,"byte_end":10813635,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813640,"byte_end":10813714,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813719,"byte_end":10813722,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813727,"byte_end":10813803,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813808,"byte_end":10813884,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813889,"byte_end":10813960,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10813965,"byte_end":10814038,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814043,"byte_end":10814116,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814121,"byte_end":10814192,"line_start":898,"line_end":898,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814197,"byte_end":10814249,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814254,"byte_end":10814257,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814262,"byte_end":10814314,"line_start":901,"line_end":901,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814319,"byte_end":10814379,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814384,"byte_end":10814434,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814439,"byte_end":10814442,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814447,"byte_end":10814461,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814466,"byte_end":10814469,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814474,"byte_end":10814481,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814486,"byte_end":10814517,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814522,"byte_end":10814525,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814530,"byte_end":10814548,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814553,"byte_end":10814574,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814579,"byte_end":10814629,"line_start":912,"line_end":912,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814634,"byte_end":10814637,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814642,"byte_end":10814682,"line_start":914,"line_end":914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814687,"byte_end":10814690,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814695,"byte_end":10814724,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814729,"byte_end":10814732,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814737,"byte_end":10814780,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814785,"byte_end":10814815,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814820,"byte_end":10814825,"line_start":920,"line_end":920,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10814830,"byte_end":10814837,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4991},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":4992},{"krate":0,"index":5066},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5281},{"krate":0,"index":5326},{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5400}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819130,"byte_end":10819200,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819201,"byte_end":10819224,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819225,"byte_end":10819228,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819229,"byte_end":10819309,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819310,"byte_end":10819388,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819389,"byte_end":10819465,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819466,"byte_end":10819545,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819546,"byte_end":10819626,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819627,"byte_end":10819698,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819699,"byte_end":10819721,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819722,"byte_end":10819725,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819726,"byte_end":10819803,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819804,"byte_end":10819875,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819876,"byte_end":10819941,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10819942,"byte_end":10820026,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820027,"byte_end":10820105,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820106,"byte_end":10820183,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820184,"byte_end":10820262,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820263,"byte_end":10820342,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820343,"byte_end":10820360,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820361,"byte_end":10820364,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820365,"byte_end":10820368,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820369,"byte_end":10820388,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820389,"byte_end":10820392,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820393,"byte_end":10820459,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820460,"byte_end":10820540,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820541,"byte_end":10820618,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820619,"byte_end":10820622,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820623,"byte_end":10820693,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820694,"byte_end":10820773,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820774,"byte_end":10820797,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820798,"byte_end":10820801,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820802,"byte_end":10820822,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820823,"byte_end":10820826,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820827,"byte_end":10820907,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820908,"byte_end":10820988,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10820989,"byte_end":10821067,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821068,"byte_end":10821140,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821141,"byte_end":10821215,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821216,"byte_end":10821228,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821229,"byte_end":10821232,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821233,"byte_end":10821280,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821281,"byte_end":10821284,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821285,"byte_end":10821366,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821367,"byte_end":10821402,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821403,"byte_end":10821406,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821407,"byte_end":10821487,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821488,"byte_end":10821569,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821570,"byte_end":10821644,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821645,"byte_end":10821726,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821727,"byte_end":10821772,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821773,"byte_end":10821776,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821777,"byte_end":10821857,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821858,"byte_end":10821936,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10821937,"byte_end":10822003,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822004,"byte_end":10822086,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822087,"byte_end":10822151,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822152,"byte_end":10822155,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822156,"byte_end":10822197,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822198,"byte_end":10822243,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822244,"byte_end":10822297,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822298,"byte_end":10822353,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822354,"byte_end":10822417,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822418,"byte_end":10822483,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822484,"byte_end":10822543,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822544,"byte_end":10822607,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822608,"byte_end":10822668,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822669,"byte_end":10822714,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10822715,"byte_end":10822805,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":5078},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836999,"byte_end":10837005,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5080}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836688,"byte_end":10836733,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836734,"byte_end":10836737,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836738,"byte_end":10836801,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836802,"byte_end":10836805,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Sender` in a poll function, you can use the [`PollSender`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836806,"byte_end":10836880,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ utility.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836881,"byte_end":10836893,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836894,"byte_end":10836897,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSender`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSender.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10836898,"byte_end":10836987,"line_start":20,"line_end":20,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":5081},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837380,"byte_end":10837386,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":5084}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837048,"byte_end":10837094,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837095,"byte_end":10837098,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837099,"byte_end":10837186,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837187,"byte_end":10837270,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837271,"byte_end":10837274,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837275,"byte_end":10837317,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837318,"byte_end":10837368,"line_start":31,"line_end":31,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5085},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837753,"byte_end":10837761,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5087}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837437,"byte_end":10837485,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837486,"byte_end":10837489,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837490,"byte_end":10837553,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837554,"byte_end":10837557,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837558,"byte_end":10837631,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837632,"byte_end":10837635,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837636,"byte_end":10837741,"line_start":42,"line_end":42,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":5088},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839219,"byte_end":10839226,"line_start":92,"line_end":92,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837833,"byte_end":10837912,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837913,"byte_end":10837935,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837936,"byte_end":10837939,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10837940,"byte_end":10838016,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838017,"byte_end":10838097,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838098,"byte_end":10838177,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838178,"byte_end":10838181,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838182,"byte_end":10838259,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838260,"byte_end":10838285,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838286,"byte_end":10838289,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838290,"byte_end":10838369,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838370,"byte_end":10838418,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838419,"byte_end":10838422,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838423,"byte_end":10838502,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838503,"byte_end":10838578,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838579,"byte_end":10838645,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838646,"byte_end":10838649,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838650,"byte_end":10838662,"line_start":65,"line_end":65,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838663,"byte_end":10838666,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838667,"byte_end":10838706,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838707,"byte_end":10838710,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838711,"byte_end":10838725,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838726,"byte_end":10838729,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838730,"byte_end":10838741,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838742,"byte_end":10838768,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838769,"byte_end":10838772,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838773,"byte_end":10838791,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838792,"byte_end":10838813,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838814,"byte_end":10838860,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838861,"byte_end":10838864,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838865,"byte_end":10838898,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838899,"byte_end":10838927,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838928,"byte_end":10838978,"line_start":80,"line_end":80,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10838979,"byte_end":10839028,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839029,"byte_end":10839056,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839057,"byte_end":10839074,"line_start":83,"line_end":83,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839075,"byte_end":10839088,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839089,"byte_end":10839100,"line_start":85,"line_end":85,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839101,"byte_end":10839104,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839105,"byte_end":10839150,"line_start":87,"line_end":87,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839151,"byte_end":10839187,"line_start":88,"line_end":88,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839188,"byte_end":10839197,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839198,"byte_end":10839203,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839204,"byte_end":10839211,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5094},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841588,"byte_end":10841592,"line_start":164,"line_end":164,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839826,"byte_end":10839872,"line_start":112,"line_end":112,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839877,"byte_end":10839880,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839885,"byte_end":10839960,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839965,"byte_end":10840038,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840043,"byte_end":10840119,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840124,"byte_end":10840199,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840204,"byte_end":10840207,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840212,"byte_end":10840285,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840290,"byte_end":10840364,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840369,"byte_end":10840395,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840400,"byte_end":10840403,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840408,"byte_end":10840477,"line_start":123,"line_end":123,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840482,"byte_end":10840554,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840559,"byte_end":10840611,"line_start":125,"line_end":125,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840616,"byte_end":10840619,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840624,"byte_end":10840650,"line_start":127,"line_end":127,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840655,"byte_end":10840704,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840709,"byte_end":10840712,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840717,"byte_end":10840731,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840736,"byte_end":10840739,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840744,"byte_end":10840751,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840756,"byte_end":10840782,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840787,"byte_end":10840790,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840795,"byte_end":10840813,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840818,"byte_end":10840839,"line_start":136,"line_end":136,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840844,"byte_end":10840890,"line_start":137,"line_end":137,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840895,"byte_end":10840898,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840903,"byte_end":10840936,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840941,"byte_end":10840985,"line_start":140,"line_end":140,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10840990,"byte_end":10841001,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841006,"byte_end":10841009,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841014,"byte_end":10841065,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841070,"byte_end":10841112,"line_start":144,"line_end":144,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841117,"byte_end":10841122,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841127,"byte_end":10841134,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841139,"byte_end":10841142,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841147,"byte_end":10841171,"line_start":148,"line_end":148,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841176,"byte_end":10841179,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841184,"byte_end":10841191,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841196,"byte_end":10841222,"line_start":151,"line_end":151,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841227,"byte_end":10841230,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841235,"byte_end":10841253,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841258,"byte_end":10841279,"line_start":154,"line_end":154,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841284,"byte_end":10841330,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841335,"byte_end":10841338,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841343,"byte_end":10841383,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841388,"byte_end":10841428,"line_start":158,"line_end":158,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841433,"byte_end":10841436,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841441,"byte_end":10841492,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841497,"byte_end":10841548,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841553,"byte_end":10841558,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841563,"byte_end":10841570,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843656,"byte_end":10843669,"line_start":220,"line_end":220,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841713,"byte_end":10841775,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841780,"byte_end":10841783,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841788,"byte_end":10841863,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841868,"byte_end":10841941,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10841946,"byte_end":10842022,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842027,"byte_end":10842102,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842107,"byte_end":10842110,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842115,"byte_end":10842188,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842193,"byte_end":10842267,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842272,"byte_end":10842298,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842303,"byte_end":10842306,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842311,"byte_end":10842379,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842384,"byte_end":10842459,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842464,"byte_end":10842519,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842524,"byte_end":10842527,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842532,"byte_end":10842601,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842606,"byte_end":10842678,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842683,"byte_end":10842744,"line_start":186,"line_end":186,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842749,"byte_end":10842752,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842757,"byte_end":10842783,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842788,"byte_end":10842837,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842842,"byte_end":10842908,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842913,"byte_end":10842916,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842921,"byte_end":10842933,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842938,"byte_end":10842941,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10842946,"byte_end":10843013,"line_start":194,"line_end":194,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843018,"byte_end":10843030,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843035,"byte_end":10843038,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843043,"byte_end":10843057,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843062,"byte_end":10843065,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843070,"byte_end":10843077,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843082,"byte_end":10843102,"line_start":200,"line_end":200,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843107,"byte_end":10843139,"line_start":201,"line_end":201,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843144,"byte_end":10843170,"line_start":202,"line_end":202,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843175,"byte_end":10843178,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843183,"byte_end":10843198,"line_start":204,"line_end":204,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843203,"byte_end":10843254,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843259,"byte_end":10843262,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843267,"byte_end":10843314,"line_start":207,"line_end":207,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843319,"byte_end":10843372,"line_start":208,"line_end":208,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843377,"byte_end":10843388,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843393,"byte_end":10843396,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843401,"byte_end":10843423,"line_start":211,"line_end":211,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843428,"byte_end":10843449,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843454,"byte_end":10843488,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843493,"byte_end":10843535,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843540,"byte_end":10843555,"line_start":215,"line_end":215,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843560,"byte_end":10843593,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843598,"byte_end":10843603,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843608,"byte_end":10843615,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843620,"byte_end":10843644,"line_start":219,"line_end":219,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5100},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845024,"byte_end":10845029,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843752,"byte_end":10843815,"line_start":224,"line_end":224,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843820,"byte_end":10843823,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843828,"byte_end":10843903,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843908,"byte_end":10843980,"line_start":227,"line_end":227,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10843985,"byte_end":10844055,"line_start":228,"line_end":228,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844060,"byte_end":10844063,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844068,"byte_end":10844139,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844144,"byte_end":10844210,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] values, the `recv` method will not return `None`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844215,"byte_end":10844290,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ until those are released.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844295,"byte_end":10844324,"line_start":233,"line_end":233,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844329,"byte_end":10844332,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844337,"byte_end":10844359,"line_start":235,"line_end":235,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844364,"byte_end":10844367,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844372,"byte_end":10844386,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844391,"byte_end":10844394,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844399,"byte_end":10844406,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844411,"byte_end":10844437,"line_start":240,"line_end":240,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844442,"byte_end":10844445,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844450,"byte_end":10844468,"line_start":242,"line_end":242,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844473,"byte_end":10844494,"line_start":243,"line_end":243,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844499,"byte_end":10844544,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844549,"byte_end":10844552,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844557,"byte_end":10844590,"line_start":246,"line_end":246,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844595,"byte_end":10844621,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844626,"byte_end":10844681,"line_start":248,"line_end":248,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844686,"byte_end":10844717,"line_start":249,"line_end":249,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844722,"byte_end":10844745,"line_start":250,"line_end":250,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844750,"byte_end":10844763,"line_start":251,"line_end":251,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844768,"byte_end":10844779,"line_start":252,"line_end":252,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844784,"byte_end":10844787,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844792,"byte_end":10844811,"line_start":254,"line_end":254,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844816,"byte_end":10844819,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844824,"byte_end":10844871,"line_start":256,"line_end":256,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844876,"byte_end":10844912,"line_start":257,"line_end":257,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844917,"byte_end":10844926,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844931,"byte_end":10844934,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844939,"byte_end":10844990,"line_start":260,"line_end":260,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10844995,"byte_end":10845000,"line_start":261,"line_end":261,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845005,"byte_end":10845012,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5101},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845870,"byte_end":10845879,"line_start":282,"line_end":282,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845081,"byte_end":10845135,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845140,"byte_end":10845143,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845148,"byte_end":10845172,"line_start":269,"line_end":269,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845177,"byte_end":10845180,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845185,"byte_end":10845259,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845264,"byte_end":10845278,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845283,"byte_end":10845345,"line_start":273,"line_end":273,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845350,"byte_end":10845424,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845429,"byte_end":10845481,"line_start":275,"line_end":275,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845486,"byte_end":10845489,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845494,"byte_end":10845566,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845571,"byte_end":10845647,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845652,"byte_end":10845728,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845733,"byte_end":10845804,"line_start":280,"line_end":280,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845809,"byte_end":10845858,"line_start":281,"line_end":281,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5110},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847975,"byte_end":10847979,"line_start":347,"line_end":347,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846335,"byte_end":10846386,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846391,"byte_end":10846394,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846399,"byte_end":10846475,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846480,"byte_end":10846556,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846561,"byte_end":10846635,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846640,"byte_end":10846715,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846720,"byte_end":10846789,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846794,"byte_end":10846866,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846871,"byte_end":10846902,"line_start":310,"line_end":310,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846907,"byte_end":10846910,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846915,"byte_end":10846927,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846932,"byte_end":10846935,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846940,"byte_end":10847013,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847018,"byte_end":10847092,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847097,"byte_end":10847157,"line_start":316,"line_end":316,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847162,"byte_end":10847165,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847170,"byte_end":10847200,"line_start":318,"line_end":318,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847205,"byte_end":10847231,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847236,"byte_end":10847239,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847244,"byte_end":10847258,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847263,"byte_end":10847266,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847271,"byte_end":10847341,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847346,"byte_end":10847385,"line_start":324,"line_end":324,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847390,"byte_end":10847393,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847398,"byte_end":10847409,"line_start":326,"line_end":326,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847414,"byte_end":10847440,"line_start":327,"line_end":327,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847445,"byte_end":10847448,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847453,"byte_end":10847471,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847476,"byte_end":10847497,"line_start":330,"line_end":330,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847502,"byte_end":10847546,"line_start":331,"line_end":331,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847551,"byte_end":10847554,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847559,"byte_end":10847592,"line_start":333,"line_end":333,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847597,"byte_end":10847625,"line_start":334,"line_end":334,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847630,"byte_end":10847680,"line_start":335,"line_end":335,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847685,"byte_end":10847734,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847739,"byte_end":10847766,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847771,"byte_end":10847788,"line_start":338,"line_end":338,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847793,"byte_end":10847806,"line_start":339,"line_end":339,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847811,"byte_end":10847822,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847827,"byte_end":10847830,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847835,"byte_end":10847880,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847885,"byte_end":10847921,"line_start":343,"line_end":343,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847926,"byte_end":10847935,"line_start":344,"line_end":344,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847940,"byte_end":10847945,"line_start":345,"line_end":345,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10847950,"byte_end":10847957,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5113},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849112,"byte_end":10849118,"line_start":388,"line_end":388,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848231,"byte_end":10848275,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848280,"byte_end":10848283,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848288,"byte_end":10848363,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848368,"byte_end":10848423,"line_start":360,"line_end":360,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848428,"byte_end":10848431,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848436,"byte_end":10848450,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848455,"byte_end":10848458,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848463,"byte_end":10848470,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848475,"byte_end":10848501,"line_start":365,"line_end":365,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848506,"byte_end":10848509,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848514,"byte_end":10848532,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848537,"byte_end":10848558,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848563,"byte_end":10848610,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848615,"byte_end":10848645,"line_start":370,"line_end":370,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848650,"byte_end":10848680,"line_start":371,"line_end":371,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848685,"byte_end":10848715,"line_start":372,"line_end":372,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848720,"byte_end":10848750,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848755,"byte_end":10848788,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848793,"byte_end":10848814,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848819,"byte_end":10848830,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848835,"byte_end":10848838,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848843,"byte_end":10848866,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848871,"byte_end":10848896,"line_start":379,"line_end":379,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848901,"byte_end":10848926,"line_start":380,"line_end":380,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848931,"byte_end":10848956,"line_start":381,"line_end":381,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848961,"byte_end":10848986,"line_start":382,"line_end":382,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10848991,"byte_end":10849015,"line_start":383,"line_end":383,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849020,"byte_end":10849030,"line_start":384,"line_end":384,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849035,"byte_end":10849072,"line_start":385,"line_end":385,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849077,"byte_end":10849082,"line_start":386,"line_end":386,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849087,"byte_end":10849094,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5116},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851292,"byte_end":10851300,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849172,"byte_end":10849231,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849236,"byte_end":10849239,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849244,"byte_end":10849323,"line_start":394,"line_end":394,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849328,"byte_end":10849403,"line_start":395,"line_end":395,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849408,"byte_end":10849486,"line_start":396,"line_end":396,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849491,"byte_end":10849533,"line_start":397,"line_end":397,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849538,"byte_end":10849541,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849546,"byte_end":10849558,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849563,"byte_end":10849566,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849571,"byte_end":10849642,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849647,"byte_end":10849723,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849728,"byte_end":10849750,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849755,"byte_end":10849758,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849763,"byte_end":10849836,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849841,"byte_end":10849915,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849920,"byte_end":10849980,"line_start":407,"line_end":407,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849985,"byte_end":10849988,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10849993,"byte_end":10850019,"line_start":409,"line_end":409,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850024,"byte_end":10850048,"line_start":410,"line_end":410,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850053,"byte_end":10850083,"line_start":411,"line_end":411,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850088,"byte_end":10850091,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850096,"byte_end":10850110,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850115,"byte_end":10850118,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850123,"byte_end":10850130,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850135,"byte_end":10850161,"line_start":416,"line_end":416,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850166,"byte_end":10850169,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850174,"byte_end":10850192,"line_start":418,"line_end":418,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850197,"byte_end":10850218,"line_start":419,"line_end":419,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850223,"byte_end":10850269,"line_start":420,"line_end":420,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850274,"byte_end":10850319,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850324,"byte_end":10850354,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850359,"byte_end":10850362,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850367,"byte_end":10850400,"line_start":424,"line_end":424,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850405,"byte_end":10850444,"line_start":425,"line_end":425,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850449,"byte_end":10850488,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850493,"byte_end":10850555,"line_start":427,"line_end":427,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850560,"byte_end":10850571,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850576,"byte_end":10850579,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850584,"byte_end":10850617,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850622,"byte_end":10850671,"line_start":431,"line_end":431,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850676,"byte_end":10850723,"line_start":432,"line_end":432,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850728,"byte_end":10850764,"line_start":433,"line_end":433,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850769,"byte_end":10850780,"line_start":434,"line_end":434,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850785,"byte_end":10850788,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850793,"byte_end":10850813,"line_start":436,"line_end":436,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850818,"byte_end":10850857,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850862,"byte_end":10850907,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850912,"byte_end":10850915,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850920,"byte_end":10850959,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10850964,"byte_end":10851009,"line_start":441,"line_end":441,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851014,"byte_end":10851017,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851022,"byte_end":10851071,"line_start":443,"line_end":443,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851076,"byte_end":10851107,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851112,"byte_end":10851174,"line_start":445,"line_end":445,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851179,"byte_end":10851244,"line_start":446,"line_end":446,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851249,"byte_end":10851258,"line_start":447,"line_end":447,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851263,"byte_end":10851268,"line_start":448,"line_end":448,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851273,"byte_end":10851280,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5117},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853389,"byte_end":10853401,"line_start":509,"line_end":509,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851705,"byte_end":10851785,"line_start":462,"line_end":462,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851790,"byte_end":10851793,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851798,"byte_end":10851875,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851880,"byte_end":10851958,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10851963,"byte_end":10852011,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852016,"byte_end":10852019,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852024,"byte_end":10852050,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852055,"byte_end":10852058,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852063,"byte_end":10852075,"line_start":470,"line_end":470,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852080,"byte_end":10852083,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852088,"byte_end":10852161,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852166,"byte_end":10852223,"line_start":473,"line_end":473,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852228,"byte_end":10852309,"line_start":474,"line_end":474,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852314,"byte_end":10852317,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852322,"byte_end":10852352,"line_start":476,"line_end":476,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852357,"byte_end":10852383,"line_start":477,"line_end":477,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852388,"byte_end":10852391,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852396,"byte_end":10852410,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852415,"byte_end":10852418,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852423,"byte_end":10852501,"line_start":481,"line_end":481,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852506,"byte_end":10852577,"line_start":482,"line_end":482,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852582,"byte_end":10852585,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852590,"byte_end":10852601,"line_start":484,"line_end":484,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852606,"byte_end":10852632,"line_start":485,"line_end":485,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852637,"byte_end":10852676,"line_start":486,"line_end":486,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852681,"byte_end":10852684,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852689,"byte_end":10852707,"line_start":488,"line_end":488,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852712,"byte_end":10852733,"line_start":489,"line_end":489,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852738,"byte_end":10852782,"line_start":490,"line_end":490,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852787,"byte_end":10852790,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852795,"byte_end":10852828,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852833,"byte_end":10852861,"line_start":493,"line_end":493,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852866,"byte_end":10852952,"line_start":494,"line_end":494,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10852957,"byte_end":10853010,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853015,"byte_end":10853042,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853047,"byte_end":10853064,"line_start":497,"line_end":497,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853069,"byte_end":10853082,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853087,"byte_end":10853098,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853103,"byte_end":10853106,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853111,"byte_end":10853156,"line_start":501,"line_end":501,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853161,"byte_end":10853197,"line_start":502,"line_end":502,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853202,"byte_end":10853254,"line_start":503,"line_end":503,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853259,"byte_end":10853268,"line_start":504,"line_end":504,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853273,"byte_end":10853278,"line_start":505,"line_end":505,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853283,"byte_end":10853290,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853295,"byte_end":10853319,"line_start":507,"line_end":507,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5120},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854966,"byte_end":10854979,"line_start":562,"line_end":562,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853894,"byte_end":10853953,"line_start":528,"line_end":528,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853958,"byte_end":10853961,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10853966,"byte_end":10854034,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854039,"byte_end":10854107,"line_start":531,"line_end":531,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854112,"byte_end":10854179,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854184,"byte_end":10854187,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854192,"byte_end":10854260,"line_start":534,"line_end":534,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854265,"byte_end":10854268,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854273,"byte_end":10854285,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854290,"byte_end":10854293,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854298,"byte_end":10854365,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854370,"byte_end":10854382,"line_start":539,"line_end":539,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854387,"byte_end":10854390,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854395,"byte_end":10854409,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854414,"byte_end":10854417,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854422,"byte_end":10854429,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854434,"byte_end":10854454,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854459,"byte_end":10854491,"line_start":545,"line_end":545,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854496,"byte_end":10854522,"line_start":546,"line_end":546,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854527,"byte_end":10854530,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854535,"byte_end":10854550,"line_start":548,"line_end":548,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854555,"byte_end":10854605,"line_start":549,"line_end":549,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854610,"byte_end":10854613,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854618,"byte_end":10854665,"line_start":551,"line_end":551,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854670,"byte_end":10854712,"line_start":552,"line_end":552,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854717,"byte_end":10854728,"line_start":553,"line_end":553,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854733,"byte_end":10854736,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854741,"byte_end":10854794,"line_start":555,"line_end":555,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854799,"byte_end":10854849,"line_start":556,"line_end":556,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854854,"byte_end":10854865,"line_start":557,"line_end":557,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854870,"byte_end":10854903,"line_start":558,"line_end":558,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854908,"byte_end":10854913,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854918,"byte_end":10854925,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10854930,"byte_end":10854954,"line_start":561,"line_end":561,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5121},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855670,"byte_end":10855679,"line_start":584,"line_end":584,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855088,"byte_end":10855152,"line_start":566,"line_end":566,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855157,"byte_end":10855227,"line_start":567,"line_end":567,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855232,"byte_end":10855243,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855248,"byte_end":10855251,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855256,"byte_end":10855301,"line_start":570,"line_end":570,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855306,"byte_end":10855365,"line_start":571,"line_end":571,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855370,"byte_end":10855373,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855378,"byte_end":10855385,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855390,"byte_end":10855446,"line_start":574,"line_end":574,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855451,"byte_end":10855480,"line_start":575,"line_end":575,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855485,"byte_end":10855488,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855493,"byte_end":10855518,"line_start":577,"line_end":577,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855523,"byte_end":10855553,"line_start":578,"line_end":578,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855558,"byte_end":10855561,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855566,"byte_end":10855579,"line_start":580,"line_end":580,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855584,"byte_end":10855612,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855617,"byte_end":10855646,"line_start":582,"line_end":582,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855651,"byte_end":10855658,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5122},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857070,"byte_end":10857077,"line_start":626,"line_end":626,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855738,"byte_end":10855805,"line_start":588,"line_end":588,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855810,"byte_end":10855855,"line_start":589,"line_end":589,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855860,"byte_end":10855863,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855868,"byte_end":10855943,"line_start":591,"line_end":591,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10855948,"byte_end":10856023,"line_start":592,"line_end":592,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856028,"byte_end":10856101,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856106,"byte_end":10856181,"line_start":594,"line_end":594,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856186,"byte_end":10856208,"line_start":595,"line_end":595,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856213,"byte_end":10856216,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856221,"byte_end":10856297,"line_start":597,"line_end":597,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856302,"byte_end":10856321,"line_start":598,"line_end":598,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856326,"byte_end":10856329,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856334,"byte_end":10856356,"line_start":600,"line_end":600,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856361,"byte_end":10856387,"line_start":601,"line_end":601,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856392,"byte_end":10856395,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856400,"byte_end":10856414,"line_start":603,"line_end":603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856419,"byte_end":10856422,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856427,"byte_end":10856434,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856439,"byte_end":10856465,"line_start":606,"line_end":606,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856470,"byte_end":10856473,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856478,"byte_end":10856496,"line_start":608,"line_end":608,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856501,"byte_end":10856522,"line_start":609,"line_end":609,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856527,"byte_end":10856571,"line_start":610,"line_end":610,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856576,"byte_end":10856579,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856584,"byte_end":10856611,"line_start":612,"line_end":612,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856616,"byte_end":10856665,"line_start":613,"line_end":613,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856670,"byte_end":10856673,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856678,"byte_end":10856744,"line_start":615,"line_end":615,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856749,"byte_end":10856779,"line_start":616,"line_end":616,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856784,"byte_end":10856827,"line_start":617,"line_end":617,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856832,"byte_end":10856835,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856840,"byte_end":10856881,"line_start":619,"line_end":619,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856886,"byte_end":10856911,"line_start":620,"line_end":620,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856916,"byte_end":10856919,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856924,"byte_end":10856975,"line_start":622,"line_end":622,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10856980,"byte_end":10857030,"line_start":623,"line_end":623,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857035,"byte_end":10857040,"line_start":624,"line_end":624,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857045,"byte_end":10857052,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5125},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858840,"byte_end":10858851,"line_start":678,"line_end":678,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857319,"byte_end":10857398,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857403,"byte_end":10857417,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857422,"byte_end":10857425,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857430,"byte_end":10857510,"line_start":638,"line_end":638,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857515,"byte_end":10857600,"line_start":639,"line_end":639,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857605,"byte_end":10857687,"line_start":640,"line_end":640,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857692,"byte_end":10857766,"line_start":641,"line_end":641,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857771,"byte_end":10857774,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857779,"byte_end":10857855,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857860,"byte_end":10857879,"line_start":644,"line_end":644,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857884,"byte_end":10857887,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857892,"byte_end":10857914,"line_start":646,"line_end":646,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857919,"byte_end":10857945,"line_start":647,"line_end":647,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857950,"byte_end":10857982,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857987,"byte_end":10857990,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10857995,"byte_end":10858009,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858014,"byte_end":10858017,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858022,"byte_end":10858029,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858034,"byte_end":10858060,"line_start":653,"line_end":653,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858065,"byte_end":10858068,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858073,"byte_end":10858091,"line_start":655,"line_end":655,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858096,"byte_end":10858117,"line_start":656,"line_end":656,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858122,"byte_end":10858166,"line_start":657,"line_end":657,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858171,"byte_end":10858174,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858179,"byte_end":10858206,"line_start":659,"line_end":659,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858211,"byte_end":10858258,"line_start":660,"line_end":660,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858263,"byte_end":10858266,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858271,"byte_end":10858337,"line_start":662,"line_end":662,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858342,"byte_end":10858372,"line_start":663,"line_end":663,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858377,"byte_end":10858420,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858425,"byte_end":10858428,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858433,"byte_end":10858497,"line_start":666,"line_end":666,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858502,"byte_end":10858547,"line_start":667,"line_end":667,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858552,"byte_end":10858595,"line_start":668,"line_end":668,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858600,"byte_end":10858603,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858608,"byte_end":10858649,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858654,"byte_end":10858679,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858684,"byte_end":10858687,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858692,"byte_end":10858743,"line_start":673,"line_end":673,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858748,"byte_end":10858798,"line_start":674,"line_end":674,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858803,"byte_end":10858806,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858811,"byte_end":10858816,"line_start":676,"line_end":676,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10858821,"byte_end":10858828,"line_start":677,"line_end":677,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5126},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859474,"byte_end":10859486,"line_start":699,"line_end":699,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Sender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859103,"byte_end":10859160,"line_start":687,"line_end":687,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859165,"byte_end":10859168,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859173,"byte_end":10859187,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859192,"byte_end":10859195,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859200,"byte_end":10859207,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859212,"byte_end":10859267,"line_start":692,"line_end":692,"column_start":5,"column_end":60}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859272,"byte_end":10859298,"line_start":693,"line_end":693,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859303,"byte_end":10859338,"line_start":694,"line_end":694,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859343,"byte_end":10859346,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859351,"byte_end":10859408,"line_start":696,"line_end":696,"column_start":5,"column_end":62}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859413,"byte_end":10859450,"line_start":697,"line_end":697,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859455,"byte_end":10859462,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5127},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860529,"byte_end":10860537,"line_start":732,"line_end":732,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the current capacity of the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859573,"byte_end":10859621,"line_start":703,"line_end":703,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859626,"byte_end":10859629,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ The capacity goes down when sending a value by calling [`send`] or by reserving capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859634,"byte_end":10859726,"line_start":705,"line_end":705,"column_start":5,"column_end":97}},{"value":"/ with [`reserve`]. The capacity goes up when values are received by the [`Receiver`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859731,"byte_end":10859819,"line_start":706,"line_end":706,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859824,"byte_end":10859827,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859832,"byte_end":10859846,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859851,"byte_end":10859854,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859859,"byte_end":10859866,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859871,"byte_end":10859897,"line_start":711,"line_end":711,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859902,"byte_end":10859905,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859910,"byte_end":10859928,"line_start":713,"line_end":713,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859933,"byte_end":10859954,"line_start":714,"line_end":714,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel::<()>(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10859959,"byte_end":10860009,"line_start":715,"line_end":715,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860014,"byte_end":10860017,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860022,"byte_end":10860059,"line_start":717,"line_end":717,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860064,"byte_end":10860067,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation drops the capacity by one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860072,"byte_end":10860130,"line_start":719,"line_end":719,"column_start":5,"column_end":63}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860135,"byte_end":10860184,"line_start":720,"line_end":720,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860189,"byte_end":10860226,"line_start":721,"line_end":721,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860231,"byte_end":10860234,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/     // Sending and receiving a value increases the caapcity by one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860239,"byte_end":10860310,"line_start":723,"line_end":723,"column_start":5,"column_end":76}},{"value":"/     permit.send(());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860315,"byte_end":10860339,"line_start":724,"line_end":724,"column_start":5,"column_end":29}},{"value":"/     rx.recv().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860344,"byte_end":10860377,"line_start":725,"line_end":725,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860382,"byte_end":10860419,"line_start":726,"line_end":726,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860424,"byte_end":10860429,"line_start":727,"line_end":727,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860434,"byte_end":10860441,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860446,"byte_end":10860449,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860454,"byte_end":10860480,"line_start":730,"line_end":730,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860485,"byte_end":10860517,"line_start":731,"line_end":731,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5136},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10862084,"byte_end":10862088,"line_start":788,"line_end":788,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861011,"byte_end":10861057,"line_start":756,"line_end":756,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861062,"byte_end":10861065,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861070,"byte_end":10861145,"line_start":758,"line_end":758,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861150,"byte_end":10861224,"line_start":759,"line_end":759,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861229,"byte_end":10861303,"line_start":760,"line_end":760,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861308,"byte_end":10861356,"line_start":761,"line_end":761,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861361,"byte_end":10861364,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861369,"byte_end":10861409,"line_start":763,"line_end":763,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861414,"byte_end":10861417,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861422,"byte_end":10861436,"line_start":765,"line_end":765,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861441,"byte_end":10861444,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861449,"byte_end":10861456,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861461,"byte_end":10861487,"line_start":768,"line_end":768,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861492,"byte_end":10861495,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861500,"byte_end":10861518,"line_start":770,"line_end":770,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861523,"byte_end":10861544,"line_start":771,"line_end":771,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861549,"byte_end":10861593,"line_start":772,"line_end":772,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861598,"byte_end":10861601,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861606,"byte_end":10861633,"line_start":774,"line_end":774,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861638,"byte_end":10861687,"line_start":775,"line_end":775,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861692,"byte_end":10861695,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861700,"byte_end":10861766,"line_start":777,"line_end":777,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861771,"byte_end":10861801,"line_start":778,"line_end":778,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861806,"byte_end":10861849,"line_start":779,"line_end":779,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861854,"byte_end":10861857,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861862,"byte_end":10861901,"line_start":781,"line_end":781,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861906,"byte_end":10861931,"line_start":782,"line_end":782,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861936,"byte_end":10861939,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10861944,"byte_end":10861995,"line_start":784,"line_end":784,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10862000,"byte_end":10862050,"line_start":785,"line_end":785,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10862055,"byte_end":10862060,"line_start":786,"line_end":786,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10862065,"byte_end":10862072,"line_start":787,"line_end":787,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5334},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883682,"byte_end":10883697,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5336}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883524,"byte_end":10883578,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883579,"byte_end":10883582,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883583,"byte_end":10883615,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883616,"byte_end":10883670,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5343},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884490,"byte_end":10884507,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5345}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884114,"byte_end":10884171,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884172,"byte_end":10884175,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884176,"byte_end":10884208,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884209,"byte_end":10884263,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884264,"byte_end":10884267,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884268,"byte_end":10884350,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884351,"byte_end":10884354,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884355,"byte_end":10884478,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":5349},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885339,"byte_end":10885356,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884806,"byte_end":10884882,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884883,"byte_end":10884914,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884915,"byte_end":10884918,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884919,"byte_end":10884999,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885000,"byte_end":10885079,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885080,"byte_end":10885093,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885094,"byte_end":10885097,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885098,"byte_end":10885177,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885178,"byte_end":10885254,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885255,"byte_end":10885331,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5355},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886835,"byte_end":10886839,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885765,"byte_end":10885811,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885816,"byte_end":10885819,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885824,"byte_end":10885896,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885901,"byte_end":10885955,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885960,"byte_end":10885963,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885968,"byte_end":10885982,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885987,"byte_end":10885990,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885995,"byte_end":10886002,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886007,"byte_end":10886033,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886038,"byte_end":10886041,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886046,"byte_end":10886064,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886069,"byte_end":10886090,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886095,"byte_end":10886148,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886153,"byte_end":10886156,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886161,"byte_end":10886194,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886199,"byte_end":10886237,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886242,"byte_end":10886253,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886258,"byte_end":10886261,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886266,"byte_end":10886317,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886322,"byte_end":10886364,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886369,"byte_end":10886374,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886379,"byte_end":10886386,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886391,"byte_end":10886394,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886399,"byte_end":10886423,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886428,"byte_end":10886431,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886436,"byte_end":10886443,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886448,"byte_end":10886474,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886479,"byte_end":10886482,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886487,"byte_end":10886505,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886510,"byte_end":10886531,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886536,"byte_end":10886589,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886594,"byte_end":10886597,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886602,"byte_end":10886636,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886641,"byte_end":10886675,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886680,"byte_end":10886683,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886688,"byte_end":10886739,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886744,"byte_end":10886795,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886800,"byte_end":10886805,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886810,"byte_end":10886817,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5360},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887646,"byte_end":10887659,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10886961,"byte_end":10887023,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887028,"byte_end":10887031,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887036,"byte_end":10887048,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887053,"byte_end":10887056,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887061,"byte_end":10887128,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887133,"byte_end":10887145,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887150,"byte_end":10887153,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887158,"byte_end":10887172,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887177,"byte_end":10887180,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887185,"byte_end":10887192,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887197,"byte_end":10887217,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887222,"byte_end":10887248,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887253,"byte_end":10887256,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887261,"byte_end":10887279,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887284,"byte_end":10887305,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887310,"byte_end":10887369,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887374,"byte_end":10887377,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887382,"byte_end":10887429,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887434,"byte_end":10887487,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887492,"byte_end":10887503,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887508,"byte_end":10887511,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887516,"byte_end":10887544,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887549,"byte_end":10887583,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887588,"byte_end":10887593,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887598,"byte_end":10887605,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887610,"byte_end":10887634,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5361},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887979,"byte_end":10887984,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887742,"byte_end":10887806,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887811,"byte_end":10887814,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887819,"byte_end":10887894,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10887899,"byte_end":10887967,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5362},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888825,"byte_end":10888834,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888036,"byte_end":10888090,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888095,"byte_end":10888098,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888103,"byte_end":10888127,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888132,"byte_end":10888135,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888140,"byte_end":10888214,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888219,"byte_end":10888233,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888238,"byte_end":10888300,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888305,"byte_end":10888379,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888384,"byte_end":10888436,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888441,"byte_end":10888444,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888449,"byte_end":10888521,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888526,"byte_end":10888602,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888607,"byte_end":10888683,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888688,"byte_end":10888759,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888764,"byte_end":10888813,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5366},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889762,"byte_end":10889766,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889074,"byte_end":10889148,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889153,"byte_end":10889156,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889161,"byte_end":10889246,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889251,"byte_end":10889332,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889337,"byte_end":10889405,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889410,"byte_end":10889413,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889418,"byte_end":10889491,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889496,"byte_end":10889567,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889572,"byte_end":10889649,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889654,"byte_end":10889657,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889662,"byte_end":10889701,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10889706,"byte_end":10889750,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5372},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891695,"byte_end":10891701,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10890804,"byte_end":10890848,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10890853,"byte_end":10890856,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10890861,"byte_end":10890936,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10890941,"byte_end":10890996,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891001,"byte_end":10891004,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891009,"byte_end":10891023,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891028,"byte_end":10891031,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891036,"byte_end":10891043,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891048,"byte_end":10891074,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891079,"byte_end":10891082,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891087,"byte_end":10891105,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891110,"byte_end":10891131,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891136,"byte_end":10891192,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891197,"byte_end":10891227,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891232,"byte_end":10891262,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891267,"byte_end":10891297,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891302,"byte_end":10891332,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891337,"byte_end":10891370,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891375,"byte_end":10891396,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891401,"byte_end":10891412,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891417,"byte_end":10891420,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891425,"byte_end":10891448,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891453,"byte_end":10891478,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891483,"byte_end":10891508,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891513,"byte_end":10891538,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891543,"byte_end":10891568,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891573,"byte_end":10891597,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891602,"byte_end":10891612,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891660,"byte_end":10891665,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891670,"byte_end":10891677,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5375},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892398,"byte_end":10892407,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891754,"byte_end":10891818,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891823,"byte_end":10891872,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891877,"byte_end":10891927,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891932,"byte_end":10891935,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10891940,"byte_end":10892003,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892008,"byte_end":10892085,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892090,"byte_end":10892093,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892098,"byte_end":10892105,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892110,"byte_end":10892174,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892179,"byte_end":10892208,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892213,"byte_end":10892216,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892221,"byte_end":10892246,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892251,"byte_end":10892281,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892286,"byte_end":10892289,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892294,"byte_end":10892307,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892312,"byte_end":10892340,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892345,"byte_end":10892374,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892379,"byte_end":10892386,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5376},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892855,"byte_end":10892867,"line_start":307,"line_end":307,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<UnboundedSender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892466,"byte_end":10892523,"line_start":295,"line_end":295,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892528,"byte_end":10892531,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892536,"byte_end":10892550,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892555,"byte_end":10892558,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892563,"byte_end":10892570,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892575,"byte_end":10892639,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892644,"byte_end":10892670,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892675,"byte_end":10892710,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892715,"byte_end":10892718,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892723,"byte_end":10892789,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892794,"byte_end":10892831,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10892836,"byte_end":10892843,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5381},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":6383},{"krate":0,"index":6387},{"krate":0,"index":5384},{"krate":0,"index":5387},{"krate":0,"index":6390},{"krate":0,"index":6398},{"krate":0,"index":5389},{"krate":0,"index":5391},{"krate":0,"index":5394},{"krate":0,"index":6401},{"krate":0,"index":6404},{"krate":0,"index":5397},{"krate":0,"index":5399},{"krate":0,"index":6411},{"krate":0,"index":6419},{"krate":0,"index":6406},{"krate":0,"index":6408}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10892952,"byte_end":10892975,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6383},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893079,"byte_end":10893088,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893015,"byte_end":10893050,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6386},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893092,"byte_end":10893097,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":6383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6392},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893641,"byte_end":10893645,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6390},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893509,"byte_end":10893577,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893582,"byte_end":10893636,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6395},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893746,"byte_end":10893752,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6390},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893655,"byte_end":10893724,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893729,"byte_end":10893741,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6390},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893487,"byte_end":10893499,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6392},{"krate":0,"index":6395}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893341,"byte_end":10893412,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893413,"byte_end":10893460,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6401},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894390,"byte_end":10894399,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894328,"byte_end":10894361,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6413},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894908,"byte_end":10894915,"line_start":76,"line_end":76,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":6411},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6416},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10895028,"byte_end":10895034,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":6411},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6411},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894746,"byte_end":10894762,"line_start":73,"line_end":73,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6413},{"krate":0,"index":6416}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":24331,"byte_end":24355,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5410},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900430,"byte_end":10900435,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":5412},{"krate":0,"index":5413}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10895767,"byte_end":10895805,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10895806,"byte_end":10895809,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to [`std::sync::Mutex`], with two major","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10895810,"byte_end":10895878,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ differences: [`lock`] is an async method so does not block, and the lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10895879,"byte_end":10895955,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ guard is designed to be held across `.await` points.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10895956,"byte_end":10896012,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896013,"byte_end":10896016,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896017,"byte_end":10896058,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896059,"byte_end":10896062,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896063,"byte_end":10896143,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896144,"byte_end":10896210,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896211,"byte_end":10896214,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The feature that the async mutex offers over the blocking mutex is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896215,"byte_end":10896289,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ ability to keep it locked across an `.await` point. This makes the async","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896290,"byte_end":10896366,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ mutex more expensive than the blocking mutex, so the blocking mutex should","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896367,"byte_end":10896445,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ be preferred in the cases where it can be used. The primary use case for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896446,"byte_end":10896526,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ async mutex is to provide shared mutable access to IO resources such as a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896527,"byte_end":10896604,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ database connection. If the value behind the mutex is just data, it's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896605,"byte_end":10896678,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ usually appropriate to use a blocking mutex such as the one in the standard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896679,"byte_end":10896758,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ library or [`parking_lot`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896759,"byte_end":10896790,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896791,"byte_end":10896794,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that, although the compiler will not prevent the std `Mutex` from holding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896795,"byte_end":10896877,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ its guard across `.await` points in situations where the task is not movable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896878,"byte_end":10896958,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ between threads, this virtually never leads to correct concurrent code in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10896959,"byte_end":10897036,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ practice as it can easily lead to deadlocks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897037,"byte_end":10897085,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897086,"byte_end":10897089,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897090,"byte_end":10897169,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897170,"byte_end":10897246,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897247,"byte_end":10897324,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897325,"byte_end":10897358,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897359,"byte_end":10897362,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897363,"byte_end":10897438,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897439,"byte_end":10897517,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897518,"byte_end":10897560,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897561,"byte_end":10897564,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897565,"byte_end":10897592,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897593,"byte_end":10897641,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897642,"byte_end":10897720,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897721,"byte_end":10897724,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897725,"byte_end":10897740,"line_start":49,"line_end":49,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897741,"byte_end":10897744,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897745,"byte_end":10897763,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897764,"byte_end":10897791,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897792,"byte_end":10897815,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897816,"byte_end":10897819,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897820,"byte_end":10897838,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897839,"byte_end":10897860,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897861,"byte_end":10897905,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897906,"byte_end":10897945,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897946,"byte_end":10897949,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897950,"byte_end":10897983,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10897984,"byte_end":10898030,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898031,"byte_end":10898054,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898055,"byte_end":10898066,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898067,"byte_end":10898070,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898071,"byte_end":10898113,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898114,"byte_end":10898133,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898134,"byte_end":10898139,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898140,"byte_end":10898147,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898148,"byte_end":10898151,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898152,"byte_end":10898155,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898156,"byte_end":10898174,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898175,"byte_end":10898202,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898203,"byte_end":10898226,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898227,"byte_end":10898230,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898231,"byte_end":10898249,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898250,"byte_end":10898271,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898272,"byte_end":10898316,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898317,"byte_end":10898320,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     for i in 0..5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898321,"byte_end":10898344,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898345,"byte_end":10898391,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898392,"byte_end":10898429,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/             for j in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898430,"byte_end":10898462,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898463,"byte_end":10898520,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898521,"byte_end":10898552,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{} {} {}\", i, j, lock);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898553,"byte_end":10898606,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898607,"byte_end":10898624,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898625,"byte_end":10898640,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898641,"byte_end":10898650,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898651,"byte_end":10898654,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898655,"byte_end":10898669,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898670,"byte_end":10898712,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898713,"byte_end":10898735,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898736,"byte_end":10898749,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898750,"byte_end":10898759,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898760,"byte_end":10898794,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898795,"byte_end":10898800,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898801,"byte_end":10898808,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898809,"byte_end":10898885,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898886,"byte_end":10898959,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898960,"byte_end":10898975,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10898976,"byte_end":10899051,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899052,"byte_end":10899128,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899129,"byte_end":10899181,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899182,"byte_end":10899185,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899186,"byte_end":10899264,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899265,"byte_end":10899345,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899346,"byte_end":10899422,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ data. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899423,"byte_end":10899503,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899504,"byte_end":10899584,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ Note that there's some unpredictability to the timing between when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899585,"byte_end":10899659,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ threads are started, but once they are going they alternate predictably.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899660,"byte_end":10899736,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899737,"byte_end":10899817,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899818,"byte_end":10899887,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899888,"byte_end":10899891,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899892,"byte_end":10899971,"line_start":115,"line_end":115,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10899972,"byte_end":10900051,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900052,"byte_end":10900130,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900131,"byte_end":10900192,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900193,"byte_end":10900196,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900197,"byte_end":10900224,"line_start":120,"line_end":120,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900225,"byte_end":10900262,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900263,"byte_end":10900297,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900298,"byte_end":10900347,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900348,"byte_end":10900385,"line_start":124,"line_end":124,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900386,"byte_end":10900418,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5414},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900935,"byte_end":10900945,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5417}],"decl_id":null,"docs":" A handle to a held `Mutex`. The guard can be held across any `.await` point\n as it is [`Send`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`. The guard can be held across any `.await` point","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900503,"byte_end":10900582,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ as it is [`Send`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900583,"byte_end":10900605,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900606,"byte_end":10900609,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900610,"byte_end":10900689,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900690,"byte_end":10900765,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900766,"byte_end":10900799,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900800,"byte_end":10900803,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900804,"byte_end":10900882,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900883,"byte_end":10900923,"line_start":139,"line_end":139,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5418},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901733,"byte_end":10901748,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":5420}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10900990,"byte_end":10901028,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901029,"byte_end":10901032,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901033,"byte_end":10901114,"line_start":146,"line_end":146,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901115,"byte_end":10901195,"line_start":147,"line_end":147,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901196,"byte_end":10901270,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901271,"byte_end":10901332,"line_start":149,"line_end":149,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901333,"byte_end":10901336,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901337,"byte_end":10901416,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901417,"byte_end":10901496,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901497,"byte_end":10901565,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901566,"byte_end":10901569,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901570,"byte_end":10901648,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901649,"byte_end":10901689,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901690,"byte_end":10901693,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10901694,"byte_end":10901721,"line_start":158,"line_end":158,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6422},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902837,"byte_end":10902849,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902248,"byte_end":10902321,"line_start":171,"line_end":171,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902322,"byte_end":10902358,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902359,"byte_end":10902362,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902363,"byte_end":10902441,"line_start":174,"line_end":174,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902442,"byte_end":10902445,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902446,"byte_end":10902523,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902524,"byte_end":10902551,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902552,"byte_end":10902555,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902556,"byte_end":10902633,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902634,"byte_end":10902655,"line_start":180,"line_end":180,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902656,"byte_end":10902659,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902660,"byte_end":10902700,"line_start":182,"line_end":182,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902701,"byte_end":10902753,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902754,"byte_end":10902808,"line_start":184,"line_end":184,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5434},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904076,"byte_end":10904079,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903873,"byte_end":10903931,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903936,"byte_end":10903939,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903944,"byte_end":10903958,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903963,"byte_end":10903966,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903971,"byte_end":10903978,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903983,"byte_end":10904010,"line_start":226,"line_end":226,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904015,"byte_end":10904018,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904023,"byte_end":10904052,"line_start":228,"line_end":228,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904057,"byte_end":10904064,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5435},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905237,"byte_end":10905241,"line_start":278,"line_end":278,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904777,"byte_end":10904823,"line_start":261,"line_end":261,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904828,"byte_end":10904874,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904879,"byte_end":10904950,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904955,"byte_end":10904958,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904963,"byte_end":10904977,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904982,"byte_end":10904985,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10904990,"byte_end":10904997,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905002,"byte_end":10905029,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905034,"byte_end":10905037,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905042,"byte_end":10905060,"line_start":270,"line_end":270,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905065,"byte_end":10905086,"line_start":271,"line_end":271,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905091,"byte_end":10905125,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905130,"byte_end":10905133,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905138,"byte_end":10905177,"line_start":274,"line_end":274,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905182,"byte_end":10905197,"line_start":275,"line_end":275,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905202,"byte_end":10905207,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905212,"byte_end":10905219,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5438},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906268,"byte_end":10906278,"line_start":309,"line_end":309,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905347,"byte_end":10905421,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905426,"byte_end":10905493,"line_start":284,"line_end":284,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905498,"byte_end":10905522,"line_start":285,"line_end":285,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905527,"byte_end":10905530,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905535,"byte_end":10905608,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905613,"byte_end":10905686,"line_start":288,"line_end":288,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905691,"byte_end":10905762,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905767,"byte_end":10905842,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905847,"byte_end":10905889,"line_start":291,"line_end":291,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905894,"byte_end":10905897,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905902,"byte_end":10905916,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905921,"byte_end":10905924,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905929,"byte_end":10905936,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905941,"byte_end":10905968,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10905973,"byte_end":10905996,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906001,"byte_end":10906004,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906009,"byte_end":10906027,"line_start":299,"line_end":299,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906032,"byte_end":10906053,"line_start":300,"line_end":300,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906058,"byte_end":10906102,"line_start":301,"line_end":301,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906107,"byte_end":10906110,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906115,"byte_end":10906168,"line_start":303,"line_end":303,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906173,"byte_end":10906188,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906193,"byte_end":10906198,"line_start":305,"line_end":305,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906203,"byte_end":10906210,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906215,"byte_end":10906218,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906223,"byte_end":10906250,"line_start":308,"line_end":308,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5445},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907155,"byte_end":10907163,"line_start":339,"line_end":339,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906687,"byte_end":10906756,"line_start":322,"line_end":322,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906761,"byte_end":10906803,"line_start":323,"line_end":323,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906808,"byte_end":10906811,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906816,"byte_end":10906850,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906855,"byte_end":10906869,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906874,"byte_end":10906877,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906882,"byte_end":10906889,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906894,"byte_end":10906921,"line_start":329,"line_end":329,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906926,"byte_end":10906989,"line_start":330,"line_end":330,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10906994,"byte_end":10906997,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907002,"byte_end":10907032,"line_start":332,"line_end":332,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907037,"byte_end":10907040,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907045,"byte_end":10907075,"line_start":334,"line_end":334,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907080,"byte_end":10907102,"line_start":335,"line_end":335,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907107,"byte_end":10907119,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907124,"byte_end":10907131,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907136,"byte_end":10907143,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5446},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907843,"byte_end":10907850,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907372,"byte_end":10907427,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907432,"byte_end":10907435,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907440,"byte_end":10907515,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907520,"byte_end":10907594,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907599,"byte_end":10907602,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907607,"byte_end":10907621,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907626,"byte_end":10907629,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907634,"byte_end":10907641,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907646,"byte_end":10907673,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907678,"byte_end":10907681,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907686,"byte_end":10907701,"line_start":356,"line_end":356,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907706,"byte_end":10907744,"line_start":357,"line_end":357,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907749,"byte_end":10907752,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907757,"byte_end":10907789,"line_start":359,"line_end":359,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907794,"byte_end":10907809,"line_start":360,"line_end":360,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907814,"byte_end":10907819,"line_start":361,"line_end":361,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10907824,"byte_end":10907831,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5447},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908931,"byte_end":10908945,"line_start":394,"line_end":394,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908019,"byte_end":10908093,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908098,"byte_end":10908135,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908140,"byte_end":10908143,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908148,"byte_end":10908216,"line_start":373,"line_end":373,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908221,"byte_end":10908294,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908299,"byte_end":10908375,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908380,"byte_end":10908454,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908459,"byte_end":10908507,"line_start":377,"line_end":377,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908512,"byte_end":10908515,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908520,"byte_end":10908554,"line_start":379,"line_end":379,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908559,"byte_end":10908586,"line_start":380,"line_end":380,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908591,"byte_end":10908605,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908610,"byte_end":10908613,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908618,"byte_end":10908625,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908630,"byte_end":10908657,"line_start":384,"line_end":384,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908662,"byte_end":10908685,"line_start":385,"line_end":385,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908690,"byte_end":10908753,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908758,"byte_end":10908761,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908766,"byte_end":10908806,"line_start":388,"line_end":388,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908811,"byte_end":10908814,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908819,"byte_end":10908863,"line_start":390,"line_end":390,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908868,"byte_end":10908890,"line_start":391,"line_end":391,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908895,"byte_end":10908907,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10908912,"byte_end":10908919,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5448},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909503,"byte_end":10909513,"line_start":415,"line_end":415,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909170,"byte_end":10909224,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909229,"byte_end":10909243,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909248,"byte_end":10909251,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909256,"byte_end":10909263,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909268,"byte_end":10909295,"line_start":405,"line_end":405,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909300,"byte_end":10909303,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909308,"byte_end":10909326,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909331,"byte_end":10909352,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909357,"byte_end":10909391,"line_start":409,"line_end":409,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909396,"byte_end":10909399,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909404,"byte_end":10909439,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909444,"byte_end":10909469,"line_start":412,"line_end":412,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909474,"byte_end":10909479,"line_start":413,"line_end":413,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909484,"byte_end":10909491,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6427},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915417,"byte_end":10915423,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":6428},{"krate":0,"index":6429}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912574,"byte_end":10912610,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912611,"byte_end":10912614,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912615,"byte_end":10912691,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912692,"byte_end":10912772,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912773,"byte_end":10912814,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912815,"byte_end":10912818,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912819,"byte_end":10912893,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912894,"byte_end":10912979,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10912980,"byte_end":10913046,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913047,"byte_end":10913050,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913051,"byte_end":10913109,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913110,"byte_end":10913190,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913191,"byte_end":10913271,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913272,"byte_end":10913355,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913356,"byte_end":10913406,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913407,"byte_end":10913410,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913411,"byte_end":10913495,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913496,"byte_end":10913571,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913572,"byte_end":10913642,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913643,"byte_end":10913646,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913647,"byte_end":10913731,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913732,"byte_end":10913805,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913806,"byte_end":10913877,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913878,"byte_end":10913881,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913882,"byte_end":10913896,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913897,"byte_end":10913900,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913901,"byte_end":10913917,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913918,"byte_end":10913921,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913922,"byte_end":10913929,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913930,"byte_end":10913958,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913959,"byte_end":10913982,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913983,"byte_end":10913986,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10913987,"byte_end":10914005,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914006,"byte_end":10914027,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914028,"byte_end":10914073,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914074,"byte_end":10914111,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914112,"byte_end":10914115,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914116,"byte_end":10914149,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914150,"byte_end":10914187,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914188,"byte_end":10914234,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914235,"byte_end":10914246,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914247,"byte_end":10914250,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914251,"byte_end":10914292,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914293,"byte_end":10914321,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914322,"byte_end":10914327,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914328,"byte_end":10914335,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914336,"byte_end":10914339,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914340,"byte_end":10914365,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914366,"byte_end":10914369,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914370,"byte_end":10914377,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914378,"byte_end":10914406,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914407,"byte_end":10914410,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914411,"byte_end":10914446,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914447,"byte_end":10914472,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914473,"byte_end":10914476,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914477,"byte_end":10914500,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914501,"byte_end":10914536,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914537,"byte_end":10914560,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914561,"byte_end":10914566,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914567,"byte_end":10914570,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914571,"byte_end":10914595,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914596,"byte_end":10914634,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914635,"byte_end":10914674,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914675,"byte_end":10914709,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914710,"byte_end":10914713,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914714,"byte_end":10914769,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914770,"byte_end":10914807,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914808,"byte_end":10914817,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914818,"byte_end":10914821,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914822,"byte_end":10914861,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914862,"byte_end":10914880,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914881,"byte_end":10914912,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914913,"byte_end":10914991,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10914992,"byte_end":10915025,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915026,"byte_end":10915043,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915044,"byte_end":10915047,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915048,"byte_end":10915098,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915099,"byte_end":10915144,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915145,"byte_end":10915158,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915159,"byte_end":10915168,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915169,"byte_end":10915174,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915175,"byte_end":10915182,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915183,"byte_end":10915186,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915187,"byte_end":10915216,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915217,"byte_end":10915258,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915259,"byte_end":10915303,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915304,"byte_end":10915346,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10915347,"byte_end":10915388,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6449},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10916273,"byte_end":10916281,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6453}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10916207,"byte_end":10916244,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5527},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917622,"byte_end":10917625,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917418,"byte_end":10917474,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917479,"byte_end":10917482,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917487,"byte_end":10917501,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917506,"byte_end":10917509,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917514,"byte_end":10917521,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917526,"byte_end":10917554,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917559,"byte_end":10917562,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917567,"byte_end":10917598,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917603,"byte_end":10917610,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5528},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919326,"byte_end":10919334,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918279,"byte_end":10918307,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918312,"byte_end":10918315,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918320,"byte_end":10918338,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918343,"byte_end":10918346,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918351,"byte_end":10918364,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918369,"byte_end":10918398,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918403,"byte_end":10918410,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918415,"byte_end":10918418,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918423,"byte_end":10918499,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918504,"byte_end":10918582,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918587,"byte_end":10918662,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918667,"byte_end":10918740,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918745,"byte_end":10918748,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918753,"byte_end":10918793,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918798,"byte_end":10918801,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918806,"byte_end":10918820,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918825,"byte_end":10918828,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918833,"byte_end":10918840,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918845,"byte_end":10918873,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918878,"byte_end":10918901,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918906,"byte_end":10918909,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918914,"byte_end":10918932,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918937,"byte_end":10918958,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10918963,"byte_end":10919008,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919013,"byte_end":10919050,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919055,"byte_end":10919058,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919063,"byte_end":10919096,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919101,"byte_end":10919138,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919143,"byte_end":10919189,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919194,"byte_end":10919205,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919210,"byte_end":10919213,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919218,"byte_end":10919259,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919264,"byte_end":10919292,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919297,"byte_end":10919302,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919307,"byte_end":10919314,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5529},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10921110,"byte_end":10921120,"line_start":317,"line_end":317,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919859,"byte_end":10919886,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919891,"byte_end":10919894,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919899,"byte_end":10919970,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10919975,"byte_end":10920043,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920048,"byte_end":10920124,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920129,"byte_end":10920174,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920179,"byte_end":10920182,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920187,"byte_end":10920261,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920266,"byte_end":10920344,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920349,"byte_end":10920421,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920426,"byte_end":10920440,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920445,"byte_end":10920448,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920453,"byte_end":10920497,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920502,"byte_end":10920505,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920510,"byte_end":10920524,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920529,"byte_end":10920532,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920537,"byte_end":10920544,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920549,"byte_end":10920577,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920582,"byte_end":10920605,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920610,"byte_end":10920613,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920618,"byte_end":10920636,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920641,"byte_end":10920662,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920667,"byte_end":10920712,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920717,"byte_end":10920754,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920759,"byte_end":10920762,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920767,"byte_end":10920800,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920805,"byte_end":10920842,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920847,"byte_end":10920893,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920898,"byte_end":10920909,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920914,"byte_end":10920917,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920922,"byte_end":10920963,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10920968,"byte_end":10920996,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10921001,"byte_end":10921006,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10921011,"byte_end":10921018,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5530},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923455,"byte_end":10923469,"line_start":383,"line_end":383,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922363,"byte_end":10922393,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922398,"byte_end":10922401,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922406,"byte_end":10922476,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/ `notify_one()`, no permit is stored to be used by the next call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922481,"byte_end":10922551,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ `notified().await`. The purpose of this method is to notify all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922556,"byte_end":10922623,"line_start":355,"line_end":355,"column_start":5,"column_end":72}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922628,"byte_end":10922699,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922704,"byte_end":10922780,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922785,"byte_end":10922788,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922793,"byte_end":10922807,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922812,"byte_end":10922815,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922820,"byte_end":10922827,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922832,"byte_end":10922860,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922865,"byte_end":10922888,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922893,"byte_end":10922896,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922901,"byte_end":10922919,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922924,"byte_end":10922945,"line_start":366,"line_end":366,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10922950,"byte_end":10922995,"line_start":367,"line_end":367,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923000,"byte_end":10923037,"line_start":368,"line_end":368,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923042,"byte_end":10923045,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923050,"byte_end":10923092,"line_start":370,"line_end":370,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923097,"byte_end":10923139,"line_start":371,"line_end":371,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923144,"byte_end":10923147,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923152,"byte_end":10923198,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923203,"byte_end":10923249,"line_start":374,"line_end":374,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923254,"byte_end":10923291,"line_start":375,"line_end":375,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923296,"byte_end":10923307,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923312,"byte_end":10923315,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923320,"byte_end":10923344,"line_start":378,"line_end":378,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923349,"byte_end":10923373,"line_start":379,"line_end":379,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923378,"byte_end":10923421,"line_start":380,"line_end":380,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923426,"byte_end":10923431,"line_start":381,"line_end":381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10923436,"byte_end":10923443,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5554},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5558},{"krate":0,"index":5559},{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5562},{"krate":0,"index":5563},{"krate":0,"index":5564},{"krate":0,"index":13074},{"krate":0,"index":5565},{"krate":0,"index":13076},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":13078},{"krate":0,"index":5568},{"krate":0,"index":13080},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":6467},{"krate":0,"index":6470},{"krate":0,"index":6473},{"krate":0,"index":6476},{"krate":0,"index":5573},{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5588},{"krate":0,"index":5591},{"krate":0,"index":6504},{"krate":0,"index":6508},{"krate":0,"index":6507},{"krate":0,"index":5602},{"krate":0,"index":5604},{"krate":0,"index":5615},{"krate":0,"index":5618},{"krate":0,"index":5622},{"krate":0,"index":5625},{"krate":0,"index":5629},{"krate":0,"index":5636},{"krate":0,"index":5638},{"krate":0,"index":5640},{"krate":0,"index":5642},{"krate":0,"index":5645},{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5653},{"krate":0,"index":5667}],"decl_id":null,"docs":" A one-shot channel is used for sending a single message between\n asynchronous tasks. The [`channel`] function is used to create a\n [`Sender`] and [`Receiver`] handle pair that form the channel.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A one-shot channel is used for sending a single message between","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936579,"byte_end":10936646,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ asynchronous tasks. The [`channel`] function is used to create a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936647,"byte_end":10936715,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ [`Sender`] and [`Receiver`] handle pair that form the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936716,"byte_end":10936782,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936783,"byte_end":10936786,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is used by the producer to send the value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936787,"byte_end":10936853,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ The `Receiver` handle is used by the consumer to receive the value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936854,"byte_end":10936925,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936926,"byte_end":10936929,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936930,"byte_end":10936976,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936977,"byte_end":10936980,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936981,"byte_end":10936995,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10936996,"byte_end":10936999,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937000,"byte_end":10937007,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937008,"byte_end":10937037,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937038,"byte_end":10937041,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937042,"byte_end":10937060,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937061,"byte_end":10937082,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937083,"byte_end":10937125,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937126,"byte_end":10937129,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937130,"byte_end":10937163,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937164,"byte_end":10937204,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937205,"byte_end":10937254,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937255,"byte_end":10937268,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937269,"byte_end":10937280,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937281,"byte_end":10937284,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937285,"byte_end":10937309,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937310,"byte_end":10937357,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937358,"byte_end":10937411,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937412,"byte_end":10937421,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937422,"byte_end":10937427,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937428,"byte_end":10937435,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937436,"byte_end":10937439,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937440,"byte_end":10937513,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937514,"byte_end":10937539,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937540,"byte_end":10937543,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937544,"byte_end":10937551,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937552,"byte_end":10937581,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937582,"byte_end":10937585,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937586,"byte_end":10937604,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937605,"byte_end":10937626,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937627,"byte_end":10937676,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937677,"byte_end":10937680,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937681,"byte_end":10937714,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937715,"byte_end":10937736,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937737,"byte_end":10937748,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937749,"byte_end":10937752,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937753,"byte_end":10937777,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937778,"byte_end":10937829,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937830,"byte_end":10937883,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937884,"byte_end":10937893,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937894,"byte_end":10937899,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10937900,"byte_end":10937907,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6467},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938430,"byte_end":10938436,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6469}],"decl_id":null,"docs":" Sends a value to the associated [`Receiver`].","sig":null,"attributes":[{"value":"/ Sends a value to the associated [`Receiver`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938239,"byte_end":10938288,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938289,"byte_end":10938292,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938293,"byte_end":10938363,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938364,"byte_end":10938401,"line_start":70,"line_end":70,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6473},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939603,"byte_end":10939611,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6475}],"decl_id":null,"docs":" Receive a value from the associated [`Sender`].","sig":null,"attributes":[{"value":"/ Receive a value from the associated [`Sender`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938479,"byte_end":10938530,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938531,"byte_end":10938534,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938535,"byte_end":10938605,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938606,"byte_end":10938643,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938644,"byte_end":10938647,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938648,"byte_end":10938662,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938663,"byte_end":10938666,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938667,"byte_end":10938674,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938675,"byte_end":10938704,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938705,"byte_end":10938708,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938709,"byte_end":10938727,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938728,"byte_end":10938749,"line_start":87,"line_end":87,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938750,"byte_end":10938792,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938793,"byte_end":10938796,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938797,"byte_end":10938830,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938831,"byte_end":10938871,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938872,"byte_end":10938921,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938922,"byte_end":10938935,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938936,"byte_end":10938947,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938948,"byte_end":10938951,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938952,"byte_end":10938976,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10938977,"byte_end":10939024,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939025,"byte_end":10939078,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939079,"byte_end":10939088,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939089,"byte_end":10939094,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939095,"byte_end":10939102,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939103,"byte_end":10939106,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939107,"byte_end":10939180,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939181,"byte_end":10939206,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939207,"byte_end":10939210,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939211,"byte_end":10939218,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939219,"byte_end":10939248,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939249,"byte_end":10939252,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939253,"byte_end":10939271,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939272,"byte_end":10939293,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939294,"byte_end":10939343,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939344,"byte_end":10939347,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939348,"byte_end":10939381,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939382,"byte_end":10939403,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939404,"byte_end":10939415,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939416,"byte_end":10939419,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939420,"byte_end":10939444,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939445,"byte_end":10939496,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939497,"byte_end":10939550,"line_start":119,"line_end":119,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939551,"byte_end":10939560,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939561,"byte_end":10939566,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939567,"byte_end":10939574,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5573},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939662,"byte_end":10939667,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":5574},{"krate":0,"index":6479},{"krate":0,"index":6489},{"krate":0,"index":6486},{"krate":0,"index":6487},{"krate":0,"index":6482},{"krate":0,"index":6483},{"krate":0,"index":6491},{"krate":0,"index":6502},{"krate":0,"index":6499},{"krate":0,"index":6500},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":5575},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5580}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939674,"byte_end":10939697,"line_start":129,"line_end":129,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6479},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939839,"byte_end":10939848,"line_start":135,"line_end":135,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939722,"byte_end":10939787,"line_start":133,"line_end":133,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6492},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940070,"byte_end":10940075,"line_start":141,"line_end":141,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6491},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940003,"byte_end":10940061,"line_start":140,"line_end":140,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6494},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940164,"byte_end":10940170,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6491},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940086,"byte_end":10940155,"line_start":143,"line_end":143,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6491},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939980,"byte_end":10939992,"line_start":139,"line_end":139,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":6492},{"krate":0,"index":6494}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10939870,"byte_end":10939930,"line_start":137,"line_end":137,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":5602},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942903,"byte_end":10942910,"line_start":253,"line_end":253,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942088,"byte_end":10942167,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942168,"byte_end":10942178,"line_start":224,"line_end":224,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942179,"byte_end":10942182,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942183,"byte_end":10942259,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942260,"byte_end":10942338,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942339,"byte_end":10942385,"line_start":228,"line_end":228,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942386,"byte_end":10942389,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942390,"byte_end":10942436,"line_start":230,"line_end":230,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942437,"byte_end":10942440,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942441,"byte_end":10942455,"line_start":232,"line_end":232,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942456,"byte_end":10942459,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942460,"byte_end":10942467,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942468,"byte_end":10942497,"line_start":235,"line_end":235,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942498,"byte_end":10942501,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942502,"byte_end":10942520,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942521,"byte_end":10942542,"line_start":238,"line_end":238,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942543,"byte_end":10942585,"line_start":239,"line_end":239,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942586,"byte_end":10942589,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942590,"byte_end":10942623,"line_start":241,"line_end":241,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942624,"byte_end":10942664,"line_start":242,"line_end":242,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942665,"byte_end":10942714,"line_start":243,"line_end":243,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942715,"byte_end":10942728,"line_start":244,"line_end":244,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942729,"byte_end":10942740,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942741,"byte_end":10942744,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942745,"byte_end":10942769,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942770,"byte_end":10942817,"line_start":248,"line_end":248,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942818,"byte_end":10942871,"line_start":249,"line_end":249,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942872,"byte_end":10942881,"line_start":250,"line_end":250,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942882,"byte_end":10942887,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10942888,"byte_end":10942895,"line_start":252,"line_end":252,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944933,"byte_end":10944937,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943362,"byte_end":10943437,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943442,"byte_end":10943458,"line_start":271,"line_end":271,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943463,"byte_end":10943466,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943471,"byte_end":10943550,"line_start":273,"line_end":273,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943555,"byte_end":10943630,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943635,"byte_end":10943711,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943716,"byte_end":10943788,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943793,"byte_end":10943806,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943811,"byte_end":10943814,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943819,"byte_end":10943895,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943900,"byte_end":10943976,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943981,"byte_end":10944053,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944058,"byte_end":10944131,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944136,"byte_end":10944210,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944215,"byte_end":10944287,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944292,"byte_end":10944329,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944334,"byte_end":10944337,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944342,"byte_end":10944356,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944361,"byte_end":10944364,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944369,"byte_end":10944401,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944406,"byte_end":10944409,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944414,"byte_end":10944421,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944426,"byte_end":10944455,"line_start":292,"line_end":292,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944460,"byte_end":10944463,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944468,"byte_end":10944486,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944491,"byte_end":10944512,"line_start":295,"line_end":295,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944517,"byte_end":10944559,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944564,"byte_end":10944567,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944572,"byte_end":10944605,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944610,"byte_end":10944650,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944655,"byte_end":10944704,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944709,"byte_end":10944722,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944727,"byte_end":10944738,"line_start":302,"line_end":302,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944743,"byte_end":10944746,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944751,"byte_end":10944775,"line_start":304,"line_end":304,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944780,"byte_end":10944827,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944832,"byte_end":10944885,"line_start":306,"line_end":306,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944890,"byte_end":10944899,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944904,"byte_end":10944909,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10944914,"byte_end":10944921,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5608},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947275,"byte_end":10947281,"line_start":393,"line_end":393,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945270,"byte_end":10945328,"line_start":326,"line_end":326,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945333,"byte_end":10945336,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945341,"byte_end":10945415,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945420,"byte_end":10945454,"line_start":329,"line_end":329,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945459,"byte_end":10945462,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945467,"byte_end":10945532,"line_start":331,"line_end":331,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945537,"byte_end":10945609,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945614,"byte_end":10945617,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945622,"byte_end":10945634,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945639,"byte_end":10945642,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945647,"byte_end":10945695,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945700,"byte_end":10945703,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945708,"byte_end":10945734,"line_start":338,"line_end":338,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945739,"byte_end":10945769,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945774,"byte_end":10945777,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945782,"byte_end":10945796,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945801,"byte_end":10945804,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945809,"byte_end":10945824,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945829,"byte_end":10945832,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945837,"byte_end":10945844,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945849,"byte_end":10945878,"line_start":346,"line_end":346,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945883,"byte_end":10945886,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945891,"byte_end":10945909,"line_start":348,"line_end":348,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945914,"byte_end":10945935,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945940,"byte_end":10945992,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10945997,"byte_end":10946000,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946005,"byte_end":10946038,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946043,"byte_end":10946064,"line_start":353,"line_end":353,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946069,"byte_end":10946080,"line_start":354,"line_end":354,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946085,"byte_end":10946088,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946093,"byte_end":10946119,"line_start":356,"line_end":356,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946124,"byte_end":10946165,"line_start":357,"line_end":357,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946170,"byte_end":10946175,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946180,"byte_end":10946187,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946192,"byte_end":10946195,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946200,"byte_end":10946222,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946227,"byte_end":10946230,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946235,"byte_end":10946242,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946247,"byte_end":10946276,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946281,"byte_end":10946319,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946324,"byte_end":10946327,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946332,"byte_end":10946366,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946371,"byte_end":10946422,"line_start":368,"line_end":368,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946427,"byte_end":10946452,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946457,"byte_end":10946462,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946467,"byte_end":10946470,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946475,"byte_end":10946493,"line_start":372,"line_end":372,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946498,"byte_end":10946519,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946524,"byte_end":10946570,"line_start":374,"line_end":374,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946575,"byte_end":10946578,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946583,"byte_end":10946616,"line_start":376,"line_end":376,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946621,"byte_end":10946649,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946654,"byte_end":10946690,"line_start":378,"line_end":378,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946695,"byte_end":10946770,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946775,"byte_end":10946792,"line_start":380,"line_end":380,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946797,"byte_end":10946835,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946840,"byte_end":10946924,"line_start":382,"line_end":382,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10946929,"byte_end":10947012,"line_start":383,"line_end":383,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947017,"byte_end":10947060,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947065,"byte_end":10947082,"line_start":385,"line_end":385,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947087,"byte_end":10947100,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947105,"byte_end":10947116,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947121,"byte_end":10947124,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947129,"byte_end":10947165,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947170,"byte_end":10947235,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947240,"byte_end":10947245,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947250,"byte_end":10947257,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5613},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948151,"byte_end":10948160,"line_start":426,"line_end":426,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947392,"byte_end":10947466,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947471,"byte_end":10947474,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947479,"byte_end":10947553,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947558,"byte_end":10947592,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947597,"byte_end":10947600,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947605,"byte_end":10947680,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947685,"byte_end":10947688,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947693,"byte_end":10947719,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947724,"byte_end":10947754,"line_start":407,"line_end":407,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947759,"byte_end":10947762,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947767,"byte_end":10947781,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947786,"byte_end":10947789,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947794,"byte_end":10947801,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947806,"byte_end":10947835,"line_start":412,"line_end":412,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947840,"byte_end":10947843,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947848,"byte_end":10947866,"line_start":414,"line_end":414,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947871,"byte_end":10947892,"line_start":415,"line_end":415,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947897,"byte_end":10947939,"line_start":416,"line_end":416,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947944,"byte_end":10947947,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947952,"byte_end":10947985,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947990,"byte_end":10947993,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10947998,"byte_end":10948015,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948020,"byte_end":10948023,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948028,"byte_end":10948060,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948065,"byte_end":10948117,"line_start":423,"line_end":423,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948122,"byte_end":10948127,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948132,"byte_end":10948139,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5614},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949606,"byte_end":10949617,"line_start":473,"line_end":473,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948322,"byte_end":10948402,"line_start":433,"line_end":433,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948407,"byte_end":10948490,"line_start":434,"line_end":434,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948495,"byte_end":10948506,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948511,"byte_end":10948514,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948519,"byte_end":10948599,"line_start":437,"line_end":437,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948604,"byte_end":10948638,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948643,"byte_end":10948646,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948651,"byte_end":10948734,"line_start":440,"line_end":440,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948739,"byte_end":10948805,"line_start":441,"line_end":441,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948810,"byte_end":10948813,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948818,"byte_end":10948873,"line_start":443,"line_end":443,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948878,"byte_end":10948933,"line_start":444,"line_end":444,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948938,"byte_end":10948941,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948946,"byte_end":10948964,"line_start":446,"line_end":446,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948969,"byte_end":10948972,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10948977,"byte_end":10949003,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949008,"byte_end":10949011,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949016,"byte_end":10949068,"line_start":450,"line_end":450,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949073,"byte_end":10949123,"line_start":451,"line_end":451,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949128,"byte_end":10949131,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949136,"byte_end":10949150,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949155,"byte_end":10949158,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949163,"byte_end":10949170,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949175,"byte_end":10949204,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949209,"byte_end":10949212,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949217,"byte_end":10949250,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949255,"byte_end":10949258,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949263,"byte_end":10949281,"line_start":460,"line_end":460,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949286,"byte_end":10949307,"line_start":461,"line_end":461,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949312,"byte_end":10949368,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949373,"byte_end":10949376,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949381,"byte_end":10949414,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949419,"byte_end":10949442,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949447,"byte_end":10949458,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949463,"byte_end":10949466,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949471,"byte_end":10949518,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949523,"byte_end":10949526,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949531,"byte_end":10949572,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949577,"byte_end":10949582,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10949587,"byte_end":10949594,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5620},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952888,"byte_end":10952893,"line_start":590,"line_end":590,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951142,"byte_end":10951209,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951214,"byte_end":10951217,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951222,"byte_end":10951296,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951301,"byte_end":10951369,"line_start":534,"line_end":534,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951374,"byte_end":10951440,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951445,"byte_end":10951459,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951464,"byte_end":10951467,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951472,"byte_end":10951548,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951553,"byte_end":10951616,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951621,"byte_end":10951624,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `close` is no-op if a message is already received or the channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951629,"byte_end":10951697,"line_start":541,"line_end":541,"column_start":5,"column_end":73}},{"value":"/ is already closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951702,"byte_end":10951724,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951729,"byte_end":10951732,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951737,"byte_end":10951759,"line_start":544,"line_end":544,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951764,"byte_end":10951800,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951805,"byte_end":10951808,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951813,"byte_end":10951827,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951832,"byte_end":10951835,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951840,"byte_end":10951875,"line_start":549,"line_end":549,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951880,"byte_end":10951883,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951888,"byte_end":10951895,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951900,"byte_end":10951929,"line_start":552,"line_end":552,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951934,"byte_end":10951984,"line_start":553,"line_end":553,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951989,"byte_end":10951992,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951997,"byte_end":10952015,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952020,"byte_end":10952041,"line_start":556,"line_end":556,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952046,"byte_end":10952092,"line_start":557,"line_end":557,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952097,"byte_end":10952100,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952105,"byte_end":10952138,"line_start":559,"line_end":559,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952143,"byte_end":10952146,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952151,"byte_end":10952170,"line_start":561,"line_end":561,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952175,"byte_end":10952178,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952183,"byte_end":10952215,"line_start":563,"line_end":563,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952220,"byte_end":10952272,"line_start":564,"line_end":564,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952277,"byte_end":10952280,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952285,"byte_end":10952314,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952319,"byte_end":10952362,"line_start":567,"line_end":567,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952367,"byte_end":10952399,"line_start":568,"line_end":568,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952404,"byte_end":10952413,"line_start":569,"line_end":569,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952418,"byte_end":10952423,"line_start":570,"line_end":570,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952428,"byte_end":10952435,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952440,"byte_end":10952443,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952448,"byte_end":10952499,"line_start":573,"line_end":573,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952504,"byte_end":10952507,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952512,"byte_end":10952519,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952524,"byte_end":10952553,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952558,"byte_end":10952561,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952566,"byte_end":10952584,"line_start":578,"line_end":578,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952589,"byte_end":10952610,"line_start":579,"line_end":579,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952615,"byte_end":10952661,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952666,"byte_end":10952669,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952674,"byte_end":10952723,"line_start":582,"line_end":582,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952728,"byte_end":10952731,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952736,"byte_end":10952755,"line_start":584,"line_end":584,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952760,"byte_end":10952763,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952768,"byte_end":10952809,"line_start":586,"line_end":586,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952814,"byte_end":10952854,"line_start":587,"line_end":587,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952859,"byte_end":10952864,"line_start":588,"line_end":588,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10952869,"byte_end":10952876,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5621},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954891,"byte_end":10954899,"line_start":659,"line_end":659,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953006,"byte_end":10953038,"line_start":596,"line_end":596,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953043,"byte_end":10953046,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953051,"byte_end":10953124,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953129,"byte_end":10953195,"line_start":599,"line_end":599,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953200,"byte_end":10953224,"line_start":600,"line_end":600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953229,"byte_end":10953232,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953237,"byte_end":10953303,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953308,"byte_end":10953330,"line_start":603,"line_end":603,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953335,"byte_end":10953338,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953343,"byte_end":10953355,"line_start":605,"line_end":605,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953360,"byte_end":10953363,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953368,"byte_end":10953419,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953424,"byte_end":10953487,"line_start":608,"line_end":608,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953492,"byte_end":10953567,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953572,"byte_end":10953586,"line_start":610,"line_end":610,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953591,"byte_end":10953594,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953599,"byte_end":10953613,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953618,"byte_end":10953621,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953626,"byte_end":10953676,"line_start":614,"line_end":614,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953681,"byte_end":10953684,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953689,"byte_end":10953696,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953701,"byte_end":10953730,"line_start":617,"line_end":617,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953735,"byte_end":10953785,"line_start":618,"line_end":618,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953790,"byte_end":10953793,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953798,"byte_end":10953816,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953821,"byte_end":10953842,"line_start":621,"line_end":621,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953847,"byte_end":10953893,"line_start":622,"line_end":622,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953898,"byte_end":10953901,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953906,"byte_end":10953935,"line_start":624,"line_end":624,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953940,"byte_end":10953985,"line_start":625,"line_end":625,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10953990,"byte_end":10954032,"line_start":626,"line_end":626,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954037,"byte_end":10954069,"line_start":627,"line_end":627,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954074,"byte_end":10954083,"line_start":628,"line_end":628,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954088,"byte_end":10954091,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954096,"byte_end":10954119,"line_start":630,"line_end":630,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954124,"byte_end":10954158,"line_start":631,"line_end":631,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954163,"byte_end":10954166,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954171,"byte_end":10954200,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954205,"byte_end":10954257,"line_start":634,"line_end":634,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954262,"byte_end":10954294,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954299,"byte_end":10954308,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954313,"byte_end":10954318,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954323,"byte_end":10954330,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954335,"byte_end":10954338,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954343,"byte_end":10954404,"line_start":640,"line_end":640,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954409,"byte_end":10954412,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954417,"byte_end":10954424,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954429,"byte_end":10954458,"line_start":643,"line_end":643,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954463,"byte_end":10954513,"line_start":644,"line_end":644,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954518,"byte_end":10954521,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954526,"byte_end":10954544,"line_start":646,"line_end":646,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954549,"byte_end":10954570,"line_start":647,"line_end":647,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954575,"byte_end":10954627,"line_start":648,"line_end":648,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954632,"byte_end":10954635,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954640,"byte_end":10954657,"line_start":650,"line_end":650,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954662,"byte_end":10954665,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954670,"byte_end":10954699,"line_start":652,"line_end":652,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954704,"byte_end":10954758,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954763,"byte_end":10954806,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954811,"byte_end":10954843,"line_start":655,"line_end":655,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954848,"byte_end":10954857,"line_start":656,"line_end":656,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954862,"byte_end":10954867,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10954872,"byte_end":10954879,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6511},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964466,"byte_end":10964472,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":6510},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964340,"byte_end":10964405,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964410,"byte_end":10964413,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964418,"byte_end":10964461,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6513},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964527,"byte_end":10964536,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":6510},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964479,"byte_end":10964522,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":6510},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964318,"byte_end":10964333,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError {\n\n    /// The semaphore has been [closed] and cannot issue new permits.\n    ///\n    /// [closed]: crate::sync::Semaphore::close\n    Closed,\n\n    /// The semaphore has no available permits.\n    NoPermits,\n}","parent":null,"children":[{"krate":0,"index":6511},{"krate":0,"index":6513}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964144,"byte_end":10964208,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964209,"byte_end":10964212,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964213,"byte_end":10964280,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6520},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964822,"byte_end":10964834,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964540,"byte_end":10964600,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964601,"byte_end":10964604,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964605,"byte_end":10964671,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964672,"byte_end":10964685,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964686,"byte_end":10964689,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964690,"byte_end":10964733,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10964734,"byte_end":10964793,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6525},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984560,"byte_end":10984569,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":6526}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983286,"byte_end":10983352,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983353,"byte_end":10983356,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983357,"byte_end":10983432,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983433,"byte_end":10983509,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983510,"byte_end":10983590,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983591,"byte_end":10983600,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983601,"byte_end":10983604,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983605,"byte_end":10983678,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983679,"byte_end":10983758,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983759,"byte_end":10983837,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983838,"byte_end":10983909,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983910,"byte_end":10983913,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This `Semaphore` is fair, which means that permits are given out in the order","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983914,"byte_end":10983995,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ they were requested. This fairness is also applied when `acquire_many` gets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10983996,"byte_end":10984075,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ involved, so if a call to `acquire_many` at the front of the queue requests","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984076,"byte_end":10984155,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ more permits than currently available, this can prevent a call to `acquire`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984156,"byte_end":10984235,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ from completing, even if the semaphore has enough permits complete the call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984236,"byte_end":10984315,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to `acquire`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984316,"byte_end":10984333,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984334,"byte_end":10984337,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984338,"byte_end":10984418,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984419,"byte_end":10984431,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984432,"byte_end":10984435,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984436,"byte_end":10984531,"line_start":27,"line_end":27,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":6529},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984818,"byte_end":10984833,"line_start":41,"line_end":41,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6531},{"krate":0,"index":6532}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984634,"byte_end":10984666,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984667,"byte_end":10984670,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984671,"byte_end":10984722,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984723,"byte_end":10984726,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984727,"byte_end":10984777,"line_start":38,"line_end":38,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984778,"byte_end":10984789,"line_start":39,"line_end":39,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6536},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10985094,"byte_end":10985114,"line_start":53,"line_end":53,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6537},{"krate":0,"index":6538}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984885,"byte_end":10984924,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984925,"byte_end":10984928,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984929,"byte_end":10984986,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984987,"byte_end":10984990,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10984991,"byte_end":10985053,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10985054,"byte_end":10985065,"line_start":51,"line_end":51,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5771},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10985710,"byte_end":10985713,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10985635,"byte_end":10985698,"line_start":74,"line_end":74,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5772},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986219,"byte_end":10986236,"line_start":91,"line_end":91,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986155,"byte_end":10986207,"line_start":90,"line_end":90,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5773},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986483,"byte_end":10986494,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986306,"byte_end":10986348,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986353,"byte_end":10986356,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986361,"byte_end":10986471,"line_start":97,"line_end":97,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":5774},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986914,"byte_end":10986921,"line_start":110,"line_end":110,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986557,"byte_end":10986598,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986603,"byte_end":10986606,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986611,"byte_end":10986682,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986687,"byte_end":10986753,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986758,"byte_end":10986778,"line_start":106,"line_end":106,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986783,"byte_end":10986786,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986791,"byte_end":10986838,"line_start":108,"line_end":108,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10986843,"byte_end":10986896,"line_start":109,"line_end":109,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5777},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987475,"byte_end":10987487,"line_start":126,"line_end":126,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987114,"byte_end":10987158,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987163,"byte_end":10987166,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987171,"byte_end":10987242,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987247,"byte_end":10987313,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987318,"byte_end":10987339,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987344,"byte_end":10987347,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987352,"byte_end":10987399,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987404,"byte_end":10987457,"line_start":125,"line_end":125,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5780},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988226,"byte_end":10988237,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987688,"byte_end":10987737,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987742,"byte_end":10987745,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987750,"byte_end":10987830,"line_start":136,"line_end":136,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987835,"byte_end":10987916,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987921,"byte_end":10987994,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10987999,"byte_end":10988002,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988007,"byte_end":10988076,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988081,"byte_end":10988156,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988161,"byte_end":10988214,"line_start":142,"line_end":142,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5781},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989043,"byte_end":10989059,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988502,"byte_end":10988554,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988559,"byte_end":10988562,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988567,"byte_end":10988647,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988652,"byte_end":10988733,"line_start":156,"line_end":156,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988738,"byte_end":10988811,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988816,"byte_end":10988819,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988824,"byte_end":10988893,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988898,"byte_end":10988973,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10988978,"byte_end":10989031,"line_start":161,"line_end":161,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5782},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989809,"byte_end":10989822,"line_start":182,"line_end":182,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989332,"byte_end":10989373,"line_start":172,"line_end":172,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989378,"byte_end":10989381,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989386,"byte_end":10989454,"line_start":174,"line_end":174,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989459,"byte_end":10989530,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989535,"byte_end":10989606,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989611,"byte_end":10989631,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989636,"byte_end":10989639,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989644,"byte_end":10989671,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989676,"byte_end":10989723,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10989728,"byte_end":10989791,"line_start":181,"line_end":181,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5785},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990510,"byte_end":10990528,"line_start":200,"line_end":200,"column_start":18,"column_end":36},"name":"acquire_many_owned","qualname":"<Semaphore>::acquire_many_owned","value":"pub async fn acquire_many_owned(Arc<Self>, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990030,"byte_end":10990074,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990079,"byte_end":10990082,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990087,"byte_end":10990155,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990160,"byte_end":10990231,"line_start":193,"line_end":193,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990236,"byte_end":10990307,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990312,"byte_end":10990332,"line_start":195,"line_end":195,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990337,"byte_end":10990340,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990345,"byte_end":10990372,"line_start":197,"line_end":197,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990377,"byte_end":10990424,"line_start":198,"line_end":198,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990429,"byte_end":10990492,"line_start":199,"line_end":199,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5788},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991432,"byte_end":10991449,"line_start":223,"line_end":223,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990767,"byte_end":10990816,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990821,"byte_end":10990824,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990829,"byte_end":10990900,"line_start":213,"line_end":213,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990905,"byte_end":10990982,"line_start":214,"line_end":214,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10990987,"byte_end":10991057,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991062,"byte_end":10991133,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991138,"byte_end":10991158,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991163,"byte_end":10991166,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991171,"byte_end":10991198,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991203,"byte_end":10991272,"line_start":220,"line_end":220,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991277,"byte_end":10991352,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991357,"byte_end":10991420,"line_start":222,"line_end":222,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5789},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992398,"byte_end":10992420,"line_start":245,"line_end":245,"column_start":12,"column_end":34},"name":"try_acquire_many_owned","qualname":"<Semaphore>::try_acquire_many_owned","value":"pub fn try_acquire_many_owned(Arc<Self>, u32)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991730,"byte_end":10991782,"line_start":233,"line_end":233,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991787,"byte_end":10991790,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991795,"byte_end":10991866,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991871,"byte_end":10991948,"line_start":236,"line_end":236,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10991953,"byte_end":10992023,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992028,"byte_end":10992099,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992104,"byte_end":10992124,"line_start":239,"line_end":239,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992129,"byte_end":10992132,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992137,"byte_end":10992164,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992169,"byte_end":10992238,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992243,"byte_end":10992318,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992323,"byte_end":10992386,"line_start":244,"line_end":244,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5790},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993645,"byte_end":10993650,"line_start":287,"line_end":287,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992732,"byte_end":10992757,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992762,"byte_end":10992765,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992770,"byte_end":10992860,"line_start":260,"line_end":260,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992865,"byte_end":10992868,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992873,"byte_end":10992887,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992892,"byte_end":10992895,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992900,"byte_end":10992907,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992912,"byte_end":10992943,"line_start":265,"line_end":265,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992948,"byte_end":10992971,"line_start":266,"line_end":266,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10992976,"byte_end":10993013,"line_start":267,"line_end":267,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993018,"byte_end":10993021,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993026,"byte_end":10993044,"line_start":269,"line_end":269,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993049,"byte_end":10993070,"line_start":270,"line_end":270,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993075,"byte_end":10993127,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993132,"byte_end":10993175,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993180,"byte_end":10993183,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993188,"byte_end":10993221,"line_start":274,"line_end":274,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993226,"byte_end":10993283,"line_start":275,"line_end":275,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993288,"byte_end":10993325,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993330,"byte_end":10993376,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993381,"byte_end":10993392,"line_start":278,"line_end":278,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993397,"byte_end":10993400,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993405,"byte_end":10993443,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993448,"byte_end":10993475,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993480,"byte_end":10993483,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993488,"byte_end":10993525,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993530,"byte_end":10993611,"line_start":284,"line_end":284,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993616,"byte_end":10993621,"line_start":285,"line_end":285,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993626,"byte_end":10993633,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5791},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993755,"byte_end":10993764,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Semaphore>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the semaphore is closed\n","sig":null,"attributes":[{"value":"/ Returns true if the semaphore is closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993700,"byte_end":10993743,"line_start":291,"line_end":291,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5794},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994033,"byte_end":10994039,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993858,"byte_end":10993928,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993933,"byte_end":10994002,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994007,"byte_end":10994021,"line_start":300,"line_end":300,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":5796},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994294,"byte_end":10994300,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994119,"byte_end":10994189,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994194,"byte_end":10994263,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994268,"byte_end":10994282,"line_start":309,"line_end":309,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":5824},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018810,"byte_end":11018830,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"OwnedRwLockReadGuard","qualname":"::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard","value":"OwnedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5829}],"decl_id":null,"docs":" Owned RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018519,"byte_end":11018597,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018598,"byte_end":11018610,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018611,"byte_end":11018614,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read_owned`] method on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018615,"byte_end":11018676,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018677,"byte_end":11018692,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018693,"byte_end":11018696,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`read_owned`]: method@crate::sync::RwLock::read_owned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018697,"byte_end":11018755,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11018756,"byte_end":11018798,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5833},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020061,"byte_end":11020064,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockReadGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockReadGuard<T, V> where\nF: FnOnce(&U) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Make a new `OwnedRwLockReadGuard` for a component of the locked data.\n This operation cannot fail as the `OwnedRwLockReadGuard` passed in\n already locked the data.","sig":null,"attributes":[{"value":"/ Make a new `OwnedRwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019132,"byte_end":11019205,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019210,"byte_end":11019280,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019285,"byte_end":11019313,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019318,"byte_end":11019321,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019326,"byte_end":11019377,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019382,"byte_end":11019457,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019462,"byte_end":11019526,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019531,"byte_end":11019534,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019539,"byte_end":11019553,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019558,"byte_end":11019561,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019566,"byte_end":11019573,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019578,"byte_end":11019601,"line_start":36,"line_end":36,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019606,"byte_end":11019658,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019663,"byte_end":11019666,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019671,"byte_end":11019719,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019724,"byte_end":11019744,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019749,"byte_end":11019752,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019757,"byte_end":11019777,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019782,"byte_end":11019805,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019810,"byte_end":11019855,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019860,"byte_end":11019863,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019868,"byte_end":11019908,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019913,"byte_end":11019972,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019977,"byte_end":11019980,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019985,"byte_end":11020011,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020016,"byte_end":11020023,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020028,"byte_end":11020035,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020040,"byte_end":11020049,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5836},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021581,"byte_end":11021588,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockReadGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockReadGuard<T, V>, Self> where F: FnOnce(&U) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020513,"byte_end":11020587,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020592,"byte_end":11020662,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020667,"byte_end":11020678,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020683,"byte_end":11020686,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020691,"byte_end":11020761,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020766,"byte_end":11020794,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020799,"byte_end":11020802,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020807,"byte_end":11020866,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockReadGuard::try_map(..)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020871,"byte_end":11020941,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11020946,"byte_end":11021010,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021015,"byte_end":11021018,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021023,"byte_end":11021037,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021042,"byte_end":11021045,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021050,"byte_end":11021057,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021062,"byte_end":11021085,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021090,"byte_end":11021142,"line_start":83,"line_end":83,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021147,"byte_end":11021150,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021155,"byte_end":11021203,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021208,"byte_end":11021228,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021233,"byte_end":11021236,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021241,"byte_end":11021261,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021266,"byte_end":11021289,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021294,"byte_end":11021339,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021344,"byte_end":11021347,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021352,"byte_end":11021392,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021397,"byte_end":11021492,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021497,"byte_end":11021500,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021505,"byte_end":11021531,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021536,"byte_end":11021543,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021548,"byte_end":11021555,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11021560,"byte_end":11021569,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5867},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023501,"byte_end":11023522,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"OwnedRwLockWriteGuard","qualname":"::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard","value":"OwnedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":5869},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5872}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023203,"byte_end":11023285,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023286,"byte_end":11023298,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023299,"byte_end":11023302,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write_owned`] method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023303,"byte_end":11023362,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023363,"byte_end":11023381,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023382,"byte_end":11023385,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`write_owned`]: method@crate::sync::RwLock::write_owned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023386,"byte_end":11023446,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023447,"byte_end":11023489,"line_start":17,"line_end":17,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5875},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024880,"byte_end":11024883,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockWriteGuard<T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, U> where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Make a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023832,"byte_end":11023908,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023913,"byte_end":11023922,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023927,"byte_end":11023930,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023935,"byte_end":11024006,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024011,"byte_end":11024039,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024044,"byte_end":11024047,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024052,"byte_end":11024111,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024116,"byte_end":11024191,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024196,"byte_end":11024252,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024257,"byte_end":11024260,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024265,"byte_end":11024279,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024284,"byte_end":11024287,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024292,"byte_end":11024299,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024304,"byte_end":11024327,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024332,"byte_end":11024385,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024390,"byte_end":11024393,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024398,"byte_end":11024446,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024451,"byte_end":11024471,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024476,"byte_end":11024479,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024484,"byte_end":11024504,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024509,"byte_end":11024532,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024537,"byte_end":11024582,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024587,"byte_end":11024590,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024595,"byte_end":11024600,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024605,"byte_end":11024642,"line_start":51,"line_end":51,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024647,"byte_end":11024739,"line_start":52,"line_end":52,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024744,"byte_end":11024764,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024769,"byte_end":11024774,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024779,"byte_end":11024782,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024787,"byte_end":11024830,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024835,"byte_end":11024842,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024847,"byte_end":11024854,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11024859,"byte_end":11024868,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5878},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026699,"byte_end":11026706,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockWriteGuard<T>>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, U>, Self> where F: FnOnce(&mut T) ->\nOption<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025440,"byte_end":11025515,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025520,"byte_end":11025589,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025594,"byte_end":11025613,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025618,"byte_end":11025621,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025626,"byte_end":11025697,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025702,"byte_end":11025730,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025735,"byte_end":11025738,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025743,"byte_end":11025794,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025799,"byte_end":11025874,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025879,"byte_end":11025948,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025953,"byte_end":11025956,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11025961,"byte_end":11026035,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026040,"byte_end":11026043,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026048,"byte_end":11026062,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026067,"byte_end":11026070,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026075,"byte_end":11026082,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026087,"byte_end":11026110,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026115,"byte_end":11026168,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026173,"byte_end":11026176,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026181,"byte_end":11026229,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026234,"byte_end":11026254,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026259,"byte_end":11026262,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026267,"byte_end":11026287,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026292,"byte_end":11026315,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026320,"byte_end":11026365,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026370,"byte_end":11026373,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026378,"byte_end":11026383,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026388,"byte_end":11026446,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026451,"byte_end":11026559,"line_start":105,"line_end":105,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026564,"byte_end":11026583,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026588,"byte_end":11026593,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026598,"byte_end":11026601,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026606,"byte_end":11026649,"line_start":109,"line_end":109,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026654,"byte_end":11026661,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026666,"byte_end":11026673,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11026678,"byte_end":11026687,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5881},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027713,"byte_end":11027724,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<OwnedRwLockWriteGuard<T>>::into_mapped","value":"pub fn into_mapped(Self) -> OwnedRwLockMappedWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OwnedRwLockWriteGuard` into an\n `OwnedRwLockMappedWriteGuard`. This method can be used to store a\n non-mapped guard in a struct field that expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `OwnedRwLockWriteGuard` into an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027400,"byte_end":11027449,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/ `OwnedRwLockMappedWriteGuard`. This method can be used to store a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027454,"byte_end":11027523,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/ non-mapped guard in a struct field that expects a mapped guard.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027528,"byte_end":11027595,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027600,"byte_end":11027603,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `OwnedRwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027608,"byte_end":11027687,"line_start":140,"line_end":140,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027692,"byte_end":11027701,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5883},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028957,"byte_end":11028966,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRwLockWriteGuard<T>>::downgrade","value":"pub fn downgrade(Self) -> OwnedRwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027817,"byte_end":11027889,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027894,"byte_end":11027963,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027968,"byte_end":11027971,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11027976,"byte_end":11028054,"line_start":149,"line_end":149,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028059,"byte_end":11028135,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028140,"byte_end":11028152,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028157,"byte_end":11028160,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028165,"byte_end":11028239,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028244,"byte_end":11028261,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028266,"byte_end":11028269,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028274,"byte_end":11028288,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028293,"byte_end":11028296,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028301,"byte_end":11028308,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028313,"byte_end":11028343,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028348,"byte_end":11028373,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028378,"byte_end":11028383,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028388,"byte_end":11028408,"line_start":162,"line_end":162,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028413,"byte_end":11028436,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028441,"byte_end":11028481,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028486,"byte_end":11028489,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = lock.clone().write_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028494,"byte_end":11028539,"line_start":166,"line_end":166,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028544,"byte_end":11028547,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028552,"byte_end":11028587,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028592,"byte_end":11028634,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write_owned().await = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028639,"byte_end":11028684,"line_start":170,"line_end":170,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028689,"byte_end":11028696,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028701,"byte_end":11028704,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028709,"byte_end":11028735,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028740,"byte_end":11028785,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028790,"byte_end":11028793,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028798,"byte_end":11028810,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028815,"byte_end":11028841,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028846,"byte_end":11028921,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028926,"byte_end":11028933,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11028938,"byte_end":11028945,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5909},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030960,"byte_end":11030987,"line_start":17,"line_end":17,"column_start":12,"column_end":39},"name":"OwnedRwLockMappedWriteGuard","qualname":"::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard","value":"OwnedRwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5915}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030493,"byte_end":11030575,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030576,"byte_end":11030588,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030589,"byte_end":11030592,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`OwnedRwLockWriteGuard`]. It is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030593,"byte_end":11030673,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ separate type from `OwnedRwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030674,"byte_end":11030753,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030754,"byte_end":11030809,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030810,"byte_end":11030813,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::OwnedRwLockWriteGuard::map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030814,"byte_end":11030875,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ [`OwnedRwLockWriteGuard`]: struct@crate::sync::OwnedRwLockWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11030876,"byte_end":11030948,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5919},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032384,"byte_end":11032387,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, V> where\nF: FnOnce(&mut U) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Make a new `OwnedRwLockMappedWriteGuard` for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Make a new `OwnedRwLockMappedWriteGuard` for a component of the locked","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031332,"byte_end":11031406,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031411,"byte_end":11031420,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031425,"byte_end":11031428,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031433,"byte_end":11031507,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031512,"byte_end":11031543,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031548,"byte_end":11031551,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031556,"byte_end":11031615,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031620,"byte_end":11031695,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031700,"byte_end":11031756,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031761,"byte_end":11031764,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031769,"byte_end":11031783,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031788,"byte_end":11031791,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031796,"byte_end":11031803,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031808,"byte_end":11031831,"line_start":39,"line_end":39,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031836,"byte_end":11031889,"line_start":40,"line_end":40,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031894,"byte_end":11031897,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031902,"byte_end":11031950,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031955,"byte_end":11031975,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031980,"byte_end":11031983,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031988,"byte_end":11032008,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032013,"byte_end":11032036,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032041,"byte_end":11032086,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032091,"byte_end":11032094,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032099,"byte_end":11032104,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032109,"byte_end":11032146,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032151,"byte_end":11032243,"line_start":51,"line_end":51,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032248,"byte_end":11032268,"line_start":52,"line_end":52,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032273,"byte_end":11032278,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032283,"byte_end":11032286,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032291,"byte_end":11032334,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032339,"byte_end":11032346,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032351,"byte_end":11032358,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032363,"byte_end":11032372,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5922},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034125,"byte_end":11034132,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, V>, Self> where F: FnOnce(&mut U) ->\nOption<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11032944,"byte_end":11033016,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033021,"byte_end":11033090,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033095,"byte_end":11033114,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033119,"byte_end":11033122,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033127,"byte_end":11033201,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033206,"byte_end":11033237,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033242,"byte_end":11033245,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033250,"byte_end":11033301,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockMappedWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033306,"byte_end":11033392,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033397,"byte_end":11033461,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033466,"byte_end":11033469,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033474,"byte_end":11033488,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033493,"byte_end":11033496,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033501,"byte_end":11033508,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033513,"byte_end":11033536,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033541,"byte_end":11033594,"line_start":91,"line_end":91,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033599,"byte_end":11033602,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033607,"byte_end":11033655,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033660,"byte_end":11033680,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033685,"byte_end":11033688,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033693,"byte_end":11033713,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033718,"byte_end":11033741,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033746,"byte_end":11033791,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033796,"byte_end":11033799,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033804,"byte_end":11033809,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033814,"byte_end":11033872,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033877,"byte_end":11033985,"line_start":102,"line_end":102,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11033990,"byte_end":11034009,"line_start":103,"line_end":103,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034014,"byte_end":11034019,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034024,"byte_end":11034027,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034032,"byte_end":11034075,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034080,"byte_end":11034087,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034092,"byte_end":11034099,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034104,"byte_end":11034113,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5952},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036179,"byte_end":11036194,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::read_guard::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11035912,"byte_end":11035984,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11035985,"byte_end":11035997,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11035998,"byte_end":11036001,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036002,"byte_end":11036057,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036058,"byte_end":11036073,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036074,"byte_end":11036077,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@crate::sync::RwLock::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036078,"byte_end":11036124,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036125,"byte_end":11036167,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5961},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037553,"byte_end":11037556,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036379,"byte_end":11036447,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036452,"byte_end":11036455,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036460,"byte_end":11036533,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036538,"byte_end":11036558,"line_start":25,"line_end":25,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036563,"byte_end":11036566,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036571,"byte_end":11036622,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036627,"byte_end":11036697,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036702,"byte_end":11036766,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036771,"byte_end":11036774,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036779,"byte_end":11036851,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036856,"byte_end":11036882,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036887,"byte_end":11036890,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036895,"byte_end":11037004,"line_start":34,"line_end":34,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037009,"byte_end":11037072,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037077,"byte_end":11037080,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037085,"byte_end":11037099,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037104,"byte_end":11037107,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037112,"byte_end":11037119,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037124,"byte_end":11037171,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037176,"byte_end":11037179,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037184,"byte_end":11037232,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037237,"byte_end":11037257,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037262,"byte_end":11037265,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037270,"byte_end":11037290,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037295,"byte_end":11037318,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037323,"byte_end":11037358,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037363,"byte_end":11037366,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037371,"byte_end":11037405,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037410,"byte_end":11037464,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037469,"byte_end":11037472,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037477,"byte_end":11037503,"line_start":52,"line_end":52,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037508,"byte_end":11037515,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037520,"byte_end":11037527,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037532,"byte_end":11037541,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5964},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039251,"byte_end":11039258,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11037934,"byte_end":11038003,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038008,"byte_end":11038078,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038083,"byte_end":11038094,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038099,"byte_end":11038102,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038107,"byte_end":11038180,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038185,"byte_end":11038205,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038210,"byte_end":11038213,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038218,"byte_end":11038277,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038282,"byte_end":11038362,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038367,"byte_end":11038416,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038421,"byte_end":11038424,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038429,"byte_end":11038505,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038510,"byte_end":11038536,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038541,"byte_end":11038544,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038549,"byte_end":11038666,"line_start":85,"line_end":85,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038671,"byte_end":11038734,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038739,"byte_end":11038742,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038747,"byte_end":11038761,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038766,"byte_end":11038769,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038774,"byte_end":11038781,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038786,"byte_end":11038833,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038838,"byte_end":11038841,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038846,"byte_end":11038894,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038899,"byte_end":11038919,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038924,"byte_end":11038927,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038932,"byte_end":11038952,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038957,"byte_end":11038980,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11038985,"byte_end":11039020,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039025,"byte_end":11039028,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039033,"byte_end":11039067,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039072,"byte_end":11039162,"line_start":101,"line_end":101,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039167,"byte_end":11039170,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039175,"byte_end":11039201,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039206,"byte_end":11039213,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039218,"byte_end":11039225,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039230,"byte_end":11039239,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5991},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040903,"byte_end":11040919,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::write_guard::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":5994},{"krate":0,"index":5995},{"krate":0,"index":5996},{"krate":0,"index":5997}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040629,"byte_end":11040705,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040706,"byte_end":11040718,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040719,"byte_end":11040722,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040723,"byte_end":11040776,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040777,"byte_end":11040795,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040796,"byte_end":11040799,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@crate::sync::RwLock::write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040800,"byte_end":11040848,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11040849,"byte_end":11040891,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6001},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042462,"byte_end":11042465,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new [`RwLockMappedWriteGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new [`RwLockMappedWriteGuard`] for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041145,"byte_end":11041222,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041227,"byte_end":11041230,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041235,"byte_end":11041309,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041314,"byte_end":11041334,"line_start":28,"line_end":28,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041339,"byte_end":11041342,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041347,"byte_end":11041406,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041411,"byte_end":11041484,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041489,"byte_end":11041542,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041547,"byte_end":11041550,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041555,"byte_end":11041628,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041633,"byte_end":11041659,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041664,"byte_end":11041667,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041672,"byte_end":11041746,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041751,"byte_end":11041862,"line_start":38,"line_end":38,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041867,"byte_end":11041930,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041935,"byte_end":11041938,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041943,"byte_end":11041957,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041962,"byte_end":11041965,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041970,"byte_end":11041977,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041982,"byte_end":11042030,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042035,"byte_end":11042038,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042043,"byte_end":11042091,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042096,"byte_end":11042116,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042121,"byte_end":11042124,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042129,"byte_end":11042149,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042154,"byte_end":11042177,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042182,"byte_end":11042217,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042222,"byte_end":11042225,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042230,"byte_end":11042235,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042240,"byte_end":11042321,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042326,"byte_end":11042346,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042351,"byte_end":11042356,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042361,"byte_end":11042364,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042369,"byte_end":11042412,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042417,"byte_end":11042424,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042429,"byte_end":11042436,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042441,"byte_end":11042450,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6004},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044445,"byte_end":11044452,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11042955,"byte_end":11043028,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043033,"byte_end":11043107,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043112,"byte_end":11043123,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043128,"byte_end":11043131,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043136,"byte_end":11043210,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043215,"byte_end":11043235,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043240,"byte_end":11043243,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043248,"byte_end":11043299,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043304,"byte_end":11043379,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043384,"byte_end":11043448,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043453,"byte_end":11043456,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043461,"byte_end":11043534,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043539,"byte_end":11043569,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043574,"byte_end":11043577,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043582,"byte_end":11043656,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043661,"byte_end":11043780,"line_start":94,"line_end":94,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043785,"byte_end":11043848,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043853,"byte_end":11043856,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043861,"byte_end":11043875,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043880,"byte_end":11043883,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043888,"byte_end":11043895,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043900,"byte_end":11043948,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043953,"byte_end":11043956,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11043961,"byte_end":11044009,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044014,"byte_end":11044034,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044039,"byte_end":11044042,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044047,"byte_end":11044067,"line_start":105,"line_end":105,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044072,"byte_end":11044095,"line_start":106,"line_end":106,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044100,"byte_end":11044135,"line_start":107,"line_end":107,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044140,"byte_end":11044143,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044148,"byte_end":11044153,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044158,"byte_end":11044197,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044202,"byte_end":11044305,"line_start":111,"line_end":111,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044310,"byte_end":11044329,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044334,"byte_end":11044339,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044344,"byte_end":11044347,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044352,"byte_end":11044395,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044400,"byte_end":11044407,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044412,"byte_end":11044419,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11044424,"byte_end":11044433,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6007},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045377,"byte_end":11045388,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<RwLockWriteGuard>::into_mapped","value":"pub fn into_mapped(Self) -> RwLockMappedWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This\n method can be used to store a non-mapped guard in a struct field that\n expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045079,"byte_end":11045154,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ method can be used to store a non-mapped guard in a struct field that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045159,"byte_end":11045232,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ expects a mapped guard.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045237,"byte_end":11045264,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045269,"byte_end":11045272,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `RwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045277,"byte_end":11045351,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045356,"byte_end":11045365,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6009},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046667,"byte_end":11046676,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045492,"byte_end":11045564,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045569,"byte_end":11045638,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045643,"byte_end":11045646,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045651,"byte_end":11045729,"line_start":155,"line_end":155,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045734,"byte_end":11045810,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045815,"byte_end":11045827,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045832,"byte_end":11045835,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045840,"byte_end":11045914,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045919,"byte_end":11045936,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045941,"byte_end":11045944,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045949,"byte_end":11045963,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045968,"byte_end":11045971,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045976,"byte_end":11045983,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11045988,"byte_end":11046018,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046023,"byte_end":11046048,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046053,"byte_end":11046058,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046063,"byte_end":11046083,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046088,"byte_end":11046111,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046116,"byte_end":11046156,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046161,"byte_end":11046164,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046169,"byte_end":11046200,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046205,"byte_end":11046208,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046213,"byte_end":11046248,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046253,"byte_end":11046295,"line_start":175,"line_end":175,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046300,"byte_end":11046339,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046344,"byte_end":11046351,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046356,"byte_end":11046359,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046364,"byte_end":11046390,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046395,"byte_end":11046440,"line_start":180,"line_end":180,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046445,"byte_end":11046448,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046453,"byte_end":11046465,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046470,"byte_end":11046496,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046501,"byte_end":11046576,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046581,"byte_end":11046588,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046593,"byte_end":11046600,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046605,"byte_end":11046608,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11046613,"byte_end":11046655,"line_start":188,"line_end":188,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6035},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048469,"byte_end":11048491,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"RwLockMappedWriteGuard","qualname":"::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard","value":"RwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6038},{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048033,"byte_end":11048109,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048110,"byte_end":11048122,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048123,"byte_end":11048126,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`RwLockWriteGuard`]. It is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048127,"byte_end":11048202,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ separate type from `RwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048203,"byte_end":11048277,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048278,"byte_end":11048333,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048334,"byte_end":11048337,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::RwLockWriteGuard::map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048338,"byte_end":11048394,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ [`RwLockWriteGuard`]: struct@crate::sync::RwLockWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048395,"byte_end":11048457,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6045},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049971,"byte_end":11049974,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockMappedWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockMappedWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockMappedWriteGuard` for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048723,"byte_end":11048798,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048803,"byte_end":11048806,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048811,"byte_end":11048891,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048896,"byte_end":11048916,"line_start":27,"line_end":27,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048921,"byte_end":11048924,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048929,"byte_end":11048988,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `RwLockMappedWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048993,"byte_end":11049069,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049074,"byte_end":11049130,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049135,"byte_end":11049138,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049143,"byte_end":11049216,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049221,"byte_end":11049247,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049252,"byte_end":11049255,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049260,"byte_end":11049371,"line_start":36,"line_end":36,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049376,"byte_end":11049439,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049444,"byte_end":11049447,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049452,"byte_end":11049466,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049471,"byte_end":11049474,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049479,"byte_end":11049486,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049491,"byte_end":11049539,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049544,"byte_end":11049547,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049552,"byte_end":11049600,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049605,"byte_end":11049625,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049630,"byte_end":11049633,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049638,"byte_end":11049658,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049663,"byte_end":11049686,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049691,"byte_end":11049726,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049731,"byte_end":11049734,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049739,"byte_end":11049744,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049749,"byte_end":11049830,"line_start":52,"line_end":52,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049835,"byte_end":11049855,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049860,"byte_end":11049865,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049870,"byte_end":11049873,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049878,"byte_end":11049921,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049926,"byte_end":11049933,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049938,"byte_end":11049945,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11049950,"byte_end":11049959,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6048},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051886,"byte_end":11051893,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockMappedWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050464,"byte_end":11050536,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050541,"byte_end":11050615,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050620,"byte_end":11050631,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050636,"byte_end":11050639,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050644,"byte_end":11050724,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050729,"byte_end":11050749,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050754,"byte_end":11050757,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050762,"byte_end":11050813,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockMappedWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050818,"byte_end":11050894,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050899,"byte_end":11050968,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050973,"byte_end":11050976,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11050981,"byte_end":11051054,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051059,"byte_end":11051089,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051094,"byte_end":11051097,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051102,"byte_end":11051221,"line_start":91,"line_end":91,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051226,"byte_end":11051289,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051294,"byte_end":11051297,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051302,"byte_end":11051316,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051321,"byte_end":11051324,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051329,"byte_end":11051336,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051341,"byte_end":11051389,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051394,"byte_end":11051397,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051402,"byte_end":11051450,"line_start":99,"line_end":99,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051455,"byte_end":11051475,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051480,"byte_end":11051483,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051488,"byte_end":11051508,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051513,"byte_end":11051536,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051541,"byte_end":11051576,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051581,"byte_end":11051584,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051589,"byte_end":11051594,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051599,"byte_end":11051638,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051643,"byte_end":11051746,"line_start":108,"line_end":108,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051751,"byte_end":11051770,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051775,"byte_end":11051780,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051785,"byte_end":11051788,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051793,"byte_end":11051836,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051841,"byte_end":11051848,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051853,"byte_end":11051860,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11051865,"byte_end":11051874,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6541},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997988,"byte_end":10997994,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6545}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995457,"byte_end":10995496,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995497,"byte_end":10995500,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995501,"byte_end":10995578,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995579,"byte_end":10995658,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995659,"byte_end":10995738,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995739,"byte_end":10995797,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995798,"byte_end":10995801,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995802,"byte_end":10995880,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995881,"byte_end":10995959,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10995960,"byte_end":10996038,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996039,"byte_end":10996104,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996105,"byte_end":10996108,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996109,"byte_end":10996173,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996174,"byte_end":10996246,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996247,"byte_end":10996327,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996328,"byte_end":10996408,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996409,"byte_end":10996489,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996490,"byte_end":10996559,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996560,"byte_end":10996630,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996631,"byte_end":10996669,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996670,"byte_end":10996673,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996674,"byte_end":10996751,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996752,"byte_end":10996837,"line_start":50,"line_end":50,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996838,"byte_end":10996918,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996919,"byte_end":10996966,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10996967,"byte_end":10997039,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997040,"byte_end":10997043,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997044,"byte_end":10997058,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997059,"byte_end":10997062,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997063,"byte_end":10997070,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997071,"byte_end":10997099,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997100,"byte_end":10997103,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997104,"byte_end":10997122,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997123,"byte_end":10997144,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997145,"byte_end":10997179,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997180,"byte_end":10997183,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997184,"byte_end":10997232,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997233,"byte_end":10997242,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997243,"byte_end":10997282,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997283,"byte_end":10997322,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997323,"byte_end":10997354,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997355,"byte_end":10997386,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997387,"byte_end":10997436,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997437,"byte_end":10997440,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997441,"byte_end":10997492,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997493,"byte_end":10997502,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997503,"byte_end":10997546,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997547,"byte_end":10997567,"line_start":75,"line_end":75,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997568,"byte_end":10997598,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997599,"byte_end":10997638,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997639,"byte_end":10997644,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997645,"byte_end":10997652,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997653,"byte_end":10997656,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997657,"byte_end":10997691,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997692,"byte_end":10997721,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997722,"byte_end":10997769,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997770,"byte_end":10997819,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997820,"byte_end":10997857,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10997858,"byte_end":10997959,"line_start":86,"line_end":86,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":6111},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002010,"byte_end":11002013,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001800,"byte_end":11001863,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001868,"byte_end":11001871,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001876,"byte_end":11001890,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001895,"byte_end":11001898,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001903,"byte_end":11001910,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001915,"byte_end":11001943,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001948,"byte_end":11001951,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001956,"byte_end":11001986,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001991,"byte_end":11001998,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6112},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002611,"byte_end":11002627,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"with_max_readers","qualname":"<RwLock<T>>::with_max_readers","value":"pub fn with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002226,"byte_end":11002288,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002293,"byte_end":11002352,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002357,"byte_end":11002360,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002365,"byte_end":11002379,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002384,"byte_end":11002387,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002392,"byte_end":11002399,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002404,"byte_end":11002432,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002437,"byte_end":11002440,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::with_max_readers(5, 1024);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002445,"byte_end":11002494,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002499,"byte_end":11002506,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002511,"byte_end":11002514,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002519,"byte_end":11002531,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002536,"byte_end":11002539,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_reads` is more than `u32::MAX >> 3`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11002544,"byte_end":11002599,"line_start":224,"line_end":224,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6113},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005804,"byte_end":11005808,"line_start":326,"line_end":326,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004334,"byte_end":11004407,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004412,"byte_end":11004458,"line_start":288,"line_end":288,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004463,"byte_end":11004466,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004471,"byte_end":11004544,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004549,"byte_end":11004624,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004629,"byte_end":11004632,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004637,"byte_end":11004710,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004715,"byte_end":11004784,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004789,"byte_end":11004863,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004868,"byte_end":11004941,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004946,"byte_end":11004970,"line_start":297,"line_end":297,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004975,"byte_end":11004978,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11004983,"byte_end":11005057,"line_start":299,"line_end":299,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005062,"byte_end":11005079,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005084,"byte_end":11005087,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005092,"byte_end":11005106,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005111,"byte_end":11005114,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005119,"byte_end":11005126,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005131,"byte_end":11005154,"line_start":305,"line_end":305,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005159,"byte_end":11005187,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005192,"byte_end":11005195,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005200,"byte_end":11005218,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005223,"byte_end":11005244,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005249,"byte_end":11005293,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005298,"byte_end":11005332,"line_start":311,"line_end":311,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005337,"byte_end":11005340,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005345,"byte_end":11005379,"line_start":313,"line_end":313,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005384,"byte_end":11005410,"line_start":314,"line_end":314,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005415,"byte_end":11005418,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005423,"byte_end":11005456,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005461,"byte_end":11005531,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005536,"byte_end":11005576,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005581,"byte_end":11005611,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005616,"byte_end":11005673,"line_start":320,"line_end":320,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005678,"byte_end":11005681,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005686,"byte_end":11005744,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005749,"byte_end":11005765,"line_start":323,"line_end":323,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005770,"byte_end":11005774,"line_start":324,"line_end":324,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11005779,"byte_end":11005786,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6117},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008108,"byte_end":11008118,"line_start":384,"line_end":384,"column_start":18,"column_end":28},"name":"read_owned","qualname":"<RwLock<T>>::read_owned","value":"pub async fn read_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006255,"byte_end":11006328,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006333,"byte_end":11006379,"line_start":340,"line_end":340,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006384,"byte_end":11006387,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006392,"byte_end":11006465,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006470,"byte_end":11006545,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006550,"byte_end":11006553,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::read`], except that the returned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006558,"byte_end":11006632,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006637,"byte_end":11006711,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006716,"byte_end":11006788,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006793,"byte_end":11006868,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006873,"byte_end":11006916,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006921,"byte_end":11006924,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11006929,"byte_end":11007002,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007007,"byte_end":11007076,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007081,"byte_end":11007155,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007160,"byte_end":11007233,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007238,"byte_end":11007262,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007267,"byte_end":11007270,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007275,"byte_end":11007349,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007354,"byte_end":11007371,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007376,"byte_end":11007379,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007384,"byte_end":11007398,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007403,"byte_end":11007406,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007411,"byte_end":11007418,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007423,"byte_end":11007446,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007451,"byte_end":11007479,"line_start":364,"line_end":364,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007484,"byte_end":11007487,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007492,"byte_end":11007510,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007515,"byte_end":11007536,"line_start":367,"line_end":367,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007541,"byte_end":11007585,"line_start":368,"line_end":368,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007590,"byte_end":11007624,"line_start":369,"line_end":369,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007629,"byte_end":11007632,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007637,"byte_end":11007677,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007682,"byte_end":11007708,"line_start":372,"line_end":372,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007713,"byte_end":11007716,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007721,"byte_end":11007754,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007759,"byte_end":11007829,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007834,"byte_end":11007880,"line_start":376,"line_end":376,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007885,"byte_end":11007915,"line_start":377,"line_end":377,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007920,"byte_end":11007977,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007982,"byte_end":11007985,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11007990,"byte_end":11008048,"line_start":380,"line_end":380,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008053,"byte_end":11008069,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008074,"byte_end":11008078,"line_start":382,"line_end":382,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008083,"byte_end":11008090,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6121},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009607,"byte_end":11009615,"line_start":429,"line_end":429,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008588,"byte_end":11008650,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008655,"byte_end":11008658,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008663,"byte_end":11008740,"line_start":399,"line_end":399,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008745,"byte_end":11008816,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008821,"byte_end":11008838,"line_start":401,"line_end":401,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008843,"byte_end":11008846,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008851,"byte_end":11008885,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008890,"byte_end":11008893,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008898,"byte_end":11008912,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008917,"byte_end":11008920,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008925,"byte_end":11008932,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008937,"byte_end":11008960,"line_start":408,"line_end":408,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008965,"byte_end":11008993,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11008998,"byte_end":11009001,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009006,"byte_end":11009024,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009029,"byte_end":11009050,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009055,"byte_end":11009099,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009104,"byte_end":11009138,"line_start":414,"line_end":414,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009143,"byte_end":11009146,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009151,"byte_end":11009192,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009197,"byte_end":11009223,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009228,"byte_end":11009231,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009236,"byte_end":11009269,"line_start":419,"line_end":419,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009274,"byte_end":11009344,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009349,"byte_end":11009389,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009394,"byte_end":11009424,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009429,"byte_end":11009486,"line_start":423,"line_end":423,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009491,"byte_end":11009494,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009499,"byte_end":11009552,"line_start":425,"line_end":425,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009557,"byte_end":11009573,"line_start":426,"line_end":426,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009578,"byte_end":11009583,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11009588,"byte_end":11009595,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6122},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011447,"byte_end":11011461,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"try_read_owned","qualname":"<RwLock<T>>::try_read_owned","value":"pub fn try_read_owned(Arc<Self>)\n-> Result<OwnedRwLockReadGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010041,"byte_end":11010103,"line_start":443,"line_end":443,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010108,"byte_end":11010111,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010116,"byte_end":11010193,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010198,"byte_end":11010269,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010274,"byte_end":11010291,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010296,"byte_end":11010299,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_read`], except that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010304,"byte_end":11010373,"line_start":449,"line_end":449,"column_start":5,"column_end":74}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010378,"byte_end":11010451,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010456,"byte_end":11010528,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010533,"byte_end":11010606,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010611,"byte_end":11010666,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010671,"byte_end":11010674,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010679,"byte_end":11010713,"line_start":455,"line_end":455,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010718,"byte_end":11010721,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010726,"byte_end":11010740,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010745,"byte_end":11010748,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010753,"byte_end":11010760,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010765,"byte_end":11010788,"line_start":460,"line_end":460,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010793,"byte_end":11010821,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010826,"byte_end":11010829,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010834,"byte_end":11010852,"line_start":463,"line_end":463,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010857,"byte_end":11010878,"line_start":464,"line_end":464,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010883,"byte_end":11010927,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010932,"byte_end":11010966,"line_start":466,"line_end":466,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010971,"byte_end":11010974,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read_owned().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11010979,"byte_end":11011026,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011031,"byte_end":11011057,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011062,"byte_end":11011065,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011070,"byte_end":11011103,"line_start":471,"line_end":471,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011108,"byte_end":11011178,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011183,"byte_end":11011229,"line_start":473,"line_end":473,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011234,"byte_end":11011264,"line_start":474,"line_end":474,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011269,"byte_end":11011326,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011331,"byte_end":11011334,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011339,"byte_end":11011392,"line_start":477,"line_end":477,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011397,"byte_end":11011413,"line_start":478,"line_end":478,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011418,"byte_end":11011423,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011428,"byte_end":11011435,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6123},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012547,"byte_end":11012552,"line_start":517,"line_end":517,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011910,"byte_end":11011982,"line_start":495,"line_end":495,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11011987,"byte_end":11012038,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012043,"byte_end":11012046,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012051,"byte_end":11012123,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012128,"byte_end":11012156,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012161,"byte_end":11012164,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012169,"byte_end":11012244,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012249,"byte_end":11012266,"line_start":502,"line_end":502,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012271,"byte_end":11012274,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012279,"byte_end":11012293,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012298,"byte_end":11012301,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012306,"byte_end":11012313,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012318,"byte_end":11012346,"line_start":507,"line_end":507,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012351,"byte_end":11012354,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012359,"byte_end":11012377,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012382,"byte_end":11012403,"line_start":510,"line_end":510,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012408,"byte_end":11012440,"line_start":511,"line_end":511,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012445,"byte_end":11012448,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012453,"byte_end":11012490,"line_start":513,"line_end":513,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012495,"byte_end":11012508,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012513,"byte_end":11012517,"line_start":515,"line_end":515,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11012522,"byte_end":11012529,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6127},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014099,"byte_end":11014110,"line_start":560,"line_end":560,"column_start":18,"column_end":29},"name":"write_owned","qualname":"<RwLock<T>>::write_owned","value":"pub async fn write_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013046,"byte_end":11013118,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013123,"byte_end":11013174,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013179,"byte_end":11013182,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013187,"byte_end":11013259,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013264,"byte_end":11013292,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013297,"byte_end":11013300,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::write`], except that the returned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013305,"byte_end":11013380,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013385,"byte_end":11013459,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013464,"byte_end":11013536,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013541,"byte_end":11013616,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013621,"byte_end":11013664,"line_start":541,"line_end":541,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013669,"byte_end":11013672,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013677,"byte_end":11013752,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013757,"byte_end":11013774,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013779,"byte_end":11013782,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013787,"byte_end":11013801,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013806,"byte_end":11013809,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013814,"byte_end":11013821,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013826,"byte_end":11013849,"line_start":549,"line_end":549,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013854,"byte_end":11013882,"line_start":550,"line_end":550,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013887,"byte_end":11013890,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013895,"byte_end":11013913,"line_start":552,"line_end":552,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013918,"byte_end":11013939,"line_start":553,"line_end":553,"column_start":5,"column_end":26}},{"value":"/   let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013944,"byte_end":11013986,"line_start":554,"line_end":554,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013991,"byte_end":11013994,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11013999,"byte_end":11014042,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/   *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014047,"byte_end":11014060,"line_start":557,"line_end":557,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014065,"byte_end":11014069,"line_start":558,"line_end":558,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014074,"byte_end":11014081,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6131},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015267,"byte_end":11015276,"line_start":597,"line_end":597,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014627,"byte_end":11014693,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014698,"byte_end":11014701,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014706,"byte_end":11014783,"line_start":576,"line_end":576,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014788,"byte_end":11014860,"line_start":577,"line_end":577,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014865,"byte_end":11014882,"line_start":578,"line_end":578,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014887,"byte_end":11014890,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014895,"byte_end":11014929,"line_start":580,"line_end":580,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014934,"byte_end":11014937,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014942,"byte_end":11014956,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014961,"byte_end":11014964,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014969,"byte_end":11014976,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11014981,"byte_end":11015009,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015014,"byte_end":11015017,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015022,"byte_end":11015040,"line_start":587,"line_end":587,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015045,"byte_end":11015066,"line_start":588,"line_end":588,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015071,"byte_end":11015103,"line_start":589,"line_end":589,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015108,"byte_end":11015111,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015116,"byte_end":11015148,"line_start":591,"line_end":591,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015153,"byte_end":11015179,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015184,"byte_end":11015187,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015192,"byte_end":11015233,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015238,"byte_end":11015243,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015248,"byte_end":11015255,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6132},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016828,"byte_end":11016843,"line_start":642,"line_end":642,"column_start":12,"column_end":27},"name":"try_write_owned","qualname":"<RwLock<T>>::try_write_owned","value":"pub fn try_write_owned(Arc<Self>)\n-> Result<OwnedRwLockWriteGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015749,"byte_end":11015815,"line_start":612,"line_end":612,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015820,"byte_end":11015823,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015828,"byte_end":11015905,"line_start":614,"line_end":614,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015910,"byte_end":11015982,"line_start":615,"line_end":615,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11015987,"byte_end":11016004,"line_start":616,"line_end":616,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016009,"byte_end":11016012,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_write`], except that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016017,"byte_end":11016087,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016092,"byte_end":11016165,"line_start":619,"line_end":619,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016170,"byte_end":11016242,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016247,"byte_end":11016320,"line_start":621,"line_end":621,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016325,"byte_end":11016380,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016385,"byte_end":11016388,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016393,"byte_end":11016427,"line_start":624,"line_end":624,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016432,"byte_end":11016435,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016440,"byte_end":11016454,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016459,"byte_end":11016462,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016467,"byte_end":11016474,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016479,"byte_end":11016502,"line_start":629,"line_end":629,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016507,"byte_end":11016535,"line_start":630,"line_end":630,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016540,"byte_end":11016543,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016548,"byte_end":11016566,"line_start":632,"line_end":632,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016571,"byte_end":11016592,"line_start":633,"line_end":633,"column_start":5,"column_end":26}},{"value":"/     let rw = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016597,"byte_end":11016639,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016644,"byte_end":11016647,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     let v = Arc::clone(&rw).read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016652,"byte_end":11016703,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016708,"byte_end":11016734,"line_start":637,"line_end":637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016739,"byte_end":11016742,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write_owned().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016747,"byte_end":11016794,"line_start":639,"line_end":639,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016799,"byte_end":11016804,"line_start":640,"line_end":640,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11016809,"byte_end":11016816,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6133},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017811,"byte_end":11017818,"line_start":674,"line_end":674,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017339,"byte_end":11017394,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017399,"byte_end":11017402,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017407,"byte_end":11017483,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017488,"byte_end":11017562,"line_start":660,"line_end":660,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017567,"byte_end":11017570,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017575,"byte_end":11017589,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017594,"byte_end":11017597,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017602,"byte_end":11017609,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017614,"byte_end":11017642,"line_start":665,"line_end":665,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017647,"byte_end":11017650,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017655,"byte_end":11017670,"line_start":667,"line_end":667,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017675,"byte_end":11017713,"line_start":668,"line_end":668,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017718,"byte_end":11017721,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017726,"byte_end":11017757,"line_start":670,"line_end":670,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017762,"byte_end":11017777,"line_start":671,"line_end":671,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017782,"byte_end":11017787,"line_start":672,"line_end":672,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017792,"byte_end":11017799,"line_start":673,"line_end":673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11018052,"byte_end":11018062,"line_start":682,"line_end":682,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11017987,"byte_end":11018040,"line_start":681,"line_end":681,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6206},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067138,"byte_end":11067146,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::sync::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":6208},{"krate":0,"index":6209},{"krate":0,"index":6210}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066460,"byte_end":11066517,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066518,"byte_end":11066521,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Provides the functionality to either set the value, in case `OnceCell`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066522,"byte_end":11066596,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ is uninitialized, or get the already initialized value by using an async","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066597,"byte_end":11066673,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ function via [`OnceCell::get_or_init`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066674,"byte_end":11066717,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066718,"byte_end":11066721,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::get_or_init`]: crate::sync::OnceCell::get_or_init","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066722,"byte_end":11066787,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066788,"byte_end":11066791,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066792,"byte_end":11066806,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066807,"byte_end":11066814,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066815,"byte_end":11066845,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066846,"byte_end":11066849,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> u32 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066850,"byte_end":11066890,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/     1 + 1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066891,"byte_end":11066904,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066905,"byte_end":11066910,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066911,"byte_end":11066914,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066915,"byte_end":11066970,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066971,"byte_end":11066974,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066975,"byte_end":11066993,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11066994,"byte_end":11067015,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let result1 = ONCE.get_or_init(some_computation).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067016,"byte_end":11067079,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/     assert_eq!(*result1, 2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067080,"byte_end":11067112,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067113,"byte_end":11067118,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067119,"byte_end":11067126,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6231},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068218,"byte_end":11068221,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized OnceCell instance.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized OnceCell instance.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068156,"byte_end":11068206,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6232},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068632,"byte_end":11068640,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"new_with","qualname":"<OnceCell<T>>::new_with","value":"pub fn new_with(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new initialized OnceCell instance if `value` is `Some`, otherwise\n has the same functionality as [`OnceCell::new`].","sig":null,"attributes":[{"value":"/ Creates a new initialized OnceCell instance if `value` is `Some`, otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068422,"byte_end":11068501,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/ has the same functionality as [`OnceCell::new`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068506,"byte_end":11068558,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068563,"byte_end":11068566,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::new`]: crate::sync::OnceCell::new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068571,"byte_end":11068620,"line_start":93,"line_end":93,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6233},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11069492,"byte_end":11069503,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"initialized","qualname":"<OnceCell<T>>::initialized","value":"pub fn initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value of the OnceCell is set or not.\n","sig":null,"attributes":[{"value":"/ Whether the value of the OnceCell is set or not.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11069428,"byte_end":11069480,"line_start":119,"line_end":119,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6240},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070445,"byte_end":11070448,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to get a reference to the value of the OnceCell.","sig":null,"attributes":[{"value":"/ Tries to get a reference to the value of the OnceCell.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070281,"byte_end":11070339,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070344,"byte_end":11070347,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Returns None if the value of the OnceCell hasn't previously been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070352,"byte_end":11070433,"line_start":145,"line_end":145,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":6241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070763,"byte_end":11070770,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to return a mutable reference to the value of the cell.","sig":null,"attributes":[{"value":"/ Tries to return a mutable reference to the value of the cell.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070609,"byte_end":11070674,"line_start":154,"line_end":154,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070679,"byte_end":11070682,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cell hasn't previously been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070687,"byte_end":11070751,"line_start":156,"line_end":156,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6242},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071657,"byte_end":11071660,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), SetError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the OnceCell to the argument value.","sig":null,"attributes":[{"value":"/ Sets the value of the OnceCell to the argument value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11070943,"byte_end":11071000,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071005,"byte_end":11071008,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the value of the OnceCell was already set prior to this call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071013,"byte_end":11071080,"line_start":167,"line_end":167,"column_start":5,"column_end":72}},{"value":"/ then [`SetError::AlreadyInitializedError`] is returned. If another thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071085,"byte_end":11071162,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/ is initializing the cell while this method is called,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071167,"byte_end":11071224,"line_start":169,"line_end":169,"column_start":5,"column_end":62}},{"value":"/ [`SetError::InitializingError`] is returned. In order to wait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071229,"byte_end":11071294,"line_start":170,"line_end":170,"column_start":5,"column_end":70}},{"value":"/ for an ongoing initialization to finish, call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071299,"byte_end":11071348,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ [`OnceCell::get_or_init`] instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071353,"byte_end":11071391,"line_start":172,"line_end":172,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071396,"byte_end":11071399,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`SetError::AlreadyInitializedError`]: crate::sync::SetError::AlreadyInitializedError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071404,"byte_end":11071493,"line_start":174,"line_end":174,"column_start":5,"column_end":94}},{"value":"/ [`SetError::InitializingError`]: crate::sync::SetError::InitializingError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071498,"byte_end":11071575,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/ ['OnceCell::get_or_init`]: crate::sync::OnceCell::get_or_init","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11071580,"byte_end":11071645,"line_start":176,"line_end":176,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11073338,"byte_end":11073349,"line_start":214,"line_end":214,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub async fn get_or_init<F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to initialize the value of the OnceCell using the async function `f`.\n If the value of the OnceCell was already initialized prior to this call,\n a reference to that initialized value is returned. If some other thread\n initiated the initialization prior to this call and the initialization\n hasn't completed, this call waits until the initialization is finished.","sig":null,"attributes":[{"value":"/ Tries to initialize the value of the OnceCell using the async function `f`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11072842,"byte_end":11072921,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ If the value of the OnceCell was already initialized prior to this call,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11072926,"byte_end":11073002,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ a reference to that initialized value is returned. If some other thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11073007,"byte_end":11073082,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ initiated the initialization prior to this call and the initialization","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11073087,"byte_end":11073161,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ hasn't completed, this call waits until the initialization is finished.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11073166,"byte_end":11073241,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11073246,"byte_end":11073249,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11073254,"byte_end":11073320,"line_start":213,"line_end":213,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6248},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11076229,"byte_end":11076244,"line_start":270,"line_end":270,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub async fn get_or_try_init<E, F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/\nwhere F: FnOnce() -> Fut, Fut: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to initialize the value of the OnceCell using the async function `f`.\n If the value of the OnceCell was already initialized prior to this call,\n a reference to that initialized value is returned. If some other thread\n initiated the initialization prior to this call and the initialization\n hasn't completed, this call waits until the initialization is finished.\n If the function argument `f` returns an error, `get_or_try_init`\n returns that error, otherwise the result of `f` will be stored in the cell.","sig":null,"attributes":[{"value":"/ Tries to initialize the value of the OnceCell using the async function `f`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11075576,"byte_end":11075655,"line_start":261,"line_end":261,"column_start":5,"column_end":84}},{"value":"/ If the value of the OnceCell was already initialized prior to this call,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11075660,"byte_end":11075736,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ a reference to that initialized value is returned. If some other thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11075741,"byte_end":11075816,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ initiated the initialization prior to this call and the initialization","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11075821,"byte_end":11075895,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ hasn't completed, this call waits until the initialization is finished.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11075900,"byte_end":11075975,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ If the function argument `f` returns an error, `get_or_try_init`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11075980,"byte_end":11076048,"line_start":266,"line_end":266,"column_start":5,"column_end":73}},{"value":"/ returns that error, otherwise the result of `f` will be stored in the cell.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11076053,"byte_end":11076132,"line_start":267,"line_end":267,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11076137,"byte_end":11076140,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11076145,"byte_end":11076211,"line_start":269,"line_end":269,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11078888,"byte_end":11078898,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Moves the value out of the cell, destroying the cell in the process.","sig":null,"attributes":[{"value":"/ Moves the value out of the cell, destroying the cell in the process.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11078743,"byte_end":11078815,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11078820,"byte_end":11078823,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cell is uninitialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11078828,"byte_end":11078876,"line_start":324,"line_end":324,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6256},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11079371,"byte_end":11079375,"line_start":338,"line_end":338,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the current value, leaving the cell uninitialized.","sig":null,"attributes":[{"value":"/ Takes ownership of the current value, leaving the cell uninitialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11079225,"byte_end":11079298,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11079303,"byte_end":11079306,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cell is uninitialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11079311,"byte_end":11079359,"line_start":337,"line_end":337,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6551},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080399,"byte_end":11080422,"line_start":364,"line_end":364,"column_start":5,"column_end":28},"name":"AlreadyInitializedError","qualname":"::sync::once_cell::SetError::AlreadyInitializedError","value":"SetError::AlreadyInitializedError(T)","parent":{"krate":0,"index":6549},"children":[],"decl_id":null,"docs":" Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.","sig":null,"attributes":[{"value":"/ Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080244,"byte_end":11080332,"line_start":361,"line_end":361,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080337,"byte_end":11080340,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080345,"byte_end":11080394,"line_start":363,"line_end":363,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6554},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080634,"byte_end":11080651,"line_start":370,"line_end":370,"column_start":5,"column_end":22},"name":"InitializingError","qualname":"::sync::once_cell::SetError::InitializingError","value":"SetError::InitializingError(T)","parent":{"krate":0,"index":6549},"children":[],"decl_id":null,"docs":" Error resulting from [`OnceCell::set`] calls when the cell is currently being\n inintialized during the calls to that method.","sig":null,"attributes":[{"value":"/ Error resulting from [`OnceCell::set`] calls when the cell is currently being","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080432,"byte_end":11080513,"line_start":366,"line_end":366,"column_start":5,"column_end":86}},{"value":"/ inintialized during the calls to that method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080518,"byte_end":11080567,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080572,"byte_end":11080575,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080580,"byte_end":11080629,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":6549},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080226,"byte_end":11080234,"line_start":360,"line_end":360,"column_start":10,"column_end":18},"name":"SetError","qualname":"::sync::once_cell::SetError","value":"pub enum SetError<T> {\n\n    /// Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.\n    ///\n    /// [`OnceCell::set`]: crate::sync::OnceCell::set\n    AlreadyInitializedError(T),\n\n    /// Error resulting from [`OnceCell::set`] calls when the cell is currently being\n    /// inintialized during the calls to that method.\n    ///\n    /// [`OnceCell::set`]: crate::sync::OnceCell::set\n    InitializingError(T),\n}","parent":null,"children":[{"krate":0,"index":6551},{"krate":0,"index":6554}],"decl_id":null,"docs":" Errors that can be returned from [`OnceCell::set`]","sig":null,"attributes":[{"value":"/ Errors that can be returned from [`OnceCell::set`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080080,"byte_end":11080134,"line_start":356,"line_end":356,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080135,"byte_end":11080138,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080139,"byte_end":11080188,"line_start":358,"line_end":358,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6268},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11081115,"byte_end":11081134,"line_start":386,"line_end":386,"column_start":12,"column_end":31},"name":"is_already_init_err","qualname":"<SetError<T>>::is_already_init_err","value":"pub fn is_already_init_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::AlreadyInitializedError`.\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::AlreadyInitializedError`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11081041,"byte_end":11081103,"line_start":385,"line_end":385,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6269},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11081372,"byte_end":11081391,"line_start":394,"line_end":394,"column_start":12,"column_end":31},"name":"is_initializing_err","qualname":"<SetError<T>>::is_initializing_err","value":"pub fn is_initializing_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::InitializingError`\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::InitializingError`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11081305,"byte_end":11081360,"line_start":393,"line_end":393,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":6273},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":6274},{"krate":0,"index":6275},{"krate":0,"index":6276},{"krate":0,"index":6277},{"krate":0,"index":13312},{"krate":0,"index":6278},{"krate":0,"index":13314},{"krate":0,"index":6279},{"krate":0,"index":6280},{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6566},{"krate":0,"index":6570},{"krate":0,"index":6573},{"krate":0,"index":6576},{"krate":0,"index":6579},{"krate":0,"index":6583},{"krate":0,"index":6587},{"krate":0,"index":6594},{"krate":0,"index":6284},{"krate":0,"index":6294},{"krate":0,"index":6295},{"krate":0,"index":6297},{"krate":0,"index":6304},{"krate":0,"index":6306},{"krate":0,"index":6309},{"krate":0,"index":6312},{"krate":0,"index":6320},{"krate":0,"index":6323}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081632,"byte_end":11081711,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081712,"byte_end":11081722,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081723,"byte_end":11081726,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081727,"byte_end":11081803,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081804,"byte_end":11081878,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081879,"byte_end":11081882,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081883,"byte_end":11081894,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081895,"byte_end":11081898,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081899,"byte_end":11081979,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11081980,"byte_end":11082056,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082057,"byte_end":11082127,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082128,"byte_end":11082204,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082205,"byte_end":11082246,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082247,"byte_end":11082250,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082251,"byte_end":11082265,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082266,"byte_end":11082269,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082270,"byte_end":11082277,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082278,"byte_end":11082305,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082306,"byte_end":11082309,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082310,"byte_end":11082374,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082375,"byte_end":11082426,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082427,"byte_end":11082430,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082431,"byte_end":11082464,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082465,"byte_end":11082511,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082512,"byte_end":11082570,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082571,"byte_end":11082584,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082585,"byte_end":11082596,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082597,"byte_end":11082600,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082601,"byte_end":11082627,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082628,"byte_end":11082640,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082641,"byte_end":11082648,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082649,"byte_end":11082656,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082657,"byte_end":11082660,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082661,"byte_end":11082674,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082675,"byte_end":11082678,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082679,"byte_end":11082756,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082757,"byte_end":11082835,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082836,"byte_end":11082916,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082917,"byte_end":11082920,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082921,"byte_end":11082940,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082941,"byte_end":11082944,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11082945,"byte_end":11083025,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083026,"byte_end":11083105,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083106,"byte_end":11083178,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083179,"byte_end":11083182,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083183,"byte_end":11083225,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083226,"byte_end":11083272,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083273,"byte_end":11083339,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083340,"byte_end":11083404,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083405,"byte_end":11083449,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083450,"byte_end":11083514,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083515,"byte_end":11083573,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6566},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084145,"byte_end":11084153,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6569}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083783,"byte_end":11083849,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083850,"byte_end":11083853,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083854,"byte_end":11083920,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083921,"byte_end":11083924,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11083925,"byte_end":11083999,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084000,"byte_end":11084012,"line_start":68,"line_end":68,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084013,"byte_end":11084016,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084017,"byte_end":11084116,"line_start":70,"line_end":70,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":6573},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084442,"byte_end":11084448,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6575}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084277,"byte_end":11084342,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084343,"byte_end":11084346,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084347,"byte_end":11084413,"line_start":82,"line_end":82,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6579},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084768,"byte_end":11084771,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":6582}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084485,"byte_end":11084527,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084528,"byte_end":11084531,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084532,"byte_end":11084608,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084609,"byte_end":11084688,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11084689,"byte_end":11084739,"line_start":92,"line_end":92,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":6284},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085348,"byte_end":11085353,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":6285},{"krate":0,"index":6597},{"krate":0,"index":6600},{"krate":0,"index":6286},{"krate":0,"index":6289},{"krate":0,"index":6603},{"krate":0,"index":6606},{"krate":0,"index":6291},{"krate":0,"index":6293}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085360,"byte_end":11085381,"line_start":120,"line_end":120,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6597},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085489,"byte_end":11085498,"line_start":126,"line_end":126,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":6599}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085406,"byte_end":11085452,"line_start":124,"line_end":124,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6603},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085919,"byte_end":11085928,"line_start":142,"line_end":142,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085826,"byte_end":11085882,"line_start":140,"line_end":140,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6295},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086983,"byte_end":11086990,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086220,"byte_end":11086296,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086297,"byte_end":11086300,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086301,"byte_end":11086383,"line_start":159,"line_end":159,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086384,"byte_end":11086460,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086461,"byte_end":11086497,"line_start":161,"line_end":161,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086498,"byte_end":11086501,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086502,"byte_end":11086516,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086517,"byte_end":11086520,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086521,"byte_end":11086528,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086529,"byte_end":11086556,"line_start":166,"line_end":166,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086557,"byte_end":11086560,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086561,"byte_end":11086625,"line_start":168,"line_end":168,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086626,"byte_end":11086677,"line_start":169,"line_end":169,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086678,"byte_end":11086681,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086682,"byte_end":11086715,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086716,"byte_end":11086762,"line_start":172,"line_end":172,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086763,"byte_end":11086821,"line_start":173,"line_end":173,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086822,"byte_end":11086835,"line_start":174,"line_end":174,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086836,"byte_end":11086847,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086848,"byte_end":11086851,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086852,"byte_end":11086878,"line_start":177,"line_end":177,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086879,"byte_end":11086891,"line_start":178,"line_end":178,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086892,"byte_end":11086899,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086900,"byte_end":11086907,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086908,"byte_end":11086911,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086912,"byte_end":11086941,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086942,"byte_end":11086975,"line_start":183,"line_end":183,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6300},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088142,"byte_end":11088148,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087680,"byte_end":11087735,"line_start":211,"line_end":211,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087740,"byte_end":11087743,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087748,"byte_end":11087824,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087829,"byte_end":11087905,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087910,"byte_end":11087941,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087946,"byte_end":11087949,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087954,"byte_end":11087968,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087973,"byte_end":11087976,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087981,"byte_end":11087988,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087993,"byte_end":11088020,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088025,"byte_end":11088028,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088033,"byte_end":11088075,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088080,"byte_end":11088118,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088123,"byte_end":11088130,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11089074,"byte_end":11089081,"line_start":258,"line_end":258,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088260,"byte_end":11088294,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088299,"byte_end":11088302,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088307,"byte_end":11088382,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088387,"byte_end":11088463,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088468,"byte_end":11088481,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088486,"byte_end":11088489,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088494,"byte_end":11088523,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088528,"byte_end":11088531,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088536,"byte_end":11088550,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088555,"byte_end":11088558,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088563,"byte_end":11088570,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088575,"byte_end":11088602,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088607,"byte_end":11088610,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088615,"byte_end":11088633,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088638,"byte_end":11088659,"line_start":244,"line_end":244,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088664,"byte_end":11088715,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088720,"byte_end":11088723,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088728,"byte_end":11088761,"line_start":247,"line_end":247,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088766,"byte_end":11088806,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088811,"byte_end":11088822,"line_start":249,"line_end":249,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088827,"byte_end":11088830,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088835,"byte_end":11088879,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088884,"byte_end":11088928,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088933,"byte_end":11088936,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088941,"byte_end":11088984,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11088989,"byte_end":11089034,"line_start":255,"line_end":255,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11089039,"byte_end":11089044,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11089049,"byte_end":11089056,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6314},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091057,"byte_end":11091061,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11090982,"byte_end":11091045,"line_start":324,"line_end":324,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6315},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092088,"byte_end":11092094,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091626,"byte_end":11091681,"line_start":342,"line_end":342,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091686,"byte_end":11091689,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091694,"byte_end":11091770,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091775,"byte_end":11091851,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091856,"byte_end":11091887,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091892,"byte_end":11091895,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091900,"byte_end":11091914,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091919,"byte_end":11091922,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091927,"byte_end":11091934,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091939,"byte_end":11091966,"line_start":351,"line_end":351,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091971,"byte_end":11091974,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11091979,"byte_end":11092021,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092026,"byte_end":11092064,"line_start":354,"line_end":354,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092069,"byte_end":11092076,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6316},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092522,"byte_end":11092531,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092206,"byte_end":11092280,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092285,"byte_end":11092302,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092307,"byte_end":11092310,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092315,"byte_end":11092329,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092334,"byte_end":11092337,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092342,"byte_end":11092349,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092354,"byte_end":11092405,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092410,"byte_end":11092439,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092444,"byte_end":11092447,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092452,"byte_end":11092465,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092470,"byte_end":11092498,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092503,"byte_end":11092510,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6317},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093275,"byte_end":11093281,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092612,"byte_end":11092658,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092663,"byte_end":11092666,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092671,"byte_end":11092745,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092750,"byte_end":11092805,"line_start":380,"line_end":380,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092810,"byte_end":11092813,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092818,"byte_end":11092832,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092837,"byte_end":11092840,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092845,"byte_end":11092852,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092857,"byte_end":11092884,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092889,"byte_end":11092892,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092897,"byte_end":11092915,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092920,"byte_end":11092941,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092946,"byte_end":11092993,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11092998,"byte_end":11093001,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093006,"byte_end":11093039,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093044,"byte_end":11093067,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093072,"byte_end":11093093,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093098,"byte_end":11093109,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093114,"byte_end":11093117,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093122,"byte_end":11093155,"line_start":396,"line_end":396,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093160,"byte_end":11093186,"line_start":397,"line_end":397,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093191,"byte_end":11093235,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093240,"byte_end":11093245,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093250,"byte_end":11093257,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":620},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6619},{"krate":0,"index":6620},{"krate":0,"index":6626},{"krate":0,"index":6627},{"krate":0,"index":6707},{"krate":0,"index":6708},{"krate":0,"index":6709},{"krate":0,"index":6710},{"krate":0,"index":6782},{"krate":0,"index":6783},{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6797}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":125996,"byte_end":126027,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126028,"byte_end":126031,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126032,"byte_end":126054,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126055,"byte_end":126058,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126059,"byte_end":126140,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126141,"byte_end":126221,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126222,"byte_end":126302,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126303,"byte_end":126377,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126378,"byte_end":126453,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126454,"byte_end":126476,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126477,"byte_end":126480,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126481,"byte_end":126516,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126517,"byte_end":126520,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126521,"byte_end":126595,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126596,"byte_end":126675,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126676,"byte_end":126748,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126749,"byte_end":126824,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126825,"byte_end":126878,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126879,"byte_end":126882,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126883,"byte_end":126960,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":126961,"byte_end":127034,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127035,"byte_end":127114,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127115,"byte_end":127193,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127194,"byte_end":127266,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127267,"byte_end":127342,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127343,"byte_end":127417,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127418,"byte_end":127493,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127494,"byte_end":127524,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127525,"byte_end":127528,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127529,"byte_end":127607,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127608,"byte_end":127683,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127684,"byte_end":127761,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127762,"byte_end":127841,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127842,"byte_end":127920,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127921,"byte_end":127996,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":127997,"byte_end":128072,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128073,"byte_end":128134,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128135,"byte_end":128138,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128139,"byte_end":128163,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128164,"byte_end":128228,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128229,"byte_end":128289,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128290,"byte_end":128379,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128380,"byte_end":128468,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128469,"byte_end":128472,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128473,"byte_end":128498,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128499,"byte_end":128502,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128503,"byte_end":128570,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128571,"byte_end":128574,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128575,"byte_end":128591,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128592,"byte_end":128595,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128596,"byte_end":128675,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128676,"byte_end":128755,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128756,"byte_end":128835,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128836,"byte_end":128903,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128904,"byte_end":128907,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128908,"byte_end":128915,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128916,"byte_end":128936,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128937,"byte_end":128940,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128941,"byte_end":128963,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128964,"byte_end":128987,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":128988,"byte_end":129024,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129025,"byte_end":129032,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129033,"byte_end":129040,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129041,"byte_end":129048,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129049,"byte_end":129052,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129053,"byte_end":129132,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129133,"byte_end":129211,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129212,"byte_end":129246,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129247,"byte_end":129250,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129251,"byte_end":129258,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129259,"byte_end":129279,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129280,"byte_end":129283,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129284,"byte_end":129364,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129365,"byte_end":129399,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129400,"byte_end":129414,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129415,"byte_end":129437,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129438,"byte_end":129445,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129446,"byte_end":129449,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129450,"byte_end":129460,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129461,"byte_end":129464,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129465,"byte_end":129509,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129510,"byte_end":129539,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129540,"byte_end":129579,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129580,"byte_end":129592,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129593,"byte_end":129600,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129601,"byte_end":129608,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129609,"byte_end":129612,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129613,"byte_end":129693,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129694,"byte_end":129770,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129771,"byte_end":129783,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129784,"byte_end":129787,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129788,"byte_end":129795,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129796,"byte_end":129816,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129817,"byte_end":129820,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129821,"byte_end":129859,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129860,"byte_end":129894,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129895,"byte_end":129936,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129937,"byte_end":129944,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129945,"byte_end":129948,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":129949,"byte_end":130007,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130008,"byte_end":130041,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130042,"byte_end":130049,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130050,"byte_end":130057,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130058,"byte_end":130061,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130062,"byte_end":130130,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130131,"byte_end":130159,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130160,"byte_end":130163,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130164,"byte_end":130205,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130206,"byte_end":130239,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130240,"byte_end":130286,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130287,"byte_end":130330,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130331,"byte_end":130373,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130374,"byte_end":130415,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130416,"byte_end":130419,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130420,"byte_end":130449,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130450,"byte_end":130453,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130454,"byte_end":130534,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130535,"byte_end":130614,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130615,"byte_end":130694,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130695,"byte_end":130735,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130736,"byte_end":130739,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130740,"byte_end":130814,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130815,"byte_end":130895,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130896,"byte_end":130899,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130900,"byte_end":130923,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130924,"byte_end":130927,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":130928,"byte_end":131008,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131009,"byte_end":131075,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131076,"byte_end":131143,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131144,"byte_end":131218,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131219,"byte_end":131231,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131232,"byte_end":131235,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131236,"byte_end":131243,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131244,"byte_end":131264,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131265,"byte_end":131268,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131269,"byte_end":131292,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131293,"byte_end":131322,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131323,"byte_end":131385,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131386,"byte_end":131393,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131394,"byte_end":131401,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131402,"byte_end":131409,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131410,"byte_end":131413,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131414,"byte_end":131488,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131489,"byte_end":131556,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131557,"byte_end":131560,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131561,"byte_end":131572,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131573,"byte_end":131595,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131596,"byte_end":131660,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131661,"byte_end":131701,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131702,"byte_end":131764,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131765,"byte_end":131793,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131794,"byte_end":131801,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131802,"byte_end":131805,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131806,"byte_end":131835,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131836,"byte_end":131881,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131882,"byte_end":131894,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131895,"byte_end":131902,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131903,"byte_end":131910,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131911,"byte_end":131914,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131915,"byte_end":131938,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131939,"byte_end":131942,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":131943,"byte_end":132033,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132034,"byte_end":132108,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132109,"byte_end":132185,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132186,"byte_end":132260,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132261,"byte_end":132340,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132341,"byte_end":132423,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132424,"byte_end":132445,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132446,"byte_end":132449,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132450,"byte_end":132466,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132467,"byte_end":132470,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132471,"byte_end":132478,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132479,"byte_end":132499,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132500,"byte_end":132503,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132504,"byte_end":132527,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132528,"byte_end":132570,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132571,"byte_end":132633,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132634,"byte_end":132662,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132663,"byte_end":132670,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132671,"byte_end":132674,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132675,"byte_end":132720,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132721,"byte_end":132728,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132729,"byte_end":132736,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132737,"byte_end":132740,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132741,"byte_end":132759,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132760,"byte_end":132763,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132764,"byte_end":132838,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132839,"byte_end":132917,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132918,"byte_end":132994,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":132995,"byte_end":133052,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133053,"byte_end":133131,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133132,"byte_end":133160,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133161,"byte_end":133164,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133165,"byte_end":133176,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133177,"byte_end":133197,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133198,"byte_end":133201,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133202,"byte_end":133240,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133241,"byte_end":133252,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133253,"byte_end":133280,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133281,"byte_end":133299,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133300,"byte_end":133342,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133343,"byte_end":133354,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133355,"byte_end":133358,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133359,"byte_end":133426,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133427,"byte_end":133459,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133460,"byte_end":133496,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133497,"byte_end":133502,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133503,"byte_end":133516,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133517,"byte_end":133524,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133525,"byte_end":133532,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133533,"byte_end":133536,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133537,"byte_end":133567,"line_start":212,"line_end":212,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133568,"byte_end":133571,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133572,"byte_end":133649,"line_start":214,"line_end":214,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133650,"byte_end":133729,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133730,"byte_end":133803,"line_start":216,"line_end":216,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133804,"byte_end":133880,"line_start":217,"line_end":217,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133881,"byte_end":133958,"line_start":218,"line_end":218,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":133959,"byte_end":134035,"line_start":219,"line_end":219,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134036,"byte_end":134101,"line_start":220,"line_end":220,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134102,"byte_end":134105,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134106,"byte_end":134142,"line_start":222,"line_end":222,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134143,"byte_end":134146,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134147,"byte_end":134154,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134155,"byte_end":134199,"line_start":225,"line_end":225,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134200,"byte_end":134256,"line_start":226,"line_end":226,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134257,"byte_end":134306,"line_start":227,"line_end":227,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134307,"byte_end":134312,"line_start":228,"line_end":228,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134313,"byte_end":134320,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134321,"byte_end":134324,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134325,"byte_end":134400,"line_start":231,"line_end":231,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134401,"byte_end":134480,"line_start":232,"line_end":232,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134481,"byte_end":134555,"line_start":233,"line_end":233,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134556,"byte_end":134559,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134560,"byte_end":134639,"line_start":235,"line_end":235,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134640,"byte_end":134712,"line_start":236,"line_end":236,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134713,"byte_end":134716,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134717,"byte_end":134720,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134721,"byte_end":134743,"line_start":239,"line_end":239,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134744,"byte_end":134747,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt out a future of Tokio's cooperative","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134748,"byte_end":134838,"line_start":241,"line_end":241,"column_start":1,"column_end":91}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134839,"byte_end":134937,"line_start":242,"line_end":242,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134938,"byte_end":134961,"line_start":243,"line_end":243,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134962,"byte_end":134965,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134966,"byte_end":134973,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134974,"byte_end":134994,"line_start":246,"line_end":246,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":134995,"byte_end":135018,"line_start":247,"line_end":247,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135019,"byte_end":135053,"line_start":248,"line_end":248,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135054,"byte_end":135057,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135058,"byte_end":135079,"line_start":250,"line_end":250,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135080,"byte_end":135133,"line_start":251,"line_end":251,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135134,"byte_end":135137,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135138,"byte_end":135164,"line_start":253,"line_end":253,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135165,"byte_end":135197,"line_start":254,"line_end":254,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135198,"byte_end":135297,"line_start":255,"line_end":255,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135298,"byte_end":135391,"line_start":256,"line_end":256,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135392,"byte_end":135420,"line_start":257,"line_end":257,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135421,"byte_end":135430,"line_start":258,"line_end":258,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135431,"byte_end":135437,"line_start":259,"line_end":259,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135438,"byte_end":135441,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135442,"byte_end":135477,"line_start":261,"line_end":261,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135478,"byte_end":135485,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135486,"byte_end":135493,"line_start":263,"line_end":263,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135494,"byte_end":135497,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135498,"byte_end":135555,"line_start":265,"line_end":265,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135556,"byte_end":135613,"line_start":266,"line_end":266,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135614,"byte_end":135677,"line_start":267,"line_end":267,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135678,"byte_end":135727,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135728,"byte_end":135777,"line_start":269,"line_end":269,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135778,"byte_end":135835,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/mod.rs","byte_start":135836,"byte_end":135882,"line_start":271,"line_end":271,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":6798},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/blocking.rs","byte_start":11101218,"byte_end":11101232,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/blocking.rs","byte_start":11101192,"byte_end":11101204,"line_start":108,"line_end":108,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":6801},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/spawn.rs","byte_start":11105119,"byte_end":11105124,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/spawn.rs","byte_start":11105093,"byte_end":11105105,"line_start":126,"line_end":126,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":6803},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/yield_now.rs","byte_start":11106098,"byte_end":11106107,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/yield_now.rs","byte_start":11106017,"byte_end":11106080,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6811},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11114213,"byte_end":11114221,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6812},{"krate":0,"index":6813},{"krate":0,"index":6814}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":6820},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11116315,"byte_end":11116326,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11116289,"byte_end":11116301,"line_start":294,"line_end":294,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6662},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117223,"byte_end":11117226,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117178,"byte_end":11117211,"line_start":324,"line_end":324,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6663},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118981,"byte_end":11118992,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117768,"byte_end":11117818,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117823,"byte_end":11117826,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117831,"byte_end":11117891,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117896,"byte_end":11117899,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117904,"byte_end":11117976,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117981,"byte_end":11118051,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118056,"byte_end":11118067,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118072,"byte_end":11118092,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118097,"byte_end":11118100,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118105,"byte_end":11118123,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118128,"byte_end":11118149,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118154,"byte_end":11118196,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118201,"byte_end":11118204,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118209,"byte_end":11118281,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118286,"byte_end":11118339,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118344,"byte_end":11118377,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118382,"byte_end":11118399,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118404,"byte_end":11118415,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118420,"byte_end":11118423,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118428,"byte_end":11118462,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118467,"byte_end":11118503,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118508,"byte_end":11118526,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118531,"byte_end":11118548,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118553,"byte_end":11118556,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118561,"byte_end":11118632,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118637,"byte_end":11118687,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118692,"byte_end":11118725,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118730,"byte_end":11118747,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118752,"byte_end":11118763,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118768,"byte_end":11118771,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118776,"byte_end":11118812,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118817,"byte_end":11118835,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118840,"byte_end":11118857,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118862,"byte_end":11118867,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118872,"byte_end":11118879,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118884,"byte_end":11118919,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11118955,"byte_end":11118967,"line_start":378,"line_end":378,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6665},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121832,"byte_end":11121840,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119377,"byte_end":11119451,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119456,"byte_end":11119515,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119520,"byte_end":11119523,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119528,"byte_end":11119595,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119600,"byte_end":11119673,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119678,"byte_end":11119754,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119759,"byte_end":11119839,"line_start":397,"line_end":397,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119844,"byte_end":11119863,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119868,"byte_end":11119871,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119876,"byte_end":11119942,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119947,"byte_end":11119950,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119955,"byte_end":11119967,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119972,"byte_end":11119975,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11119980,"byte_end":11120052,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120057,"byte_end":11120130,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120135,"byte_end":11120138,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120143,"byte_end":11120154,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120159,"byte_end":11120162,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120167,"byte_end":11120241,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120246,"byte_end":11120321,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120326,"byte_end":11120401,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120406,"byte_end":11120483,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120488,"byte_end":11120491,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120496,"byte_end":11120529,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120534,"byte_end":11120553,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120558,"byte_end":11120590,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120595,"byte_end":11120615,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120620,"byte_end":11120623,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120628,"byte_end":11120666,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120671,"byte_end":11120709,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120714,"byte_end":11120745,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120750,"byte_end":11120794,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120799,"byte_end":11120858,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120863,"byte_end":11120885,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120890,"byte_end":11120905,"line_start":425,"line_end":425,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120910,"byte_end":11120928,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120933,"byte_end":11120944,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120949,"byte_end":11120977,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120982,"byte_end":11120988,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11120993,"byte_end":11121000,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121005,"byte_end":11121039,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121044,"byte_end":11121051,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121056,"byte_end":11121088,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121093,"byte_end":11121113,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121118,"byte_end":11121121,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121126,"byte_end":11121164,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121169,"byte_end":11121207,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121212,"byte_end":11121243,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121248,"byte_end":11121292,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121297,"byte_end":11121356,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121361,"byte_end":11121383,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121388,"byte_end":11121409,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121414,"byte_end":11121432,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121437,"byte_end":11121448,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121453,"byte_end":11121481,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121486,"byte_end":11121492,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121497,"byte_end":11121504,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121509,"byte_end":11121512,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121517,"byte_end":11121552,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121557,"byte_end":11121624,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121629,"byte_end":11121684,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121689,"byte_end":11121743,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121748,"byte_end":11121770,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":6667},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11123087,"byte_end":11123096,"line_start":490,"line_end":490,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11121995,"byte_end":11122065,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122070,"byte_end":11122073,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122078,"byte_end":11122148,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122153,"byte_end":11122229,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122234,"byte_end":11122302,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122307,"byte_end":11122387,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122392,"byte_end":11122464,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122469,"byte_end":11122544,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122549,"byte_end":11122605,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122610,"byte_end":11122613,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122618,"byte_end":11122632,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122637,"byte_end":11122640,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122645,"byte_end":11122656,"line_start":474,"line_end":474,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122661,"byte_end":11122681,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122686,"byte_end":11122689,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122694,"byte_end":11122712,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122717,"byte_end":11122738,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122743,"byte_end":11122790,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122795,"byte_end":11122837,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122842,"byte_end":11122864,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122869,"byte_end":11122899,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122904,"byte_end":11122922,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122927,"byte_end":11122944,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122949,"byte_end":11122954,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122959,"byte_end":11122966,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122971,"byte_end":11122974,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11122979,"byte_end":11123014,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11123019,"byte_end":11123069,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6724},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132093,"byte_end":11132101,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":6726}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131214,"byte_end":11131244,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131245,"byte_end":11131248,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131249,"byte_end":11131303,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131304,"byte_end":11131307,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131308,"byte_end":11131374,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131375,"byte_end":11131442,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131443,"byte_end":11131500,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131501,"byte_end":11131570,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131571,"byte_end":11131574,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131575,"byte_end":11131589,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131590,"byte_end":11131593,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131594,"byte_end":11131601,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131602,"byte_end":11131624,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131625,"byte_end":11131649,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131650,"byte_end":11131677,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131678,"byte_end":11131683,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131684,"byte_end":11131687,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131688,"byte_end":11131720,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131721,"byte_end":11131757,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131758,"byte_end":11131771,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131772,"byte_end":11131775,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131776,"byte_end":11131808,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131809,"byte_end":11131845,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131846,"byte_end":11131849,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131850,"byte_end":11131886,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131887,"byte_end":11131927,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131928,"byte_end":11131945,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131946,"byte_end":11131959,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131960,"byte_end":11131967,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131968,"byte_end":11131975,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11131976,"byte_end":11132035,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6726},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132143,"byte_end":11132148,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":6724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6729},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132676,"byte_end":11132681,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132226,"byte_end":11132290,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132295,"byte_end":11132298,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132303,"byte_end":11132364,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132369,"byte_end":11132372,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132377,"byte_end":11132393,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132398,"byte_end":11132401,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132406,"byte_end":11132413,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132418,"byte_end":11132440,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132445,"byte_end":11132469,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132474,"byte_end":11132501,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132506,"byte_end":11132511,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132516,"byte_end":11132519,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132524,"byte_end":11132556,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132561,"byte_end":11132616,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132621,"byte_end":11132634,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132639,"byte_end":11132646,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132651,"byte_end":11132658,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6733},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133342,"byte_end":11133352,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"sync_scope","qualname":"<LocalKey<T>>::sync_scope","value":"pub fn sync_scope<F, R>(&'static Self, T, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the closure `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the closure `F`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132906,"byte_end":11132971,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132976,"byte_end":11132979,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132984,"byte_end":11133045,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133050,"byte_end":11133053,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133058,"byte_end":11133074,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133079,"byte_end":11133082,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133087,"byte_end":11133094,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133099,"byte_end":11133121,"line_start":137,"line_end":137,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133126,"byte_end":11133150,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133155,"byte_end":11133182,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133187,"byte_end":11133192,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133197,"byte_end":11133200,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ NUMBER.sync_scope(1, || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133205,"byte_end":11133234,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133239,"byte_end":11133294,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133299,"byte_end":11133306,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133311,"byte_end":11133318,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133323,"byte_end":11133330,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6737},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133879,"byte_end":11133883,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133630,"byte_end":11133696,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133701,"byte_end":11133704,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133709,"byte_end":11133721,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133726,"byte_end":11133729,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133734,"byte_end":11133795,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11133800,"byte_end":11133867,"line_start":164,"line_end":164,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6740},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134371,"byte_end":11134379,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134124,"byte_end":11134190,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134195,"byte_end":11134198,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the associated key is not present, this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134203,"byte_end":11134269,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134274,"byte_end":11134339,"line_start":178,"line_end":178,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134344,"byte_end":11134359,"line_start":179,"line_end":179,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6746},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134839,"byte_end":11134842,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134734,"byte_end":11134776,"line_start":195,"line_end":195,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134781,"byte_end":11134827,"line_start":196,"line_end":196,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6823},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136503,"byte_end":11136514,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":6824}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136378,"byte_end":11136453,"line_start":259,"line_end":259,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7671},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11137154,"byte_end":11137167,"line_start":9,"line_end":9,"column_start":16,"column_end":29},"name":"Unconstrained","qualname":"::task::unconstrained::Unconstrained","value":"Unconstrained {  }","parent":null,"children":[{"krate":0,"index":7673}],"decl_id":null,"docs":" Future for the [`unconstrained`](unconstrained) method.\n","sig":null,"attributes":[{"value":"must_use = \"Unconstrained does nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6793},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11138035,"byte_end":11138048,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"unconstrained","qualname":"::task::unconstrained::unconstrained","value":"pub fn unconstrained<F>(F) -> Unconstrained<F>","parent":null,"children":[],"decl_id":null,"docs":" Turn off cooperative scheduling for a future. The future will never be forced to yield by\n Tokio. Using this exposes your service to starvation if the unconstrained future never yields\n otherwise.","sig":null,"attributes":[{"value":"/ Turn off cooperative scheduling for a future. The future will never be forced to yield by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11137738,"byte_end":11137831,"line_start":36,"line_end":36,"column_start":1,"column_end":94}},{"value":"/ Tokio. Using this exposes your service to starvation if the unconstrained future never yields","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11137832,"byte_end":11137929,"line_start":37,"line_end":37,"column_start":1,"column_end":98}},{"value":"/ otherwise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11137930,"byte_end":11137944,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11137945,"byte_end":11137948,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ See also the usage example in the [task module](index.html#unconstrained).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11137949,"byte_end":11138027,"line_start":40,"line_end":40,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":6838},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":6839},{"krate":0,"index":6840},{"krate":0,"index":6841},{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7102},{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7128},{"krate":0,"index":7165},{"krate":0,"index":7166},{"krate":0,"index":7186},{"krate":0,"index":7187},{"krate":0,"index":7188},{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7217},{"krate":0,"index":7218},{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7221}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/cfg.rs","byte_start":24331,"byte_end":24355,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138115,"byte_end":11138147,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138148,"byte_end":11138151,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138152,"byte_end":11138232,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138233,"byte_end":11138245,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138246,"byte_end":11138249,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138250,"byte_end":11138331,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138332,"byte_end":11138346,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138347,"byte_end":11138350,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138351,"byte_end":11138421,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138422,"byte_end":11138502,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138503,"byte_end":11138517,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138518,"byte_end":11138521,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138522,"byte_end":11138601,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138602,"byte_end":11138674,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138675,"byte_end":11138744,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138745,"byte_end":11138748,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138749,"byte_end":11138820,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138821,"byte_end":11138840,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138841,"byte_end":11138844,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138845,"byte_end":11138915,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138916,"byte_end":11138919,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138920,"byte_end":11138934,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138935,"byte_end":11138938,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138939,"byte_end":11138985,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138986,"byte_end":11138989,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138990,"byte_end":11138997,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11138998,"byte_end":11139026,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139027,"byte_end":11139054,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139055,"byte_end":11139058,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139059,"byte_end":11139077,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139078,"byte_end":11139099,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139100,"byte_end":11139148,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139149,"byte_end":11139189,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139190,"byte_end":11139195,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139196,"byte_end":11139203,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139204,"byte_end":11139207,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 1s.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139208,"byte_end":11139260,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139261,"byte_end":11139264,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139265,"byte_end":11139272,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139273,"byte_end":11139314,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139315,"byte_end":11139318,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139319,"byte_end":11139347,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139348,"byte_end":11139371,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139372,"byte_end":11139377,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139378,"byte_end":11139381,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139382,"byte_end":11139404,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139405,"byte_end":11139472,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139473,"byte_end":11139476,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139477,"byte_end":11139498,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139499,"byte_end":11139539,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139540,"byte_end":11139545,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139546,"byte_end":11139553,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139554,"byte_end":11139561,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139562,"byte_end":11139565,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139566,"byte_end":11139642,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139643,"byte_end":11139646,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an [`interval`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139647,"byte_end":11139724,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139725,"byte_end":11139800,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139801,"byte_end":11139877,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139878,"byte_end":11139939,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139940,"byte_end":11139943,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11139944,"byte_end":11140018,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140019,"byte_end":11140089,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140090,"byte_end":11140102,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140103,"byte_end":11140106,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140107,"byte_end":11140114,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140115,"byte_end":11140135,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140136,"byte_end":11140139,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140140,"byte_end":11140181,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140182,"byte_end":11140208,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140209,"byte_end":11140264,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140265,"byte_end":11140270,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140271,"byte_end":11140274,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140275,"byte_end":11140293,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140294,"byte_end":11140315,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140316,"byte_end":11140388,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140389,"byte_end":11140413,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140414,"byte_end":11140448,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140449,"byte_end":11140494,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140495,"byte_end":11140504,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140505,"byte_end":11140510,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140511,"byte_end":11140518,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140519,"byte_end":11140522,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140523,"byte_end":11140558,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140559,"byte_end":11140600,"line_start":85,"line_end":85,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7018},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209239,"byte_end":11209250,"line_start":21,"line_end":21,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11208774,"byte_end":11208812,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11208813,"byte_end":11208816,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11208817,"byte_end":11208897,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11208898,"byte_end":11208975,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11208976,"byte_end":11209011,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209012,"byte_end":11209015,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209016,"byte_end":11209034,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209035,"byte_end":11209038,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209039,"byte_end":11209124,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209125,"byte_end":11209154,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":7019},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210379,"byte_end":11210384,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209317,"byte_end":11209356,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209357,"byte_end":11209360,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209361,"byte_end":11209436,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209437,"byte_end":11209472,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209473,"byte_end":11209476,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209477,"byte_end":11209557,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209558,"byte_end":11209635,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209636,"byte_end":11209671,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209672,"byte_end":11209675,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209676,"byte_end":11209739,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209740,"byte_end":11209743,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209744,"byte_end":11209835,"line_start":36,"line_end":36,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209836,"byte_end":11209839,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209840,"byte_end":11209858,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209859,"byte_end":11209862,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209863,"byte_end":11209948,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209949,"byte_end":11209978,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209979,"byte_end":11209982,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209983,"byte_end":11209997,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11209998,"byte_end":11210001,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210002,"byte_end":11210049,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210050,"byte_end":11210053,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210054,"byte_end":11210061,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210062,"byte_end":11210101,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210102,"byte_end":11210105,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210106,"byte_end":11210124,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210125,"byte_end":11210146,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210147,"byte_end":11210195,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210196,"byte_end":11210236,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210237,"byte_end":11210242,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210243,"byte_end":11210250,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210251,"byte_end":11210254,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11210255,"byte_end":11210296,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7643},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11213532,"byte_end":11213537,"line_start":159,"line_end":159,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":7644},{"krate":0,"index":7645}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7023},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214081,"byte_end":11214089,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214011,"byte_end":11214069,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7024},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214284,"byte_end":11214294,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214143,"byte_end":11214185,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214190,"byte_end":11214193,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214198,"byte_end":11214272,"line_start":187,"line_end":187,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7025},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215293,"byte_end":11215298,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214355,"byte_end":11214405,"line_start":192,"line_end":192,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214410,"byte_end":11214413,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214418,"byte_end":11214492,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214497,"byte_end":11214564,"line_start":195,"line_end":195,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214569,"byte_end":11214572,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214577,"byte_end":11214645,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214650,"byte_end":11214664,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214669,"byte_end":11214672,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214677,"byte_end":11214740,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method without consuming the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214745,"byte_end":11214818,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ `Sleep` itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214823,"byte_end":11214842,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214847,"byte_end":11214850,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214855,"byte_end":11214868,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214873,"byte_end":11214876,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214881,"byte_end":11214888,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214893,"byte_end":11214934,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214939,"byte_end":11214942,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214947,"byte_end":11214994,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11214999,"byte_end":11215022,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215027,"byte_end":11215089,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215094,"byte_end":11215117,"line_start":212,"line_end":212,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215122,"byte_end":11215125,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215130,"byte_end":11215199,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215204,"byte_end":11215211,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215216,"byte_end":11215223,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215228,"byte_end":11215231,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215236,"byte_end":11215281,"line_start":218,"line_end":218,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":7104},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","parent":null,"children":[{"krate":0,"index":7105},{"krate":0,"index":7106},{"krate":0,"index":7107},{"krate":0,"index":7298},{"krate":0,"index":7304},{"krate":0,"index":7303},{"krate":0,"index":7301},{"krate":0,"index":7306},{"krate":0,"index":7325},{"krate":0,"index":7323},{"krate":0,"index":7322},{"krate":0,"index":7319},{"krate":0,"index":7320},{"krate":0,"index":7316},{"krate":0,"index":7317},{"krate":0,"index":7108},{"krate":0,"index":7327},{"krate":0,"index":7334},{"krate":0,"index":7330},{"krate":0,"index":7331},{"krate":0,"index":7336},{"krate":0,"index":7339},{"krate":0,"index":7110},{"krate":0,"index":7117},{"krate":0,"index":7118},{"krate":0,"index":7121},{"krate":0,"index":7123},{"krate":0,"index":7125},{"krate":0,"index":7126}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11216587,"byte_end":11216608,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7298},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217795,"byte_end":11217800,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11216660,"byte_end":11216711,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11216712,"byte_end":11216715,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11216716,"byte_end":11216777,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11216778,"byte_end":11216781,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11216782,"byte_end":11216856,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11216857,"byte_end":11216936,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11216937,"byte_end":11217012,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217013,"byte_end":11217088,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217089,"byte_end":11217117,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217118,"byte_end":11217121,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217122,"byte_end":11217199,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217200,"byte_end":11217287,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217288,"byte_end":11217364,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217365,"byte_end":11217445,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217446,"byte_end":11217523,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217524,"byte_end":11217605,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217606,"byte_end":11217688,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217689,"byte_end":11217692,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217693,"byte_end":11217753,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7327},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218104,"byte_end":11218111,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218032,"byte_end":11218064,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7111},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218288,"byte_end":11218296,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218225,"byte_end":11218276,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7112},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218428,"byte_end":11218439,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218345,"byte_end":11218416,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7113},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218575,"byte_end":11218586,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218509,"byte_end":11218563,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7114},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218723,"byte_end":11218737,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218637,"byte_end":11218711,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7115},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218876,"byte_end":11218883,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218809,"byte_end":11218864,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7116},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219019,"byte_end":11219029,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218931,"byte_end":11219007,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7341},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221407,"byte_end":11221414,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7342}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220116,"byte_end":11220173,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220174,"byte_end":11220217,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220218,"byte_end":11220221,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220222,"byte_end":11220299,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220300,"byte_end":11220374,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220375,"byte_end":11220428,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220429,"byte_end":11220432,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220433,"byte_end":11220511,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220512,"byte_end":11220589,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220590,"byte_end":11220666,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220667,"byte_end":11220741,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220742,"byte_end":11220756,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220757,"byte_end":11220760,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220761,"byte_end":11220841,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220842,"byte_end":11220920,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220921,"byte_end":11220993,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11220994,"byte_end":11221008,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221009,"byte_end":11221012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221013,"byte_end":11221091,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221092,"byte_end":11221103,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221104,"byte_end":11221107,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221108,"byte_end":11221118,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221119,"byte_end":11221122,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221123,"byte_end":11221197,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221198,"byte_end":11221273,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221274,"byte_end":11221334,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7133},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221661,"byte_end":11221664,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221468,"byte_end":11221514,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221519,"byte_end":11221522,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221527,"byte_end":11221541,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221546,"byte_end":11221549,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221554,"byte_end":11221561,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221566,"byte_end":11221595,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221600,"byte_end":11221603,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221608,"byte_end":11221637,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221642,"byte_end":11221649,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7134},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221790,"byte_end":11221798,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221714,"byte_end":11221778,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7136},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222281,"byte_end":11222289,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222219,"byte_end":11222269,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7137},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222533,"byte_end":11222547,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222348,"byte_end":11222420,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222425,"byte_end":11222428,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222433,"byte_end":11222445,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222450,"byte_end":11222453,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222458,"byte_end":11222521,"line_start":74,"line_end":74,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7138},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223230,"byte_end":11223252,"line_start":96,"line_end":96,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222643,"byte_end":11222718,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222723,"byte_end":11222771,"line_start":80,"line_end":80,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222776,"byte_end":11222779,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222784,"byte_end":11222798,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222803,"byte_end":11222806,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222811,"byte_end":11222818,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222823,"byte_end":11222871,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222876,"byte_end":11222879,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222884,"byte_end":11222902,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222907,"byte_end":11222928,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222933,"byte_end":11222966,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11222971,"byte_end":11223012,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223017,"byte_end":11223054,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223059,"byte_end":11223121,"line_start":92,"line_end":92,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223126,"byte_end":11223196,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223201,"byte_end":11223206,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223211,"byte_end":11223218,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7139},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223967,"byte_end":11223992,"line_start":117,"line_end":117,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223364,"byte_end":11223439,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223444,"byte_end":11223503,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223508,"byte_end":11223511,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223516,"byte_end":11223530,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223535,"byte_end":11223538,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223543,"byte_end":11223550,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223555,"byte_end":11223603,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223608,"byte_end":11223611,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223616,"byte_end":11223634,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223639,"byte_end":11223660,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223665,"byte_end":11223698,"line_start":110,"line_end":110,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223703,"byte_end":11223744,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223749,"byte_end":11223786,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223791,"byte_end":11223856,"line_start":113,"line_end":113,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223861,"byte_end":11223933,"line_start":114,"line_end":114,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223938,"byte_end":11223943,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11223948,"byte_end":11223955,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7140},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224755,"byte_end":11224762,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224099,"byte_end":11224169,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224174,"byte_end":11224177,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224182,"byte_end":11224194,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224199,"byte_end":11224202,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224207,"byte_end":11224275,"line_start":125,"line_end":125,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224280,"byte_end":11224346,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224351,"byte_end":11224378,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224383,"byte_end":11224386,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224391,"byte_end":11224405,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224410,"byte_end":11224413,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224418,"byte_end":11224425,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224430,"byte_end":11224478,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224483,"byte_end":11224486,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224491,"byte_end":11224509,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224514,"byte_end":11224535,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224540,"byte_end":11224577,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224582,"byte_end":11224630,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224635,"byte_end":11224667,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224672,"byte_end":11224721,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224726,"byte_end":11224731,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224736,"byte_end":11224743,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7141},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225043,"byte_end":11225054,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224826,"byte_end":11224901,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224906,"byte_end":11224977,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11224982,"byte_end":11225031,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7142},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225393,"byte_end":11225404,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225176,"byte_end":11225251,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225256,"byte_end":11225327,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225332,"byte_end":11225381,"line_start":155,"line_end":155,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7178},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228848,"byte_end":11228856,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227126,"byte_end":11227203,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227204,"byte_end":11227235,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227236,"byte_end":11227239,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227240,"byte_end":11227320,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227321,"byte_end":11227360,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227361,"byte_end":11227364,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227365,"byte_end":11227438,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227439,"byte_end":11227442,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227443,"byte_end":11227455,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227456,"byte_end":11227459,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227460,"byte_end":11227505,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227506,"byte_end":11227509,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227510,"byte_end":11227524,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227525,"byte_end":11227528,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227529,"byte_end":11227536,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227537,"byte_end":11227575,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227576,"byte_end":11227579,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227580,"byte_end":11227598,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227599,"byte_end":11227620,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227621,"byte_end":11227690,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227691,"byte_end":11227694,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227695,"byte_end":11227725,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227726,"byte_end":11227756,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227757,"byte_end":11227787,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227788,"byte_end":11227791,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227792,"byte_end":11227835,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227836,"byte_end":11227841,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227842,"byte_end":11227849,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227850,"byte_end":11227853,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227854,"byte_end":11227928,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227929,"byte_end":11227932,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11227933,"byte_end":11228006,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228007,"byte_end":11228082,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228083,"byte_end":11228159,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228160,"byte_end":11228221,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228222,"byte_end":11228225,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228226,"byte_end":11228300,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228301,"byte_end":11228371,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228372,"byte_end":11228384,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228385,"byte_end":11228388,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228389,"byte_end":11228396,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228397,"byte_end":11228417,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228418,"byte_end":11228421,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228422,"byte_end":11228463,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228464,"byte_end":11228490,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228491,"byte_end":11228546,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228547,"byte_end":11228552,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228553,"byte_end":11228556,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228557,"byte_end":11228575,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228576,"byte_end":11228597,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228598,"byte_end":11228670,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228671,"byte_end":11228695,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228696,"byte_end":11228730,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228731,"byte_end":11228776,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228777,"byte_end":11228786,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228787,"byte_end":11228792,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228793,"byte_end":11228800,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228801,"byte_end":11228804,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11228805,"byte_end":11228840,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":7179},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229745,"byte_end":11229756,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229006,"byte_end":11229079,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229080,"byte_end":11229117,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229118,"byte_end":11229121,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229122,"byte_end":11229202,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229203,"byte_end":11229242,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229243,"byte_end":11229246,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229247,"byte_end":11229259,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229260,"byte_end":11229263,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229264,"byte_end":11229309,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229310,"byte_end":11229313,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229314,"byte_end":11229328,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229329,"byte_end":11229332,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229333,"byte_end":11229340,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229341,"byte_end":11229395,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229396,"byte_end":11229399,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229400,"byte_end":11229418,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229419,"byte_end":11229440,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229441,"byte_end":11229504,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229505,"byte_end":11229578,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229579,"byte_end":11229582,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229583,"byte_end":11229613,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229614,"byte_end":11229644,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229645,"byte_end":11229675,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229676,"byte_end":11229679,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229680,"byte_end":11229723,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229724,"byte_end":11229729,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229730,"byte_end":11229737,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7364},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230511,"byte_end":11230519,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7365},{"krate":0,"index":7366}],"decl_id":null,"docs":" Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11229964,"byte_end":11230045,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230046,"byte_end":11230049,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230050,"byte_end":11230123,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`](crate::time::sleep)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230124,"byte_end":11230203,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ in a loop, this lets you count the time spent between the calls to `sleep`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230204,"byte_end":11230282,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230283,"byte_end":11230295,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230296,"byte_end":11230299,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230300,"byte_end":11230372,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230373,"byte_end":11230376,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230377,"byte_end":11230482,"line_start":118,"line_end":118,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":7181},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231252,"byte_end":11231256,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230730,"byte_end":11230799,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230804,"byte_end":11230807,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230812,"byte_end":11230826,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230831,"byte_end":11230834,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230839,"byte_end":11230846,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230851,"byte_end":11230871,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230876,"byte_end":11230879,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230884,"byte_end":11230912,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230917,"byte_end":11230920,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230925,"byte_end":11230943,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230948,"byte_end":11230969,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230974,"byte_end":11231043,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231048,"byte_end":11231051,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231056,"byte_end":11231086,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231091,"byte_end":11231121,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231126,"byte_end":11231156,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231161,"byte_end":11231164,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231169,"byte_end":11231212,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231217,"byte_end":11231222,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231227,"byte_end":11231234,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7185},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231932,"byte_end":11231941,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231339,"byte_end":11231399,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231404,"byte_end":11231407,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231412,"byte_end":11231460,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231465,"byte_end":11231468,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231473,"byte_end":11231541,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231546,"byte_end":11231613,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231618,"byte_end":11231621,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231626,"byte_end":11231701,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231706,"byte_end":11231781,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231786,"byte_end":11231861,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11231866,"byte_end":11231920,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":7203},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233788,"byte_end":11233795,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11232773,"byte_end":11232850,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11232851,"byte_end":11232854,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11232855,"byte_end":11232934,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11232935,"byte_end":11233007,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233008,"byte_end":11233021,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233022,"byte_end":11233025,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233026,"byte_end":11233043,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233044,"byte_end":11233047,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233048,"byte_end":11233126,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233127,"byte_end":11233157,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233158,"byte_end":11233161,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233162,"byte_end":11233242,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233243,"byte_end":11233270,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233271,"byte_end":11233274,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233275,"byte_end":11233289,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233290,"byte_end":11233293,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233294,"byte_end":11233354,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233355,"byte_end":11233358,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233359,"byte_end":11233370,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233371,"byte_end":11233400,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233401,"byte_end":11233430,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233431,"byte_end":11233434,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233435,"byte_end":11233463,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233464,"byte_end":11233467,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233468,"byte_end":11233490,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233491,"byte_end":11233529,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233530,"byte_end":11233557,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233558,"byte_end":11233561,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233562,"byte_end":11233635,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233636,"byte_end":11233702,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233703,"byte_end":11233758,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233759,"byte_end":11233764,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233765,"byte_end":11233772,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11233773,"byte_end":11233780,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7205},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235134,"byte_end":11235144,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234103,"byte_end":11234175,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234176,"byte_end":11234179,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234180,"byte_end":11234257,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234258,"byte_end":11234313,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234314,"byte_end":11234317,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234318,"byte_end":11234335,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234336,"byte_end":11234339,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234340,"byte_end":11234418,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234419,"byte_end":11234449,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234450,"byte_end":11234453,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234454,"byte_end":11234534,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234535,"byte_end":11234562,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234563,"byte_end":11234566,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234567,"byte_end":11234581,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234582,"byte_end":11234585,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234586,"byte_end":11234646,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234647,"byte_end":11234650,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234651,"byte_end":11234662,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234663,"byte_end":11234706,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234707,"byte_end":11234736,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234737,"byte_end":11234740,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234741,"byte_end":11234769,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234770,"byte_end":11234773,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234774,"byte_end":11234796,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234797,"byte_end":11234835,"line_start":84,"line_end":84,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234836,"byte_end":11234863,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234864,"byte_end":11234867,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234868,"byte_end":11234946,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234947,"byte_end":11234961,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11234962,"byte_end":11235048,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235049,"byte_end":11235104,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235105,"byte_end":11235110,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235111,"byte_end":11235118,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235119,"byte_end":11235126,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7605},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235519,"byte_end":11235526,"line_start":110,"line_end":110,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7607},{"krate":0,"index":7608}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11495084,"byte_end":11495093,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7210},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235822,"byte_end":11235829,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235749,"byte_end":11235810,"line_start":123,"line_end":123,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7211},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235957,"byte_end":11235964,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235876,"byte_end":11235945,"line_start":128,"line_end":128,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7212},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11236093,"byte_end":11236103,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11236023,"byte_end":11236081,"line_start":133,"line_end":133,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":643},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138797,"byte_end":138803,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138706,"byte_end":138735,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138740,"byte_end":138743,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138748,"byte_end":138787,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138833,"byte_end":138839,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138810,"byte_end":138823,"line_start":49,"line_end":49,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":693},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16395,"byte_end":16401,"line_start":443,"line_end":443,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14899,"byte_end":14980,"line_start":406,"line_end":406,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14981,"byte_end":15070,"line_start":407,"line_end":407,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15071,"byte_end":15081,"line_start":408,"line_end":408,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15082,"byte_end":15085,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15086,"byte_end":15135,"line_start":410,"line_end":410,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15136,"byte_end":15139,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15140,"byte_end":15216,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15217,"byte_end":15292,"line_start":413,"line_end":413,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15293,"byte_end":15371,"line_start":414,"line_end":414,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15372,"byte_end":15449,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15450,"byte_end":15529,"line_start":416,"line_end":416,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15530,"byte_end":15612,"line_start":417,"line_end":417,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15613,"byte_end":15648,"line_start":418,"line_end":418,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15649,"byte_end":15652,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15653,"byte_end":15732,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15733,"byte_end":15815,"line_start":421,"line_end":421,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15816,"byte_end":15895,"line_start":422,"line_end":422,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15896,"byte_end":15899,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15900,"byte_end":15950,"line_start":424,"line_end":424,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":15951,"byte_end":16001,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16002,"byte_end":16056,"line_start":426,"line_end":426,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16057,"byte_end":16060,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16061,"byte_end":16074,"line_start":428,"line_end":428,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16075,"byte_end":16078,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16079,"byte_end":16138,"line_start":430,"line_end":430,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16139,"byte_end":16142,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16143,"byte_end":16161,"line_start":432,"line_end":432,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16162,"byte_end":16188,"line_start":433,"line_end":433,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16189,"byte_end":16192,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16193,"byte_end":16243,"line_start":435,"line_end":435,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16244,"byte_end":16247,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16248,"byte_end":16288,"line_start":437,"line_end":437,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16289,"byte_end":16337,"line_start":438,"line_end":438,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16338,"byte_end":16361,"line_start":439,"line_end":439,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16362,"byte_end":16371,"line_start":440,"line_end":440,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16372,"byte_end":16378,"line_start":441,"line_end":441,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":16379,"byte_end":16386,"line_start":442,"line_end":442,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/scoped_tls.rs","byte_start":30770,"byte_end":30779,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/scoped_tls.rs","byte_start":30795,"byte_end":30804,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/scoped_tls.rs","byte_start":31154,"byte_end":31159,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/poll_fn.rs","byte_start":32786,"byte_end":32792,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/poll_fn.rs","byte_start":33006,"byte_end":33012,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/poll_fn.rs","byte_start":33154,"byte_end":33160,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110338,"byte_end":10110343,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110370,"byte_end":10110375,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":46017,"byte_end":46020,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":46180,"byte_end":46183,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":46812,"byte_end":46818,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49885,"byte_end":49888,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":50031,"byte_end":50034,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":50703,"byte_end":50709,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53703,"byte_end":53706,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53849,"byte_end":53852,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":54243,"byte_end":54249,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":63719,"byte_end":63722,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":63870,"byte_end":63873,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":64750,"byte_end":64753,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":65551,"byte_end":65557,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":66360,"byte_end":66366,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":67172,"byte_end":67178,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":67979,"byte_end":67985,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70026,"byte_end":70033,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":79011,"byte_end":79018,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121435,"byte_end":10121443,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10123584,"byte_end":10123592,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10123735,"byte_end":10123743,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10123871,"byte_end":10123879,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124464,"byte_end":10124469,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10128886,"byte_end":10128891,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10129635,"byte_end":10129640,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10129801,"byte_end":10129806,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10129934,"byte_end":10129939,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10130093,"byte_end":10130098,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10130245,"byte_end":10130250,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10132752,"byte_end":10132764,"line_start":52,"line_end":52,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10132789,"byte_end":10132801,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10132845,"byte_end":10132857,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10138285,"byte_end":10138297,"line_start":210,"line_end":210,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10138896,"byte_end":10138908,"line_start":228,"line_end":228,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10142414,"byte_end":10142425,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10142685,"byte_end":10142696,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10142876,"byte_end":10142887,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10151070,"byte_end":10151081,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10151170,"byte_end":10151181,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10151206,"byte_end":10151217,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10151251,"byte_end":10151262,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10152185,"byte_end":10152191,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10152686,"byte_end":10152695,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10157369,"byte_end":10157378,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10157743,"byte_end":10157752,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10157785,"byte_end":10157794,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10114013,"byte_end":10114019,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10116825,"byte_end":10116831,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10116946,"byte_end":10116951,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10117395,"byte_end":10117401,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10117800,"byte_end":10117806,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10117956,"byte_end":10117962,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10118787,"byte_end":10118793,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10119610,"byte_end":10119616,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10119694,"byte_end":10119700,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10119835,"byte_end":10119840,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10120797,"byte_end":10120806,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10161315,"byte_end":10161326,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10164088,"byte_end":10164099,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10165642,"byte_end":10165653,"line_start":195,"line_end":195,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10165796,"byte_end":10165807,"line_start":203,"line_end":203,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10165979,"byte_end":10165990,"line_start":209,"line_end":209,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173203,"byte_end":10173210,"line_start":168,"line_end":168,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1210},{"krate":0,"index":1214},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185178,"byte_end":10185185,"line_start":462,"line_end":462,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185339,"byte_end":10185346,"line_start":468,"line_end":468,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185557,"byte_end":10185564,"line_start":476,"line_end":476,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185664,"byte_end":10185681,"line_start":482,"line_end":482,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188229,"byte_end":10188249,"line_start":545,"line_end":545,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10190759,"byte_end":10190776,"line_start":606,"line_end":606,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191033,"byte_end":10191053,"line_start":614,"line_end":614,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193095,"byte_end":10193103,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194020,"byte_end":10194029,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194279,"byte_end":10194287,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194582,"byte_end":10194591,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10195270,"byte_end":10195275,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10195731,"byte_end":10195736,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10195989,"byte_end":10195994,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196117,"byte_end":10196125,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196162,"byte_end":10196171,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196208,"byte_end":10196216,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196253,"byte_end":10196262,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196305,"byte_end":10196313,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196481,"byte_end":10196490,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/seek.rs","byte_start":10197447,"byte_end":10197451,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_buf_read_ext.rs","byte_start":10209558,"byte_end":10209559,"line_start":259,"line_end":259,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10248886,"byte_end":10248887,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_seek_ext.rs","byte_start":10251352,"byte_end":10251353,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10287947,"byte_end":10287948,"line_start":1047,"line_end":1047,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289316,"byte_end":10289325,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10291182,"byte_end":10291191,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10292001,"byte_end":10292010,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10292923,"byte_end":10292932,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10293443,"byte_end":10293452,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10294941,"byte_end":10294950,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296787,"byte_end":10296796,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296938,"byte_end":10296947,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10297659,"byte_end":10297668,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10298198,"byte_end":10298207,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10298462,"byte_end":10298471,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10300407,"byte_end":10300416,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302694,"byte_end":10302703,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10303593,"byte_end":10303602,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10303856,"byte_end":10303865,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10304152,"byte_end":10304161,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305339,"byte_end":10305344,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306484,"byte_end":10306489,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306768,"byte_end":10306773,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10307359,"byte_end":10307364,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy.rs","byte_start":10308491,"byte_end":10308501,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy.rs","byte_start":10312098,"byte_end":10312102,"line_start":136,"line_end":136,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10313682,"byte_end":10313699,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_buf.rs","byte_start":10318134,"byte_end":10318141,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/empty.rs","byte_start":10320408,"byte_end":10320413,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/empty.rs","byte_start":10320627,"byte_end":10320632,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/empty.rs","byte_start":10320865,"byte_end":10320870,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/flush.rs","byte_start":10321997,"byte_end":10322002,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323333,"byte_end":10323338,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324590,"byte_end":10324595,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10328873,"byte_end":10328885,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10329429,"byte_end":10329441,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10330139,"byte_end":10330151,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10330302,"byte_end":10330306,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1832},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10330712,"byte_end":10330716,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10331582,"byte_end":10331586,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read.rs","byte_start":10333767,"byte_end":10333771,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_buf.rs","byte_start":10334905,"byte_end":10334912,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_exact.rs","byte_start":10337293,"byte_end":10337302,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_line.rs","byte_start":10346392,"byte_end":10346400,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_to_end.rs","byte_start":10350053,"byte_end":10350062,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10350457,"byte_end":10350460,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10350749,"byte_end":10350752,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10351452,"byte_end":10351470,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10351650,"byte_end":10351668,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_to_string.rs","byte_start":10357038,"byte_end":10357050,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_until.rs","byte_start":10359354,"byte_end":10359363,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/repeat.rs","byte_start":10360941,"byte_end":10360947,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/shutdown.rs","byte_start":10362326,"byte_end":10362334,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/sink.rs","byte_start":10363974,"byte_end":10363978,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/sink.rs","byte_start":10364488,"byte_end":10364492,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365649,"byte_end":10365654,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366393,"byte_end":10366398,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368711,"byte_end":10368715,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370343,"byte_end":10370347,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370991,"byte_end":10370995,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write.rs","byte_start":10372794,"byte_end":10372799,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2160},{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_vectored.rs","byte_start":10373964,"byte_end":10373977,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2180},{"krate":0,"index":2181}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_all.rs","byte_start":10375026,"byte_end":10375034,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_buf.rs","byte_start":10376519,"byte_end":10376527,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82086,"byte_end":82096,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82136,"byte_end":82146,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82448,"byte_end":82460,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82500,"byte_end":82512,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82809,"byte_end":82821,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82861,"byte_end":82873,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":87204,"byte_end":87210,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":87254,"byte_end":87260,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88813,"byte_end":88823,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":89462,"byte_end":89471,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384392,"byte_end":10384403,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2794},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394178,"byte_end":10394189,"line_start":350,"line_end":350,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2817},{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394515,"byte_end":10394526,"line_start":362,"line_end":362,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394732,"byte_end":10394743,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398266,"byte_end":10398275,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2854}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410915,"byte_end":10410924,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10411059,"byte_end":10411068,"line_start":494,"line_end":494,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10411178,"byte_end":10411187,"line_start":501,"line_end":501,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10411542,"byte_end":10411551,"line_start":515,"line_end":515,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414013,"byte_end":10414021,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416824,"byte_end":10416832,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10417048,"byte_end":10417057,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10417974,"byte_end":10417982,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10418076,"byte_end":10418085,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10420971,"byte_end":10420983,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2918}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421186,"byte_end":10421198,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421208,"byte_end":10421221,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424403,"byte_end":10424416,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424617,"byte_end":10424631,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2930},{"krate":0,"index":2931}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10425314,"byte_end":10425328,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10425492,"byte_end":10425506,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10426553,"byte_end":10426566,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10426662,"byte_end":10426676,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429206,"byte_end":10429215,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2980},{"krate":0,"index":2985},{"krate":0,"index":2988},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3006},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3226},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3019},{"krate":0,"index":3022},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10462737,"byte_end":10462746,"line_start":1041,"line_end":1041,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3044},{"krate":0,"index":3045}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10463104,"byte_end":10463113,"line_start":1055,"line_end":1055,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3047}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10463323,"byte_end":10463332,"line_start":1065,"line_end":1065,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10464158,"byte_end":10464167,"line_start":1098,"line_end":1098,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10464371,"byte_end":10464380,"line_start":1109,"line_end":1109,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469539,"byte_end":10469548,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3106},{"krate":0,"index":3109},{"krate":0,"index":3112},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3123},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3234},{"krate":0,"index":3237},{"krate":0,"index":3130},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3142},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3149},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513623,"byte_end":10513632,"line_start":1397,"line_end":1397,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3170},{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513957,"byte_end":10513966,"line_start":1409,"line_end":1409,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10514175,"byte_end":10514184,"line_start":1420,"line_end":1420,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518024,"byte_end":10518036,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3286},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3295},{"krate":0,"index":3299},{"krate":0,"index":3582},{"krate":0,"index":3585},{"krate":0,"index":3301},{"krate":0,"index":3306},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3314},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556269,"byte_end":10556281,"line_start":1252,"line_end":1252,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3324},{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556625,"byte_end":10556637,"line_start":1264,"line_end":1264,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556752,"byte_end":10556764,"line_start":1270,"line_end":1270,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558517,"byte_end":10558529,"line_start":52,"line_end":52,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10562721,"byte_end":10562733,"line_start":157,"line_end":157,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3365},{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10563068,"byte_end":10563080,"line_start":169,"line_end":169,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10563195,"byte_end":10563207,"line_start":175,"line_end":175,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564988,"byte_end":10564996,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3385}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10565212,"byte_end":10565221,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10566007,"byte_end":10566015,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3393}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10566111,"byte_end":10566120,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569035,"byte_end":10569047,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3418}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569250,"byte_end":10569262,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569272,"byte_end":10569285,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569701,"byte_end":10569714,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569915,"byte_end":10569929,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3426}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570627,"byte_end":10570641,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3428}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570805,"byte_end":10570819,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10571863,"byte_end":10571876,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10571974,"byte_end":10571988,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572209,"byte_end":10572219,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3450},{"krate":0,"index":3451}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572771,"byte_end":10572781,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574263,"byte_end":10574273,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3500},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3625},{"krate":0,"index":3510},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3530}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596485,"byte_end":10596495,"line_start":633,"line_end":633,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3532},{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596808,"byte_end":10596818,"line_start":645,"line_end":645,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10597028,"byte_end":10597038,"line_start":655,"line_end":655,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10597803,"byte_end":10597813,"line_start":686,"line_end":686,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10599076,"byte_end":10599086,"line_start":724,"line_end":724,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10599201,"byte_end":10599211,"line_start":730,"line_end":730,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3549}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599598,"byte_end":10599603,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_ptr.rs","byte_start":93225,"byte_end":93234,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_ptr.rs","byte_start":93408,"byte_end":93417,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_ptr.rs","byte_start":93564,"byte_end":93573,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_ptr.rs","byte_start":93686,"byte_end":93695,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94039,"byte_end":94048,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94073,"byte_end":94082,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94092,"byte_end":94101,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94593,"byte_end":94602,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94887,"byte_end":94896,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95237,"byte_end":95246,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95271,"byte_end":95280,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95290,"byte_end":95299,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95484,"byte_end":95493,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95778,"byte_end":95787,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98298,"byte_end":98306,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98331,"byte_end":98339,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98349,"byte_end":98357,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98538,"byte_end":98546,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98830,"byte_end":98838,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":99178,"byte_end":99189,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":99214,"byte_end":99225,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":99235,"byte_end":99246,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":99935,"byte_end":99946,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":100236,"byte_end":100247,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":100411,"byte_end":100422,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/mutex.rs","byte_start":100753,"byte_end":100758,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/unsafe_cell.rs","byte_start":101436,"byte_end":101446,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/either.rs","byte_start":10605511,"byte_end":10605517,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/either.rs","byte_start":10606474,"byte_end":10606480,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3689}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/either.rs","byte_start":10606694,"byte_end":10606700,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":106638,"byte_end":106648,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":106913,"byte_end":106923,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":107449,"byte_end":107454,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":112219,"byte_end":112229,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":112338,"byte_end":112350,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":112705,"byte_end":112721,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":113984,"byte_end":114000,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":114595,"byte_end":114607,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":114787,"byte_end":114792,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":105685,"byte_end":105688,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":105777,"byte_end":105780,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10627193,"byte_end":10627205,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3728}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10630151,"byte_end":10630172,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4243}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10630888,"byte_end":10630893,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4249}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10632533,"byte_end":10632538,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10632668,"byte_end":10632673,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10640495,"byte_end":10640501,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10640526,"byte_end":10640532,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10640891,"byte_end":10640895,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3795}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10641782,"byte_end":10641791,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3798},{"krate":0,"index":3801},{"krate":0,"index":3803},{"krate":0,"index":3805},{"krate":0,"index":3807},{"krate":0,"index":3809}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10644945,"byte_end":10644954,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3814},{"krate":0,"index":3817},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3824}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10647992,"byte_end":10647999,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3831}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10648930,"byte_end":10648939,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651665,"byte_end":10651674,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3854}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651917,"byte_end":10651926,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3856}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10652203,"byte_end":10652212,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10652246,"byte_end":10652251,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/harness.rs","byte_start":10653004,"byte_end":10653011,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/harness.rs","byte_start":10653666,"byte_end":10653673,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/harness.rs","byte_start":10659046,"byte_end":10659059,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3926}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/harness.rs","byte_start":10666040,"byte_end":10666045,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671518,"byte_end":10671528,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671565,"byte_end":10671575,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671591,"byte_end":10671601,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3973},{"krate":0,"index":3974}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672836,"byte_end":10672846,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672873,"byte_end":10672883,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3979},{"krate":0,"index":3980}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10674109,"byte_end":10674119,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10674385,"byte_end":10674395,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/raw.rs","byte_start":10675642,"byte_end":10675649,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/raw.rs","byte_start":10677180,"byte_end":10677187,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4023}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/raw.rs","byte_start":10677277,"byte_end":10677284,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/state.rs","byte_start":10679966,"byte_end":10679971,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4065},{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4069},{"krate":0,"index":4071},{"krate":0,"index":4073},{"krate":0,"index":4075},{"krate":0,"index":4076},{"krate":0,"index":4078},{"krate":0,"index":4082},{"krate":0,"index":4084},{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4091},{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/state.rs","byte_start":10688827,"byte_end":10688835,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4112},{"krate":0,"index":4113}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/state.rs","byte_start":10690712,"byte_end":10690717,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4115}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/state.rs","byte_start":10690876,"byte_end":10690884,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4117}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/waker.rs","byte_start":10692702,"byte_end":10692710,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4143},{"krate":0,"index":4144}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10633668,"byte_end":10633672,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10633703,"byte_end":10633707,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10633844,"byte_end":10633852,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10633893,"byte_end":10633901,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10635888,"byte_end":10635892,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4192},{"krate":0,"index":4193}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10636788,"byte_end":10636792,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4196}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10636961,"byte_end":10636969,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4199},{"krate":0,"index":4200}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10637255,"byte_end":10637259,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10637499,"byte_end":10637503,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10637655,"byte_end":10637663,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4209}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10637879,"byte_end":10637883,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10696419,"byte_end":10696424,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10697247,"byte_end":10697261,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4348}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10699546,"byte_end":10699551,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10703831,"byte_end":10703836,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4369}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10704529,"byte_end":10704543,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10706093,"byte_end":10706107,"line_start":372,"line_end":372,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4377}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10706273,"byte_end":10706280,"line_start":380,"line_end":380,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4379},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10706947,"byte_end":10706954,"line_start":407,"line_end":407,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4385}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10707122,"byte_end":10707125,"line_start":415,"line_end":415,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4387},{"krate":0,"index":4389},{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10708535,"byte_end":10708541,"line_start":455,"line_end":455,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4394},{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10709048,"byte_end":10709058,"line_start":477,"line_end":477,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10709333,"byte_end":10709343,"line_start":485,"line_end":485,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4407}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10713826,"byte_end":10713838,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10716413,"byte_end":10716425,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4471}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10716511,"byte_end":10716523,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4473}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10716684,"byte_end":10716691,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4475},{"krate":0,"index":4476}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10719123,"byte_end":10719128,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4479}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10722367,"byte_end":10722374,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4481}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/schedule.rs","byte_start":10722877,"byte_end":10722889,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/shutdown.rs","byte_start":10723762,"byte_end":10723770,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/task.rs","byte_start":10725519,"byte_end":10725531,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4515}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/task.rs","byte_start":10725757,"byte_end":10725769,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/task.rs","byte_start":10725799,"byte_end":10725811,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4521},{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729005,"byte_end":10729012,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4558},{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4564},{"krate":0,"index":4566},{"krate":0,"index":4567},{"krate":0,"index":4569},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10740642,"byte_end":10740649,"line_start":467,"line_end":467,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4685}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10741211,"byte_end":10741218,"line_start":491,"line_end":491,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4687}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10743906,"byte_end":10743913,"line_start":579,"line_end":579,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4579}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/context.rs","byte_start":10746305,"byte_end":10746315,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4591}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/driver.rs","byte_start":10750857,"byte_end":10750863,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4610}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/driver.rs","byte_start":10751447,"byte_end":10751453,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4615},{"krate":0,"index":4616},{"krate":0,"index":4617}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753260,"byte_end":10753266,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4635},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4640},{"krate":0,"index":4643},{"krate":0,"index":4645}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10762019,"byte_end":10762034,"line_start":297,"line_end":297,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10762182,"byte_end":10762197,"line_start":303,"line_end":303,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4652}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10762337,"byte_end":10762352,"line_start":309,"line_end":309,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/spawner.rs","byte_start":10762737,"byte_end":10762744,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4659}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/spawner.rs","byte_start":10762986,"byte_end":10762993,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10616753,"byte_end":10616760,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4764},{"krate":0,"index":4767},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":118445,"byte_end":118451,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":120098,"byte_end":120108,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":121079,"byte_end":121095,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":121227,"byte_end":121243,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":122983,"byte_end":122989,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4812},{"krate":0,"index":4813}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781431,"byte_end":10781438,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4819},{"krate":0,"index":4820}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784717,"byte_end":10784734,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792173,"byte_end":10792182,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792358,"byte_end":10792367,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793015,"byte_end":10793024,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4865}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793329,"byte_end":10793338,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794261,"byte_end":10794273,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794651,"byte_end":10794663,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796626,"byte_end":10796630,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796675,"byte_end":10796679,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799453,"byte_end":10799459,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799496,"byte_end":10799502,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799540,"byte_end":10799548,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799585,"byte_end":10799593,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799609,"byte_end":10799615,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4921},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10805225,"byte_end":10805229,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10805621,"byte_end":10805627,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4934}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10805807,"byte_end":10805813,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4937}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10805967,"byte_end":10805975,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4940}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10810838,"byte_end":10810846,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4944},{"krate":0,"index":4947}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10815022,"byte_end":10815030,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4950}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10815656,"byte_end":10815660,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4954},{"krate":0,"index":4955}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10816439,"byte_end":10816443,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4959},{"krate":0,"index":4960}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10817104,"byte_end":10817108,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4964}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10817856,"byte_end":10817862,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4968},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10818277,"byte_end":10818283,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10818427,"byte_end":10818435,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4978}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10818570,"byte_end":10818579,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10818752,"byte_end":10818761,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4987}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/block.rs","byte_start":10825643,"byte_end":10825648,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5046},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5055}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/block.rs","byte_start":10835747,"byte_end":10835753,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5061}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/block.rs","byte_start":10836235,"byte_end":10836241,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5064},{"krate":0,"index":5065}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839706,"byte_end":10839714,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5093},{"krate":0,"index":5094},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5101}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845993,"byte_end":10846001,"line_start":287,"line_end":287,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5104}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846197,"byte_end":10846205,"line_start":295,"line_end":295,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846221,"byte_end":10846227,"line_start":297,"line_end":297,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5113},{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860635,"byte_end":10860641,"line_start":737,"line_end":737,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860773,"byte_end":10860779,"line_start":745,"line_end":745,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5133}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860991,"byte_end":10860997,"line_start":755,"line_end":755,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10862247,"byte_end":10862253,"line_start":798,"line_end":798,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5140}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10862580,"byte_end":10862586,"line_start":813,"line_end":813,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5144}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10863247,"byte_end":10863249,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5175}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10863542,"byte_end":10863544,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5183}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10864481,"byte_end":10864485,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5201}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10865118,"byte_end":10865126,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5208}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10865392,"byte_end":10865396,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10865445,"byte_end":10865449,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10865956,"byte_end":10865958,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10866568,"byte_end":10866570,"line_start":149,"line_end":149,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5229},{"krate":0,"index":5230}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10867120,"byte_end":10867122,"line_start":167,"line_end":167,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10867461,"byte_end":10867463,"line_start":179,"line_end":179,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5240}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10867786,"byte_end":10867788,"line_start":195,"line_end":195,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5244},{"krate":0,"index":5245},{"krate":0,"index":5247}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10870343,"byte_end":10870345,"line_start":268,"line_end":268,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10870757,"byte_end":10870761,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10870946,"byte_end":10870950,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5264}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10871951,"byte_end":10871962,"line_start":336,"line_end":336,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/list.rs","byte_start":10873703,"byte_end":10873705,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5313}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/list.rs","byte_start":10879418,"byte_end":10879420,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/list.rs","byte_start":10879697,"byte_end":10879699,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/list.rs","byte_start":10883098,"byte_end":10883100,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5325}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883758,"byte_end":10883773,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5339}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883914,"byte_end":10883929,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5342}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884602,"byte_end":10884619,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5348}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885618,"byte_end":10885635,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5354},{"krate":0,"index":5355},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888933,"byte_end":10888948,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5365},{"krate":0,"index":5366},{"krate":0,"index":5367},{"krate":0,"index":5372},{"krate":0,"index":5375},{"krate":0,"index":5376}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893126,"byte_end":10893135,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5386}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893295,"byte_end":10893304,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893790,"byte_end":10893802,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893835,"byte_end":10893847,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5393}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894187,"byte_end":10894199,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5396}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894428,"byte_end":10894437,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5398}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894567,"byte_end":10894576,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10895080,"byte_end":10895096,"line_start":83,"line_end":83,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10895133,"byte_end":10895149,"line_start":85,"line_end":85,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902002,"byte_end":10902007,"line_start":166,"line_end":166,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902061,"byte_end":10902066,"line_start":167,"line_end":167,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902120,"byte_end":10902130,"line_start":168,"line_end":168,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902195,"byte_end":10902210,"line_start":169,"line_end":169,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902889,"byte_end":10902901,"line_start":188,"line_end":188,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5430}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903038,"byte_end":10903050,"line_start":194,"line_end":194,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903858,"byte_end":10903863,"line_start":220,"line_end":220,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5438},{"krate":0,"index":5441},{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5447},{"krate":0,"index":5448}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909616,"byte_end":10909621,"line_start":423,"line_end":423,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5451}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909705,"byte_end":10909710,"line_start":429,"line_end":429,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5454}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909834,"byte_end":10909839,"line_start":438,"line_end":438,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910234,"byte_end":10910244,"line_start":454,"line_end":454,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910345,"byte_end":10910355,"line_start":460,"line_end":460,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5463},{"krate":0,"index":5464}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910502,"byte_end":10910512,"line_start":467,"line_end":467,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5467}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910669,"byte_end":10910679,"line_start":473,"line_end":473,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5470}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910845,"byte_end":10910855,"line_start":479,"line_end":479,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911033,"byte_end":10911048,"line_start":487,"line_end":487,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5476}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911145,"byte_end":10911160,"line_start":493,"line_end":493,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5480}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911303,"byte_end":10911318,"line_start":500,"line_end":500,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5483}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911471,"byte_end":10911486,"line_start":506,"line_end":506,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5486}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911648,"byte_end":10911663,"line_start":512,"line_end":512,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10916526,"byte_end":10916534,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10916567,"byte_end":10916575,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917405,"byte_end":10917411,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5527},{"krate":0,"index":5528},{"krate":0,"index":5529},{"krate":0,"index":5530}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10926069,"byte_end":10926075,"line_start":457,"line_end":457,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5534}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10927985,"byte_end":10927993,"line_start":512,"line_end":512,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5537}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10928506,"byte_end":10928514,"line_start":528,"line_end":528,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5539},{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10934210,"byte_end":10934218,"line_start":670,"line_end":670,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5543}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10936081,"byte_end":10936087,"line_start":716,"line_end":716,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5546},{"krate":0,"index":5547},{"krate":0,"index":5548},{"krate":0,"index":5549},{"krate":0,"index":5550}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940240,"byte_end":10940249,"line_start":149,"line_end":149,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5576}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940411,"byte_end":10940420,"line_start":155,"line_end":155,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940489,"byte_end":10940501,"line_start":159,"line_end":159,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5579}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940800,"byte_end":10940812,"line_start":168,"line_end":168,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10941306,"byte_end":10941310,"line_start":190,"line_end":190,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5592},{"krate":0,"index":5594},{"krate":0,"index":5598},{"krate":0,"index":5600}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943346,"byte_end":10943352,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5613},{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10950979,"byte_end":10950985,"line_start":522,"line_end":522,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5617}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951124,"byte_end":10951132,"line_start":530,"line_end":530,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5620},{"krate":0,"index":5621}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10955639,"byte_end":10955647,"line_start":683,"line_end":683,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5624}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10955794,"byte_end":10955802,"line_start":691,"line_end":691,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5627},{"krate":0,"index":5628}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10956265,"byte_end":10956270,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5634}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10959376,"byte_end":10959381,"line_start":805,"line_end":805,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10959418,"byte_end":10959423,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10959524,"byte_end":10959529,"line_start":812,"line_end":812,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5644}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10959906,"byte_end":10959911,"line_start":830,"line_end":830,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5647}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10960306,"byte_end":10960311,"line_start":845,"line_end":845,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5654},{"krate":0,"index":5655},{"krate":0,"index":5656},{"krate":0,"index":5657},{"krate":0,"index":5658},{"krate":0,"index":5659},{"krate":0,"index":5660},{"krate":0,"index":5661},{"krate":0,"index":5662},{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5665},{"krate":0,"index":5666}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10962024,"byte_end":10962029,"line_start":911,"line_end":911,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5668}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10966088,"byte_end":10966097,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5709},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5724}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10977177,"byte_end":10977186,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5728}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10977385,"byte_end":10977391,"line_start":406,"line_end":406,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5730},{"krate":0,"index":5731}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10978257,"byte_end":10978264,"line_start":435,"line_end":435,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5733},{"krate":0,"index":5734}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10978942,"byte_end":10978949,"line_start":459,"line_end":459,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5737},{"krate":0,"index":5738}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10979748,"byte_end":10979755,"line_start":489,"line_end":489,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5742}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981005,"byte_end":10981012,"line_start":519,"line_end":519,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981059,"byte_end":10981071,"line_start":523,"line_end":523,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5745}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981164,"byte_end":10981176,"line_start":529,"line_end":529,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5747}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981320,"byte_end":10981332,"line_start":535,"line_end":535,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981379,"byte_end":10981394,"line_start":539,"line_end":539,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5750},{"krate":0,"index":5751}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981912,"byte_end":10981927,"line_start":554,"line_end":554,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5753}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10982213,"byte_end":10982228,"line_start":563,"line_end":563,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10982321,"byte_end":10982327,"line_start":568,"line_end":568,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10985619,"byte_end":10985628,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773},{"krate":0,"index":5774},{"krate":0,"index":5777},{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5782},{"krate":0,"index":5785},{"krate":0,"index":5788},{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993832,"byte_end":10993847,"line_start":297,"line_end":297,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5794}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994092,"byte_end":10994112,"line_start":306,"line_end":306,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5796}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994366,"byte_end":10994381,"line_start":315,"line_end":315,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5799}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994489,"byte_end":10994509,"line_start":321,"line_end":321,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5801}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019099,"byte_end":11019119,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5833},{"krate":0,"index":5836}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11022191,"byte_end":11022211,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5842},{"krate":0,"index":5843}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11022352,"byte_end":11022372,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5847}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11022558,"byte_end":11022578,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5851}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11022760,"byte_end":11022780,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5855}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023801,"byte_end":11023822,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5875},{"krate":0,"index":5878},{"krate":0,"index":5881},{"krate":0,"index":5883}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11029493,"byte_end":11029514,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5886},{"krate":0,"index":5887}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11029644,"byte_end":11029665,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5890}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11029786,"byte_end":11029807,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5893}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11029979,"byte_end":11030000,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5896}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11030168,"byte_end":11030189,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5899}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031292,"byte_end":11031319,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5922}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034866,"byte_end":11034893,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5928},{"krate":0,"index":5929}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11035037,"byte_end":11035064,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5933}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11035199,"byte_end":11035226,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5937}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11035412,"byte_end":11035439,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5941}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11035621,"byte_end":11035648,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5945}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036350,"byte_end":11036365,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5961},{"krate":0,"index":5964}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039779,"byte_end":11039794,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5969},{"krate":0,"index":5970}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039929,"byte_end":11039944,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5974}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11040124,"byte_end":11040139,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5978}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11040315,"byte_end":11040330,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5982}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041115,"byte_end":11041131,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6001},{"krate":0,"index":6004},{"krate":0,"index":6007},{"krate":0,"index":6009}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047129,"byte_end":11047145,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6012},{"krate":0,"index":6013}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047279,"byte_end":11047295,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6016}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047424,"byte_end":11047440,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6020}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047620,"byte_end":11047636,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6024}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047812,"byte_end":11047828,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6028}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048687,"byte_end":11048709,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6045},{"krate":0,"index":6048}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11052549,"byte_end":11052571,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6053},{"krate":0,"index":6054}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11052705,"byte_end":11052727,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6057}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11052856,"byte_end":11052878,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6061}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11053058,"byte_end":11053080,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6065}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11053256,"byte_end":11053278,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6069}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10999956,"byte_end":10999962,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000016,"byte_end":11000022,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000256,"byte_end":11000271,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000329,"byte_end":11000344,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000551,"byte_end":11000571,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000666,"byte_end":11000686,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000785,"byte_end":11000801,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000866,"byte_end":11000887,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000948,"byte_end":11000970,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001038,"byte_end":11001065,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001412,"byte_end":11001428,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001493,"byte_end":11001514,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001575,"byte_end":11001597,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001665,"byte_end":11001692,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001784,"byte_end":11001790,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6111},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6117},{"krate":0,"index":6121},{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6127},{"krate":0,"index":6131},{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11018165,"byte_end":11018171,"line_start":690,"line_end":690,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6137}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11018263,"byte_end":11018269,"line_start":696,"line_end":696,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6140}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11059557,"byte_end":11059568,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6174},{"krate":0,"index":6175}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065590,"byte_end":11065601,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6178}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065687,"byte_end":11065698,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6180}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065831,"byte_end":11065842,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065867,"byte_end":11065878,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065974,"byte_end":11065979,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6187},{"krate":0,"index":6188}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067267,"byte_end":11067275,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6213}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067383,"byte_end":11067391,"line_start":47,"line_end":47,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6216}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067596,"byte_end":11067604,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6219}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067737,"byte_end":11067745,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6222}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067861,"byte_end":11067869,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067894,"byte_end":11067902,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6227}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068138,"byte_end":11068146,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6234},{"krate":0,"index":6236},{"krate":0,"index":6238},{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6242},{"krate":0,"index":6243},{"krate":0,"index":6248},{"krate":0,"index":6254},{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11079839,"byte_end":11079847,"line_start":349,"line_end":349,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080064,"byte_end":11080072,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080684,"byte_end":11080692,"line_start":373,"line_end":373,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6263}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080999,"byte_end":11081007,"line_start":382,"line_end":382,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11081023,"byte_end":11081031,"line_start":384,"line_end":384,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6269}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085616,"byte_end":11085625,"line_start":132,"line_end":132,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6288}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085805,"byte_end":11085814,"line_start":138,"line_end":138,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086007,"byte_end":11086016,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6292}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086178,"byte_end":11086187,"line_start":152,"line_end":152,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087393,"byte_end":11087401,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11090396,"byte_end":11090404,"line_start":303,"line_end":303,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6308}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11090588,"byte_end":11090596,"line_start":312,"line_end":312,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6311}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11090966,"byte_end":11090972,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6314},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6317}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093809,"byte_end":11093815,"line_start":422,"line_end":422,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6322}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11094005,"byte_end":11094008,"line_start":431,"line_end":431,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6325},{"krate":0,"index":6326}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/yield_now.rs","byte_start":11106233,"byte_end":11106241,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6809},{"krate":0,"index":6810}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117163,"byte_end":11117171,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6662},{"krate":0,"index":6663},{"krate":0,"index":6665},{"krate":0,"index":6667},{"krate":0,"index":6671},{"krate":0,"index":6673},{"krate":0,"index":6676}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11125164,"byte_end":11125172,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6680}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11125311,"byte_end":11125319,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6682},{"krate":0,"index":6683}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11126284,"byte_end":11126292,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6686}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11126373,"byte_end":11126381,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6688}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11127248,"byte_end":11127256,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6692},{"krate":0,"index":6693}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11128141,"byte_end":11128147,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6697},{"krate":0,"index":6699}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11128698,"byte_end":11128701,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6701},{"krate":0,"index":6703},{"krate":0,"index":6706}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132208,"byte_end":11132216,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6729},{"krate":0,"index":6733},{"krate":0,"index":6737},{"krate":0,"index":6740}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134716,"byte_end":11134724,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6746}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134932,"byte_end":11134940,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6750}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11135242,"byte_end":11135257,"line_start":217,"line_end":217,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6754}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11135534,"byte_end":11135539,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6765}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136080,"byte_end":11136095,"line_start":247,"line_end":247,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6771},{"krate":0,"index":6772}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136372,"byte_end":11136373,"line_start":257,"line_end":257,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136558,"byte_end":11136569,"line_start":265,"line_end":265,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6778}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136713,"byte_end":11136724,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6780}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136871,"byte_end":11136882,"line_start":277,"line_end":277,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11137234,"byte_end":11137247,"line_start":15,"line_end":15,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6835}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/clock.rs","byte_start":11141626,"byte_end":11141631,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7227},{"krate":0,"index":7228},{"krate":0,"index":7229},{"krate":0,"index":7230}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11166773,"byte_end":11166782,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6868}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11166866,"byte_end":11166875,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6870}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11167021,"byte_end":11167030,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6874},{"krate":0,"index":6875},{"krate":0,"index":6876},{"krate":0,"index":6878},{"krate":0,"index":6879},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6883}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11174048,"byte_end":11174058,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11174083,"byte_end":11174093,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11175534,"byte_end":11175545,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6888},{"krate":0,"index":6889},{"krate":0,"index":6890},{"krate":0,"index":6891},{"krate":0,"index":6892},{"krate":0,"index":6893},{"krate":0,"index":6894},{"krate":0,"index":6895},{"krate":0,"index":6896}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179068,"byte_end":11179085,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6902}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179386,"byte_end":11179403,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6904}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179642,"byte_end":11179653,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179678,"byte_end":11179689,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179728,"byte_end":11179739,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6908},{"krate":0,"index":6909},{"krate":0,"index":6910},{"krate":0,"index":6911},{"krate":0,"index":6912}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11180257,"byte_end":11180267,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6914},{"krate":0,"index":6915},{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11183268,"byte_end":11183279,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11185670,"byte_end":11185680,"line_start":620,"line_end":620,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6928}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/handle.rs","byte_start":11186169,"byte_end":11186175,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6942}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/handle.rs","byte_start":11186843,"byte_end":11186849,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7269}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/handle.rs","byte_start":11188887,"byte_end":11188893,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6944}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/wheel/level.rs","byte_start":11201491,"byte_end":11201496,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6966},{"krate":0,"index":6968},{"krate":0,"index":6969},{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6972}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/wheel/level.rs","byte_start":11207564,"byte_end":11207569,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6974}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/wheel/mod.rs","byte_start":11190514,"byte_end":11190519,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6990},{"krate":0,"index":6992},{"krate":0,"index":6994},{"krate":0,"index":6995},{"krate":0,"index":6997},{"krate":0,"index":6998},{"krate":0,"index":6999},{"krate":0,"index":7000},{"krate":0,"index":7001}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11213703,"byte_end":11213708,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7021},{"krate":0,"index":7022},{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215811,"byte_end":11215816,"line_start":238,"line_end":238,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7029},{"krate":0,"index":7030}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11151101,"byte_end":11151110,"line_start":103,"line_end":103,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7052},{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7056},{"krate":0,"index":7057}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11152746,"byte_end":11152752,"line_start":164,"line_end":164,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7069},{"krate":0,"index":7070},{"krate":0,"index":7071}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11155771,"byte_end":11155777,"line_start":253,"line_end":253,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7075},{"krate":0,"index":7076},{"krate":0,"index":7080},{"krate":0,"index":7081}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11160497,"byte_end":11160503,"line_start":386,"line_end":386,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7085},{"krate":0,"index":7086},{"krate":0,"index":7087},{"krate":0,"index":7088},{"krate":0,"index":7089},{"krate":0,"index":7090}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11161216,"byte_end":11161222,"line_start":420,"line_end":420,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7093}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11161348,"byte_end":11161353,"line_start":431,"line_end":431,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7095},{"krate":0,"index":7096},{"krate":0,"index":7097}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11162066,"byte_end":11162071,"line_start":456,"line_end":456,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7099}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217967,"byte_end":11217972,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7109}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218213,"byte_end":11218218,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7111},{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7115},{"krate":0,"index":7116}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219118,"byte_end":11219123,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219150,"byte_end":11219155,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7119}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219617,"byte_end":11219624,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7122}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219712,"byte_end":11219719,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7124}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219863,"byte_end":11219870,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219907,"byte_end":11219912,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7127}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221454,"byte_end":11221461,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7133},{"krate":0,"index":7134},{"krate":0,"index":7135},{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7139},{"krate":0,"index":7140},{"krate":0,"index":7141},{"krate":0,"index":7142}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225558,"byte_end":11225565,"line_start":161,"line_end":161,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7144}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225694,"byte_end":11225701,"line_start":167,"line_end":167,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7146}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225816,"byte_end":11225823,"line_start":173,"line_end":173,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7148},{"krate":0,"index":7149}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225988,"byte_end":11225995,"line_start":181,"line_end":181,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7151}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11226100,"byte_end":11226107,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7153},{"krate":0,"index":7154}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11226248,"byte_end":11226255,"line_start":195,"line_end":195,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7156},{"krate":0,"index":7157}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11226416,"byte_end":11226423,"line_start":203,"line_end":203,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7159}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11226530,"byte_end":11226537,"line_start":209,"line_end":209,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7161}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230715,"byte_end":11230723,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7181},{"krate":0,"index":7185}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235619,"byte_end":11235626,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7209},{"krate":0,"index":7210},{"krate":0,"index":7211},{"krate":0,"index":7212}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11236164,"byte_end":11236171,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7215},{"krate":0,"index":7216}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/bit.rs","byte_start":11236816,"byte_end":11236820,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7372},{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/bit.rs","byte_start":11238248,"byte_end":11238252,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7380}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243402,"byte_end":11243406,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243443,"byte_end":11243447,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243484,"byte_end":11243494,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243531,"byte_end":11243541,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243578,"byte_end":11243581,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243618,"byte_end":11243621,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11244237,"byte_end":11244241,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7454},{"krate":0,"index":7455},{"krate":0,"index":7456},{"krate":0,"index":7457},{"krate":0,"index":7459}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11249847,"byte_end":11249851,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7462}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11249990,"byte_end":11249999,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7465}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11250566,"byte_end":11250575,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7468}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11250733,"byte_end":11250736,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7471},{"krate":0,"index":7472}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11250998,"byte_end":11251001,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7475}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11251268,"byte_end":11251271,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7478}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11251392,"byte_end":11251396,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7481}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11253903,"byte_end":11253907,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7485},{"krate":0,"index":7486}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11254251,"byte_end":11254255,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7489}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11254603,"byte_end":11254607,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7492}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11254969,"byte_end":11254979,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7495},{"krate":0,"index":7496}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11255916,"byte_end":11255926,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7499}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11256069,"byte_end":11256074,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7502}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11256957,"byte_end":11256961,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7506}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11257521,"byte_end":11257526,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7509}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11257852,"byte_end":11257859,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7511},{"krate":0,"index":7512},{"krate":0,"index":7513}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138133,"byte_end":138143,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138213,"byte_end":138223,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":140797,"byte_end":140805,"line_start":100,"line_end":100,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":140842,"byte_end":140850,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":140901,"byte_end":140911,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":141146,"byte_end":141156,"line_start":116,"line_end":116,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":144162,"byte_end":144172,"line_start":210,"line_end":210,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":144529,"byte_end":144539,"line_start":225,"line_end":225,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":144726,"byte_end":144736,"line_start":232,"line_end":232,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":145914,"byte_end":145924,"line_start":278,"line_end":278,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7550}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":146293,"byte_end":146304,"line_start":292,"line_end":292,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7556},{"krate":0,"index":7557}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":146984,"byte_end":146992,"line_start":317,"line_end":317,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":148575,"byte_end":148583,"line_start":366,"line_end":366,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/wake.rs","byte_start":11265462,"byte_end":11265470,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7571},{"krate":0,"index":7572}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14285,"byte_end":14291,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/mod.rs","byte_start":17961,"byte_end":17968,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14344,"byte_end":14346,"line_start":358,"line_end":358,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":105}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14356,"byte_end":14359,"line_start":359,"line_end":359,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":282}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80358,"byte_end":80361,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2775}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/mod.rs","byte_start":80548,"byte_end":80552,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3242}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/mod.rs","byte_start":10514553,"byte_end":10514561,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3243}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14524,"byte_end":14531,"line_start":372,"line_end":372,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3720}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14762,"byte_end":14766,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4814}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778588,"byte_end":10778597,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":4828}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778612,"byte_end":10778616,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4991}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/mod.rs","byte_start":10823043,"byte_end":10823048,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5381}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10778774,"byte_end":10778781,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5554}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mod.rs","byte_start":10779520,"byte_end":10779525,"line_start":467,"line_end":467,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6273}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14811,"byte_end":14815,"line_start":395,"line_end":395,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":620}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/lib.rs","byte_start":14879,"byte_end":14883,"line_start":401,"line_end":401,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6838}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/mod.rs","byte_start":11140820,"byte_end":11140825,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7104}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/scoped_tls.rs","byte_start":30770,"byte_end":30779,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/scoped_tls.rs","byte_start":30795,"byte_end":30804,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/macros/scoped_tls.rs","byte_start":31154,"byte_end":31159,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":65},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/poll_fn.rs","byte_start":32786,"byte_end":32792,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/poll_fn.rs","byte_start":33006,"byte_end":33012,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/poll_fn.rs","byte_start":33154,"byte_end":33160,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110338,"byte_end":10110343,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/future/ready.rs","byte_start":10110370,"byte_end":10110375,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":43558,"byte_end":43567,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":142},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":46017,"byte_end":46020,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":46180,"byte_end":46183,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_buf_read.rs","byte_start":46812,"byte_end":46818,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":49885,"byte_end":49888,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":50031,"byte_end":50034,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_read.rs","byte_start":50703,"byte_end":50709,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53703,"byte_end":53706,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":53849,"byte_end":53852,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_seek.rs","byte_start":54243,"byte_end":54249,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":63719,"byte_end":63722,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":63870,"byte_end":63873,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":64750,"byte_end":64753,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":65551,"byte_end":65557,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":66360,"byte_end":66366,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":67172,"byte_end":67178,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_write.rs","byte_start":67979,"byte_end":67985,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":70026,"byte_end":70033,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/read_buf.rs","byte_start":79011,"byte_end":79018,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10121435,"byte_end":10121443,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10123584,"byte_end":10123592,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":2207}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10123735,"byte_end":10123743,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/interest.rs","byte_start":10123871,"byte_end":10123879,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10124464,"byte_end":10124469,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10128886,"byte_end":10128891,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10129635,"byte_end":10129640,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":2207}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10129801,"byte_end":10129806,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10129934,"byte_end":10129939,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":2202}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10130093,"byte_end":10130098,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/ready.rs","byte_start":10130245,"byte_end":10130250,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10132752,"byte_end":10132764,"line_start":52,"line_end":52,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1028},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10132789,"byte_end":10132801,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1028},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10132845,"byte_end":10132857,"line_start":57,"line_end":57,"column_start":6,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10138285,"byte_end":10138297,"line_start":210,"line_end":210,"column_start":15,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1028},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/registration.rs","byte_start":10138896,"byte_end":10138908,"line_start":228,"line_end":228,"column_start":10,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10142414,"byte_end":10142425,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1053},"to":{"krate":0,"index":7408}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10142685,"byte_end":10142696,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1053},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10142876,"byte_end":10142887,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10151070,"byte_end":10151081,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1053},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10151170,"byte_end":10151181,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1053},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10151206,"byte_end":10151217,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1053},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10151251,"byte_end":10151262,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10152185,"byte_end":10152191,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1080},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10152686,"byte_end":10152695,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10157369,"byte_end":10157378,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10157743,"byte_end":10157752,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/scheduled_io.rs","byte_start":10157785,"byte_end":10157794,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1068},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10114013,"byte_end":10114019,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10116825,"byte_end":10116831,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10116946,"byte_end":10116951,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10117395,"byte_end":10117401,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":904},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10117800,"byte_end":10117806,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10117956,"byte_end":10117962,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10118787,"byte_end":10118793,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10119610,"byte_end":10119616,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1107},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10119694,"byte_end":10119700,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10119835,"byte_end":10119840,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/driver/mod.rs","byte_start":10120797,"byte_end":10120806,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10161315,"byte_end":10161326,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10164088,"byte_end":10164099,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10165642,"byte_end":10165653,"line_start":195,"line_end":195,"column_start":27,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10165796,"byte_end":10165807,"line_start":203,"line_end":203,"column_start":45,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/poll_evented.rs","byte_start":10165979,"byte_end":10165990,"line_start":209,"line_end":209,"column_start":26,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1132},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10173203,"byte_end":10173210,"line_start":168,"line_end":168,"column_start":18,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185178,"byte_end":10185185,"line_start":462,"line_end":462,"column_start":30,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185339,"byte_end":10185346,"line_start":468,"line_end":468,"column_start":56,"column_end":63},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185557,"byte_end":10185564,"line_start":476,"line_end":476,"column_start":27,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10185664,"byte_end":10185681,"line_start":482,"line_end":482,"column_start":26,"column_end":43},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10188229,"byte_end":10188249,"line_start":545,"line_end":545,"column_start":26,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10190759,"byte_end":10190776,"line_start":606,"line_end":606,"column_start":60,"column_end":77},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/async_fd.rs","byte_start":10191033,"byte_end":10191053,"line_start":614,"line_end":614,"column_start":60,"column_end":80},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10193095,"byte_end":10193103,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194020,"byte_end":10194029,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194279,"byte_end":10194287,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1374},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10194582,"byte_end":10194591,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1377},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10195270,"byte_end":10195275,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10195731,"byte_end":10195736,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10195989,"byte_end":10195994,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196117,"byte_end":10196125,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196162,"byte_end":10196171,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196208,"byte_end":10196216,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196253,"byte_end":10196262,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196305,"byte_end":10196313,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1374},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/split.rs","byte_start":10196481,"byte_end":10196490,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/seek.rs","byte_start":10197447,"byte_end":10197451,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":10576},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_buf_read_ext.rs","byte_start":10200439,"byte_end":10200451,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_buf_read_ext.rs","byte_start":10209558,"byte_end":10209559,"line_start":259,"line_end":259,"column_start":52,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1397},"to":{"krate":0,"index":2235}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10211480,"byte_end":10211489,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":142},"to":{"krate":0,"index":2243}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_read_ext.rs","byte_start":10248886,"byte_end":10248887,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1444},"to":{"krate":0,"index":2243}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_seek_ext.rs","byte_start":10249812,"byte_end":10249821,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":167},"to":{"krate":0,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_seek_ext.rs","byte_start":10251352,"byte_end":10251353,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1453},"to":{"krate":0,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10253397,"byte_end":10253407,"line_start":67,"line_end":67,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":193},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/async_write_ext.rs","byte_start":10287947,"byte_end":10287948,"line_start":1047,"line_end":1047,"column_start":48,"column_end":49},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1498},"to":{"krate":0,"index":2298}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10289316,"byte_end":10289325,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10291182,"byte_end":10291191,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10524},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10292001,"byte_end":10292010,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10524},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10292923,"byte_end":10292932,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":10524},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_reader.rs","byte_start":10293443,"byte_end":10293452,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":10524},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10294941,"byte_end":10294950,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296787,"byte_end":10296796,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10493},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10296938,"byte_end":10296947,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":10493},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10297659,"byte_end":10297668,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":10493},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10298198,"byte_end":10298207,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":10493},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_stream.rs","byte_start":10298462,"byte_end":10298471,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":10493},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10300407,"byte_end":10300416,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":10447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10302694,"byte_end":10302703,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":10447},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10303593,"byte_end":10303602,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":10447},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10303856,"byte_end":10303865,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10447},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/buf_writer.rs","byte_start":10304152,"byte_end":10304161,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":10447},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10305339,"byte_end":10305344,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":10398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306484,"byte_end":10306489,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":10398},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10306768,"byte_end":10306773,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":10398},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/chain.rs","byte_start":10307359,"byte_end":10307364,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":10398},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy.rs","byte_start":10308491,"byte_end":10308501,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy.rs","byte_start":10312098,"byte_end":10312102,"line_start":136,"line_end":136,"column_start":23,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2355},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_bidirectional.rs","byte_start":10313682,"byte_end":10313699,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1704},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/copy_buf.rs","byte_start":10318134,"byte_end":10318141,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2379},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/empty.rs","byte_start":10320408,"byte_end":10320413,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2391},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/empty.rs","byte_start":10320627,"byte_end":10320632,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2391},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/empty.rs","byte_start":10320865,"byte_end":10320870,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/flush.rs","byte_start":10321997,"byte_end":10322002,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":10356},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10323333,"byte_end":10323338,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":10306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/lines.rs","byte_start":10324590,"byte_end":10324595,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":10306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10328873,"byte_end":10328885,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10329429,"byte_end":10329441,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10330139,"byte_end":10330151,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2394},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10330302,"byte_end":10330306,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10330712,"byte_end":10330716,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2399},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/mem.rs","byte_start":10331582,"byte_end":10331586,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2399},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read.rs","byte_start":10333767,"byte_end":10333771,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10255},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_buf.rs","byte_start":10334905,"byte_end":10334912,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10195},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_exact.rs","byte_start":10337293,"byte_end":10337302,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10140},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_line.rs","byte_start":10346392,"byte_end":10346400,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":9221},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_to_end.rs","byte_start":10350053,"byte_end":10350062,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":9164},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10350457,"byte_end":10350460,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1979}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10350697,"byte_end":10350702,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1991},"to":{"krate":0,"index":1982}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10350723,"byte_end":10350729,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":1979},"to":{"krate":0,"index":1982}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10350749,"byte_end":10350752,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":138}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":1982}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10351452,"byte_end":10351470,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/vec_with_initialized.rs","byte_start":10351650,"byte_end":10351668,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_to_string.rs","byte_start":10357038,"byte_end":10357050,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":9103},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/read_until.rs","byte_start":10359354,"byte_end":10359363,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":9042},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/repeat.rs","byte_start":10360941,"byte_end":10360947,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2559},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/shutdown.rs","byte_start":10362326,"byte_end":10362334,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":8993},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/sink.rs","byte_start":10363974,"byte_end":10363978,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2563},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/sink.rs","byte_start":10364488,"byte_end":10364492,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2563},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10365649,"byte_end":10365654,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":8943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/split.rs","byte_start":10366393,"byte_end":10366398,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":8943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10368711,"byte_end":10368715,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":8903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370343,"byte_end":10370347,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":8903},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/take.rs","byte_start":10370991,"byte_end":10370995,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":8903},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write.rs","byte_start":10372794,"byte_end":10372799,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":8852},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_vectored.rs","byte_start":10373964,"byte_end":10373977,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":8792},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_all.rs","byte_start":10375026,"byte_end":10375034,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":8737},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/io/util/write_buf.rs","byte_start":10376519,"byte_end":10376527,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":8677},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":81416,"byte_end":81433,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":342},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82086,"byte_end":82096,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":156}},"from":{"krate":1,"index":7308},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82136,"byte_end":82146,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":157}},"from":{"krate":1,"index":7308},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82448,"byte_end":82460,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":1,"index":7336},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82500,"byte_end":82512,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":159}},"from":{"krate":1,"index":7336},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82809,"byte_end":82821,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":160}},"from":{"krate":1,"index":7339},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":82861,"byte_end":82873,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":161}},"from":{"krate":1,"index":7339},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":87204,"byte_end":87210,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":164}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":87254,"byte_end":87260,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"kind":{"Impl":{"id":165}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":88813,"byte_end":88823,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2750},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/addr.rs","byte_start":89462,"byte_end":89471,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2764},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10384392,"byte_end":10384403,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394178,"byte_end":10394189,"line_start":350,"line_end":350,"column_start":36,"column_end":47},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3190},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394515,"byte_end":10394526,"line_start":362,"line_end":362,"column_start":21,"column_end":32},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3190},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/listener.rs","byte_start":10394732,"byte_end":10394743,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3190},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10398266,"byte_end":10398275,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10410915,"byte_end":10410924,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3192},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10411059,"byte_end":10411068,"line_start":494,"line_end":494,"column_start":18,"column_end":27},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3192},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10411178,"byte_end":10411187,"line_start":501,"line_end":501,"column_start":20,"column_end":29},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3192},"to":{"krate":1,"index":8903}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/socket.rs","byte_start":10411542,"byte_end":10411551,"line_start":515,"line_end":515,"column_start":20,"column_end":29},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3192},"to":{"krate":1,"index":8905}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10414013,"byte_end":10414021,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10416824,"byte_end":10416832,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3194},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10417048,"byte_end":10417057,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3201},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10417974,"byte_end":10417982,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3194},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split.rs","byte_start":10418076,"byte_end":10418085,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3201},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10420971,"byte_end":10420983,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3217},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421186,"byte_end":10421198,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3217},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10421208,"byte_end":10421221,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424403,"byte_end":10424416,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3208},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10424617,"byte_end":10424631,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10425314,"byte_end":10425328,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3212},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10425492,"byte_end":10425506,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3212},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10426553,"byte_end":10426566,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3208},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/split_owned.rs","byte_start":10426662,"byte_end":10426676,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3212},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10429206,"byte_end":10429215,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10462737,"byte_end":10462746,"line_start":1041,"line_end":1041,"column_start":39,"column_end":48},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3224},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10463104,"byte_end":10463113,"line_start":1055,"line_end":1055,"column_start":20,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3224},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10463323,"byte_end":10463332,"line_start":1065,"line_end":1065,"column_start":21,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3224},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10464158,"byte_end":10464167,"line_start":1098,"line_end":1098,"column_start":21,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3224},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/tcp/stream.rs","byte_start":10464371,"byte_end":10464380,"line_start":1109,"line_end":1109,"column_start":22,"column_end":31},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3224},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10469539,"byte_end":10469548,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513623,"byte_end":10513632,"line_start":1397,"line_end":1397,"column_start":39,"column_end":48},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3231},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10513957,"byte_end":10513966,"line_start":1409,"line_end":1409,"column_start":21,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3231},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/udp.rs","byte_start":10514175,"byte_end":10514184,"line_start":1420,"line_end":1420,"column_start":22,"column_end":31},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3231},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10518024,"byte_end":10518036,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556269,"byte_end":10556281,"line_start":1252,"line_end":1252,"column_start":52,"column_end":64},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3580},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556625,"byte_end":10556637,"line_start":1264,"line_end":1264,"column_start":21,"column_end":33},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3580},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/datagram/socket.rs","byte_start":10556752,"byte_end":10556764,"line_start":1270,"line_end":1270,"column_start":18,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3580},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10558517,"byte_end":10558529,"line_start":52,"line_end":52,"column_start":6,"column_end":18},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10562721,"byte_end":10562733,"line_start":157,"line_end":157,"column_start":52,"column_end":64},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3590},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10563068,"byte_end":10563080,"line_start":169,"line_end":169,"column_start":21,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3590},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/listener.rs","byte_start":10563195,"byte_end":10563207,"line_start":175,"line_end":175,"column_start":18,"column_end":30},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3590},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10564988,"byte_end":10564996,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3593},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10565212,"byte_end":10565221,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3600},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10566007,"byte_end":10566015,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3593},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split.rs","byte_start":10566111,"byte_end":10566120,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3600},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569035,"byte_end":10569047,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3616},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569250,"byte_end":10569262,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3616},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569272,"byte_end":10569285,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569701,"byte_end":10569714,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3607},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10569915,"byte_end":10569929,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570627,"byte_end":10570641,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3611},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10570805,"byte_end":10570819,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3611},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10571863,"byte_end":10571876,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3607},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/split_owned.rs","byte_start":10571974,"byte_end":10571988,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3611},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572209,"byte_end":10572219,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/socketaddr.rs","byte_start":10572771,"byte_end":10572781,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3446},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10574263,"byte_end":10574273,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596485,"byte_end":10596495,"line_start":633,"line_end":633,"column_start":35,"column_end":45},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3623},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10596808,"byte_end":10596818,"line_start":645,"line_end":645,"column_start":20,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3623},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10597028,"byte_end":10597038,"line_start":655,"line_end":655,"column_start":21,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3623},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10597803,"byte_end":10597813,"line_start":686,"line_end":686,"column_start":6,"column_end":16},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10599076,"byte_end":10599086,"line_start":724,"line_end":724,"column_start":21,"column_end":31},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3623},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/stream.rs","byte_start":10599201,"byte_end":10599211,"line_start":730,"line_end":730,"column_start":18,"column_end":28},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3623},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/net/unix/ucred.rs","byte_start":10599598,"byte_end":10599603,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_ptr.rs","byte_start":93225,"byte_end":93234,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_ptr.rs","byte_start":93408,"byte_end":93417,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_ptr.rs","byte_start":93564,"byte_end":93573,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_ptr.rs","byte_start":93686,"byte_end":93695,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94039,"byte_end":94048,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94073,"byte_end":94082,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94092,"byte_end":94101,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94593,"byte_end":94602,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u16.rs","byte_start":94887,"byte_end":94896,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95237,"byte_end":95246,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95271,"byte_end":95280,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95290,"byte_end":95299,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95484,"byte_end":95493,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u32.rs","byte_start":95778,"byte_end":95787,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98298,"byte_end":98306,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98331,"byte_end":98339,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98349,"byte_end":98357,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98538,"byte_end":98546,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_u8.rs","byte_start":98830,"byte_end":98838,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":99178,"byte_end":99189,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":99214,"byte_end":99225,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":99235,"byte_end":99246,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":99935,"byte_end":99946,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":100236,"byte_end":100247,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/atomic_usize.rs","byte_start":100411,"byte_end":100422,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/mutex.rs","byte_start":100753,"byte_end":100758,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/loom/std/unsafe_cell.rs","byte_start":101436,"byte_end":101446,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/either.rs","byte_start":10605511,"byte_end":10605517,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3668},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/either.rs","byte_start":10606474,"byte_end":10606480,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3668},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/either.rs","byte_start":10606694,"byte_end":10606700,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3668},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":106638,"byte_end":106648,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":106913,"byte_end":106923,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3694},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":107449,"byte_end":107454,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":112219,"byte_end":112229,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":112338,"byte_end":112350,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3698},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":112705,"byte_end":112721,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":113984,"byte_end":114000,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3714},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":114595,"byte_end":114607,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/thread.rs","byte_start":114787,"byte_end":114792,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":105205,"byte_end":105209,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":105212,"byte_end":105216,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":105685,"byte_end":105688,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":271}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/park/mod.rs","byte_start":105777,"byte_end":105780,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":272}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10627193,"byte_end":10627205,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10630151,"byte_end":10630172,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":4239},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10630888,"byte_end":10630893,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10632533,"byte_end":10632538,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3729},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/enter.rs","byte_start":10632668,"byte_end":10632673,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3729},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10640495,"byte_end":10640501,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3772},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10640526,"byte_end":10640532,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3772},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10640891,"byte_end":10640895,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10641782,"byte_end":10641791,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10644945,"byte_end":10644954,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/core.rs","byte_start":10647992,"byte_end":10647999,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10648930,"byte_end":10648939,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651665,"byte_end":10651674,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4257},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10651917,"byte_end":10651926,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4257},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10652203,"byte_end":10652212,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4257},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/error.rs","byte_start":10652246,"byte_end":10652251,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":288}},"from":{"krate":1,"index":2782},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/harness.rs","byte_start":10653004,"byte_end":10653011,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/harness.rs","byte_start":10653666,"byte_end":10653673,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/harness.rs","byte_start":10659046,"byte_end":10659059,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/harness.rs","byte_start":10666040,"byte_end":10666045,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671518,"byte_end":10671528,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671565,"byte_end":10671575,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10671591,"byte_end":10671601,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672836,"byte_end":10672846,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10672873,"byte_end":10672883,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10674109,"byte_end":10674119,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/join.rs","byte_start":10674385,"byte_end":10674395,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/raw.rs","byte_start":10675642,"byte_end":10675649,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/raw.rs","byte_start":10677180,"byte_end":10677187,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4000},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/raw.rs","byte_start":10677277,"byte_end":10677284,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4000},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/state.rs","byte_start":10679966,"byte_end":10679971,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/state.rs","byte_start":10688827,"byte_end":10688835,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/state.rs","byte_start":10690712,"byte_end":10690717,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4049},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/state.rs","byte_start":10690876,"byte_end":10690884,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4263},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/waker.rs","byte_start":10692702,"byte_end":10692710,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4133},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10633668,"byte_end":10633672,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10633703,"byte_end":10633707,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10633844,"byte_end":10633852,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10633893,"byte_end":10633901,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10634026,"byte_end":10634030,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":4185}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10634033,"byte_end":10634038,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":4185}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10635888,"byte_end":10635892,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10636788,"byte_end":10636792,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10636961,"byte_end":10636969,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10637255,"byte_end":10637259,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10637499,"byte_end":10637503,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4167},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10637655,"byte_end":10637663,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4175},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/task/mod.rs","byte_start":10637879,"byte_end":10637883,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4167},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10696419,"byte_end":10696424,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4323},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10697247,"byte_end":10697261,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10699546,"byte_end":10699551,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10703831,"byte_end":10703836,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4362},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10704529,"byte_end":10704543,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4309},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10706093,"byte_end":10706107,"line_start":372,"line_end":372,"column_start":30,"column_end":44},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4309},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10706273,"byte_end":10706280,"line_start":380,"line_end":380,"column_start":6,"column_end":13},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10706947,"byte_end":10706954,"line_start":407,"line_end":407,"column_start":21,"column_end":28},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4661},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10707122,"byte_end":10707125,"line_start":415,"line_end":415,"column_start":19,"column_end":22},"kind":{"Impl":{"id":327}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":4185}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10708535,"byte_end":10708541,"line_start":455,"line_end":455,"column_start":15,"column_end":21},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4331},"to":{"krate":0,"index":7567}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10709048,"byte_end":10709058,"line_start":477,"line_end":477,"column_start":15,"column_end":25},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/basic_scheduler.rs","byte_start":10709333,"byte_end":10709343,"line_start":485,"line_end":485,"column_start":24,"column_end":34},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4396},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10713826,"byte_end":10713838,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10716413,"byte_end":10716425,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4434},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10716511,"byte_end":10716523,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4434},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10716684,"byte_end":10716691,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10719123,"byte_end":10719128,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/pool.rs","byte_start":10722367,"byte_end":10722374,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4670},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/schedule.rs","byte_start":10722877,"byte_end":10722889,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4490},"to":{"krate":0,"index":4185}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/shutdown.rs","byte_start":10723762,"byte_end":10723770,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/task.rs","byte_start":10725519,"byte_end":10725531,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/task.rs","byte_start":10725757,"byte_end":10725769,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4510},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/blocking/task.rs","byte_start":10725799,"byte_end":10725811,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4510},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10729005,"byte_end":10729012,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10740642,"byte_end":10740649,"line_start":467,"line_end":467,"column_start":10,"column_end":17},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10741211,"byte_end":10741218,"line_start":491,"line_end":491,"column_start":10,"column_end":17},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/builder.rs","byte_start":10743906,"byte_end":10743913,"line_start":579,"line_end":579,"column_start":21,"column_end":28},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/context.rs","byte_start":10746305,"byte_end":10746315,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4699},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/driver.rs","byte_start":10750857,"byte_end":10750863,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/driver.rs","byte_start":10751447,"byte_end":10751453,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4720},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10753260,"byte_end":10753266,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10762019,"byte_end":10762034,"line_start":297,"line_end":297,"column_start":21,"column_end":36},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10762182,"byte_end":10762197,"line_start":303,"line_end":303,"column_start":23,"column_end":38},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4646},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/handle.rs","byte_start":10762337,"byte_end":10762352,"line_start":309,"line_end":309,"column_start":23,"column_end":38},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4646},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/spawner.rs","byte_start":10762737,"byte_end":10762744,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/spawner.rs","byte_start":10762986,"byte_end":10762993,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/runtime/mod.rs","byte_start":10616753,"byte_end":10616760,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":118445,"byte_end":118451,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":120098,"byte_end":120108,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":121079,"byte_end":121095,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":121227,"byte_end":121243,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4801},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/coop.rs","byte_start":122983,"byte_end":122989,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10781431,"byte_end":10781438,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":6327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/barrier.rs","byte_start":10784717,"byte_end":10784734,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792173,"byte_end":10792182,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6346},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10792358,"byte_end":10792367,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6346},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793015,"byte_end":10793024,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6353},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10793329,"byte_end":10793338,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6353},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794261,"byte_end":10794273,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6365},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10794651,"byte_end":10794663,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":6365},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796626,"byte_end":10796630,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10796675,"byte_end":10796679,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799453,"byte_end":10799459,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4850},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799496,"byte_end":10799502,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4850},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799540,"byte_end":10799548,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799585,"byte_end":10799593,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10799609,"byte_end":10799615,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10805225,"byte_end":10805229,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10805621,"byte_end":10805627,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4850},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10805807,"byte_end":10805813,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4850},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10805967,"byte_end":10805975,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10810838,"byte_end":10810846,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10815022,"byte_end":10815030,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10815656,"byte_end":10815660,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10816439,"byte_end":10816443,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10817104,"byte_end":10817108,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":4897},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10817856,"byte_end":10817862,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4888},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10818277,"byte_end":10818283,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4850},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10818427,"byte_end":10818435,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10818570,"byte_end":10818579,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/broadcast.rs","byte_start":10818752,"byte_end":10818761,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4893},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/block.rs","byte_start":10825643,"byte_end":10825648,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":5008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/block.rs","byte_start":10835747,"byte_end":10835753,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/block.rs","byte_start":10836235,"byte_end":10836241,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5022},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10839706,"byte_end":10839714,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10845993,"byte_end":10846001,"line_start":287,"line_end":287,"column_start":24,"column_end":32},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5085},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846197,"byte_end":10846205,"line_start":295,"line_end":295,"column_start":19,"column_end":27},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5085},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10846221,"byte_end":10846227,"line_start":297,"line_end":297,"column_start":9,"column_end":15},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860635,"byte_end":10860641,"line_start":737,"line_end":737,"column_start":19,"column_end":25},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5078},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860773,"byte_end":10860779,"line_start":745,"line_end":745,"column_start":24,"column_end":30},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5078},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10860991,"byte_end":10860997,"line_start":755,"line_end":755,"column_start":9,"column_end":15},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10862247,"byte_end":10862253,"line_start":798,"line_end":798,"column_start":18,"column_end":24},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5081},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/bounded.rs","byte_start":10862580,"byte_end":10862586,"line_start":813,"line_end":813,"column_start":24,"column_end":30},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5081},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10863247,"byte_end":10863249,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5168},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10863542,"byte_end":10863544,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5176},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10864481,"byte_end":10864485,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5189},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10865118,"byte_end":10865126,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5202},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10865392,"byte_end":10865396,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5189},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10865445,"byte_end":10865449,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5189},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10865956,"byte_end":10865958,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10866568,"byte_end":10866570,"line_start":149,"line_end":149,"column_start":23,"column_end":25},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10867120,"byte_end":10867122,"line_start":167,"line_end":167,"column_start":22,"column_end":24},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5168},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10867461,"byte_end":10867463,"line_start":179,"line_end":179,"column_start":21,"column_end":23},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5168},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10867786,"byte_end":10867788,"line_start":195,"line_end":195,"column_start":23,"column_end":25},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10870343,"byte_end":10870345,"line_start":268,"line_end":268,"column_start":32,"column_end":34},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5176},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10870757,"byte_end":10870761,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10870946,"byte_end":10870950,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5189},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/chan.rs","byte_start":10871951,"byte_end":10871962,"line_start":336,"line_end":336,"column_start":20,"column_end":31},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":427},"to":{"krate":0,"index":5184}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/list.rs","byte_start":10873703,"byte_end":10873705,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/list.rs","byte_start":10879418,"byte_end":10879420,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5296},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/list.rs","byte_start":10879697,"byte_end":10879699,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/list.rs","byte_start":10883098,"byte_end":10883100,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5300},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883758,"byte_end":10883773,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5334},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10883914,"byte_end":10883929,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5334},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10884602,"byte_end":10884619,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5343},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10885618,"byte_end":10885635,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/unbounded.rs","byte_start":10888933,"byte_end":10888948,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893126,"byte_end":10893135,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893295,"byte_end":10893304,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6383},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893790,"byte_end":10893802,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":6390},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10893835,"byte_end":10893847,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6390},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894187,"byte_end":10894199,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6390},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894428,"byte_end":10894437,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6401},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10894567,"byte_end":10894576,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6401},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10895080,"byte_end":10895096,"line_start":83,"line_end":83,"column_start":35,"column_end":51},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6411},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mpsc/error.rs","byte_start":10895133,"byte_end":10895149,"line_start":85,"line_end":85,"column_start":30,"column_end":46},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6411},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902002,"byte_end":10902007,"line_start":166,"line_end":166,"column_start":25,"column_end":30},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902061,"byte_end":10902066,"line_start":167,"line_end":167,"column_start":25,"column_end":30},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902120,"byte_end":10902130,"line_start":168,"line_end":168,"column_start":25,"column_end":35},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902195,"byte_end":10902210,"line_start":169,"line_end":169,"column_start":25,"column_end":40},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10902889,"byte_end":10902901,"line_start":188,"line_end":188,"column_start":23,"column_end":35},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6422},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903038,"byte_end":10903050,"line_start":194,"line_end":194,"column_start":16,"column_end":28},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6422},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10903858,"byte_end":10903863,"line_start":220,"line_end":220,"column_start":17,"column_end":22},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909616,"byte_end":10909621,"line_start":423,"line_end":423,"column_start":21,"column_end":26},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909705,"byte_end":10909710,"line_start":429,"line_end":429,"column_start":21,"column_end":26},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10909834,"byte_end":10909839,"line_start":438,"line_end":438,"column_start":29,"column_end":34},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910234,"byte_end":10910244,"line_start":454,"line_end":454,"column_start":26,"column_end":36},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910345,"byte_end":10910355,"line_start":460,"line_end":460,"column_start":27,"column_end":37},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910502,"byte_end":10910512,"line_start":467,"line_end":467,"column_start":30,"column_end":40},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910669,"byte_end":10910679,"line_start":473,"line_end":473,"column_start":45,"column_end":55},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10910845,"byte_end":10910855,"line_start":479,"line_end":479,"column_start":49,"column_end":59},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5414},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911033,"byte_end":10911048,"line_start":487,"line_end":487,"column_start":26,"column_end":41},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911145,"byte_end":10911160,"line_start":493,"line_end":493,"column_start":27,"column_end":42},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911303,"byte_end":10911318,"line_start":500,"line_end":500,"column_start":30,"column_end":45},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911471,"byte_end":10911486,"line_start":506,"line_end":506,"column_start":45,"column_end":60},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/mutex.rs","byte_start":10911648,"byte_end":10911663,"line_start":512,"line_end":512,"column_start":49,"column_end":64},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10916526,"byte_end":10916534,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":6449},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10916567,"byte_end":10916575,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6449},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10917405,"byte_end":10917411,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10926069,"byte_end":10926075,"line_start":457,"line_end":457,"column_start":18,"column_end":24},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6427},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10927985,"byte_end":10927993,"line_start":512,"line_end":512,"column_start":6,"column_end":14},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10928506,"byte_end":10928514,"line_start":528,"line_end":528,"column_start":17,"column_end":25},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6449},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10934210,"byte_end":10934218,"line_start":670,"line_end":670,"column_start":15,"column_end":23},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6449},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/notify.rs","byte_start":10936081,"byte_end":10936087,"line_start":716,"line_end":716,"column_start":35,"column_end":41},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6442},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940240,"byte_end":10940249,"line_start":149,"line_end":149,"column_start":27,"column_end":36},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940411,"byte_end":10940420,"line_start":155,"line_end":155,"column_start":32,"column_end":41},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6479},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940489,"byte_end":10940501,"line_start":159,"line_end":159,"column_start":27,"column_end":39},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6491},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10940800,"byte_end":10940812,"line_start":168,"line_end":168,"column_start":32,"column_end":44},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6491},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10941306,"byte_end":10941310,"line_start":190,"line_end":190,"column_start":6,"column_end":10},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10943346,"byte_end":10943352,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10950979,"byte_end":10950985,"line_start":522,"line_end":522,"column_start":18,"column_end":24},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6467},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10951124,"byte_end":10951132,"line_start":530,"line_end":530,"column_start":9,"column_end":17},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10955639,"byte_end":10955647,"line_start":683,"line_end":683,"column_start":18,"column_end":26},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6473},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10955794,"byte_end":10955802,"line_start":691,"line_end":691,"column_start":20,"column_end":28},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6473},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10956265,"byte_end":10956270,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10959376,"byte_end":10959381,"line_start":805,"line_end":805,"column_start":31,"column_end":36},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5582},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10959418,"byte_end":10959423,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5582},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10959524,"byte_end":10959529,"line_start":812,"line_end":812,"column_start":18,"column_end":23},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5582},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10959906,"byte_end":10959911,"line_start":830,"line_end":830,"column_start":36,"column_end":41},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5582},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10960306,"byte_end":10960311,"line_start":845,"line_end":845,"column_start":6,"column_end":11},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/oneshot.rs","byte_start":10962024,"byte_end":10962029,"line_start":911,"line_end":911,"column_start":21,"column_end":26},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6504},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10966088,"byte_end":10966097,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10977177,"byte_end":10977186,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5691},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10977385,"byte_end":10977391,"line_start":406,"line_end":406,"column_start":6,"column_end":12},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10978257,"byte_end":10978264,"line_start":435,"line_end":435,"column_start":17,"column_end":24},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5697},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10978942,"byte_end":10978949,"line_start":459,"line_end":459,"column_start":10,"column_end":17},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10979748,"byte_end":10979755,"line_start":489,"line_end":489,"column_start":15,"column_end":22},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5697},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981005,"byte_end":10981012,"line_start":519,"line_end":519,"column_start":22,"column_end":29},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5697},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981059,"byte_end":10981071,"line_start":523,"line_end":523,"column_start":6,"column_end":18},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981164,"byte_end":10981176,"line_start":529,"line_end":529,"column_start":23,"column_end":35},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6520},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981320,"byte_end":10981332,"line_start":535,"line_end":535,"column_start":28,"column_end":40},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6520},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981379,"byte_end":10981394,"line_start":539,"line_end":539,"column_start":6,"column_end":21},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10981912,"byte_end":10981927,"line_start":554,"line_end":554,"column_start":23,"column_end":38},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6510},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10982213,"byte_end":10982228,"line_start":563,"line_end":563,"column_start":28,"column_end":43},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6510},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/batch_semaphore.rs","byte_start":10982321,"byte_end":10982327,"line_start":568,"line_end":568,"column_start":35,"column_end":41},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5703},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10985619,"byte_end":10985628,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10993832,"byte_end":10993847,"line_start":297,"line_end":297,"column_start":10,"column_end":25},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994092,"byte_end":10994112,"line_start":306,"line_end":306,"column_start":6,"column_end":26},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994366,"byte_end":10994381,"line_start":315,"line_end":315,"column_start":19,"column_end":34},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6529},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/semaphore.rs","byte_start":10994489,"byte_end":10994509,"line_start":321,"line_end":321,"column_start":15,"column_end":35},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6536},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11019099,"byte_end":11019119,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11022191,"byte_end":11022211,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11022352,"byte_end":11022372,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11022558,"byte_end":11022578,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_read_guard.rs","byte_start":11022760,"byte_end":11022780,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11023801,"byte_end":11023822,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":5867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11029493,"byte_end":11029514,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11029644,"byte_end":11029665,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11029786,"byte_end":11029807,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11029979,"byte_end":11030000,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard.rs","byte_start":11030168,"byte_end":11030189,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11031292,"byte_end":11031319,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":5909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11034866,"byte_end":11034893,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":5909},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11035037,"byte_end":11035064,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":5909},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11035199,"byte_end":11035226,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":5909},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11035412,"byte_end":11035439,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":5909},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11035621,"byte_end":11035648,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":5909},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11036350,"byte_end":11036365,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":5952},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039779,"byte_end":11039794,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11039929,"byte_end":11039944,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11040124,"byte_end":11040139,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/read_guard.rs","byte_start":11040315,"byte_end":11040330,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11041115,"byte_end":11041131,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":5991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047129,"byte_end":11047145,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":5991},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047279,"byte_end":11047295,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":5991},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047424,"byte_end":11047440,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":5991},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047620,"byte_end":11047636,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":5991},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard.rs","byte_start":11047812,"byte_end":11047828,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":5991},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11048687,"byte_end":11048709,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11052549,"byte_end":11052571,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11052705,"byte_end":11052727,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11052856,"byte_end":11052878,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11053058,"byte_end":11053080,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock/write_guard_mapped.rs","byte_start":11053256,"byte_end":11053278,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":10999956,"byte_end":10999962,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000016,"byte_end":11000022,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000256,"byte_end":11000271,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000329,"byte_end":11000344,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":5952},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000551,"byte_end":11000571,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000666,"byte_end":11000686,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":5824},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000785,"byte_end":11000801,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":5991},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000866,"byte_end":11000887,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11000948,"byte_end":11000970,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001038,"byte_end":11001065,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":5909},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001412,"byte_end":11001428,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":5991},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001493,"byte_end":11001514,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":5867},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001575,"byte_end":11001597,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6035},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001665,"byte_end":11001692,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":5909},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11001784,"byte_end":11001790,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11018165,"byte_end":11018171,"line_start":690,"line_end":690,"column_start":21,"column_end":27},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/rwlock.rs","byte_start":11018263,"byte_end":11018269,"line_start":696,"line_end":696,"column_start":29,"column_end":35},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6541},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11059557,"byte_end":11059568,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065590,"byte_end":11065601,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065687,"byte_end":11065698,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065831,"byte_end":11065842,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065867,"byte_end":11065878,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6160},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/task/atomic_waker.rs","byte_start":11065974,"byte_end":11065979,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"kind":{"Impl":{"id":555}},"from":{"krate":2,"index":9763},"to":{"krate":0,"index":6183}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067267,"byte_end":11067275,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067383,"byte_end":11067391,"line_start":47,"line_end":47,"column_start":36,"column_end":44},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067596,"byte_end":11067604,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067737,"byte_end":11067745,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067861,"byte_end":11067869,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11067894,"byte_end":11067902,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11068138,"byte_end":11068146,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11079839,"byte_end":11079847,"line_start":349,"line_end":349,"column_start":38,"column_end":46},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080064,"byte_end":11080072,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080684,"byte_end":11080692,"line_start":373,"line_end":373,"column_start":26,"column_end":34},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6549},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11080999,"byte_end":11081007,"line_start":382,"line_end":382,"column_start":31,"column_end":39},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6549},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/once_cell.rs","byte_start":11081023,"byte_end":11081031,"line_start":384,"line_end":384,"column_start":9,"column_end":17},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085616,"byte_end":11085625,"line_start":132,"line_end":132,"column_start":42,"column_end":51},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6597},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11085805,"byte_end":11085814,"line_start":138,"line_end":138,"column_start":47,"column_end":56},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6597},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086007,"byte_end":11086016,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6603},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11086178,"byte_end":11086187,"line_start":152,"line_end":152,"column_start":32,"column_end":41},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6603},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11087393,"byte_end":11087401,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11090396,"byte_end":11090404,"line_start":303,"line_end":303,"column_start":19,"column_end":27},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6566},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11090588,"byte_end":11090596,"line_start":312,"line_end":312,"column_start":18,"column_end":26},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6566},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11090966,"byte_end":11090972,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11093809,"byte_end":11093815,"line_start":422,"line_end":422,"column_start":18,"column_end":24},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6573},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/sync/watch.rs","byte_start":11094005,"byte_end":11094008,"line_start":431,"line_end":431,"column_start":24,"column_end":27},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6579},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/yield_now.rs","byte_start":11106233,"byte_end":11106241,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6806},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11117163,"byte_end":11117171,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11125164,"byte_end":11125172,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6811},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11125311,"byte_end":11125319,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6811},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11126284,"byte_end":11126292,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6811},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11126373,"byte_end":11126381,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6811},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11127248,"byte_end":11127256,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7760},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11128141,"byte_end":11128147,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/local.rs","byte_start":11128698,"byte_end":11128701,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"kind":{"Impl":{"id":586}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":4185}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11132208,"byte_end":11132216,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":6724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134716,"byte_end":11134724,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":6724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11134932,"byte_end":11134940,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":6724},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11135242,"byte_end":11135257,"line_start":217,"line_end":217,"column_start":21,"column_end":36},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11135534,"byte_end":11135539,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":6757},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136080,"byte_end":11136095,"line_start":247,"line_end":247,"column_start":40,"column_end":55},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7704},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136372,"byte_end":11136373,"line_start":257,"line_end":257,"column_start":37,"column_end":38},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":6776},"to":{"krate":0,"index":6774}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136558,"byte_end":11136569,"line_start":265,"line_end":265,"column_start":21,"column_end":32},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":6823},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136713,"byte_end":11136724,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":6823},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/task_local.rs","byte_start":11136871,"byte_end":11136882,"line_start":277,"line_end":277,"column_start":16,"column_end":27},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":6823},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/task/unconstrained.rs","byte_start":11137234,"byte_end":11137247,"line_start":15,"line_end":15,"column_start":20,"column_end":33},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7671},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/clock.rs","byte_start":11141626,"byte_end":11141631,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11166773,"byte_end":11166782,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":6863},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11166866,"byte_end":11166875,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":6863},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11167021,"byte_end":11167030,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":6863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11174048,"byte_end":11174058,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7236},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11174083,"byte_end":11174093,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7236},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11175534,"byte_end":11175545,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179068,"byte_end":11179085,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":6897},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179386,"byte_end":11179403,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":6897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179642,"byte_end":11179653,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7247},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179678,"byte_end":11179689,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7247},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11179728,"byte_end":11179739,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7247},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11180257,"byte_end":11180267,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11183268,"byte_end":11183279,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/entry.rs","byte_start":11185670,"byte_end":11185680,"line_start":620,"line_end":620,"column_start":15,"column_end":25},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7236},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/handle.rs","byte_start":11186169,"byte_end":11186175,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/handle.rs","byte_start":11186843,"byte_end":11186849,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/handle.rs","byte_start":11188887,"byte_end":11188893,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7263},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/wheel/level.rs","byte_start":11201491,"byte_end":11201496,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":6959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/wheel/level.rs","byte_start":11207564,"byte_end":11207569,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":6959},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/wheel/mod.rs","byte_start":11190514,"byte_end":11190519,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11213703,"byte_end":11213708,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/sleep.rs","byte_start":11215811,"byte_end":11215816,"line_start":238,"line_end":238,"column_start":17,"column_end":22},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7643},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11151101,"byte_end":11151110,"line_start":103,"line_end":103,"column_start":6,"column_end":15},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11152746,"byte_end":11152752,"line_start":164,"line_end":164,"column_start":9,"column_end":15},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11155771,"byte_end":11155777,"line_start":253,"line_end":253,"column_start":6,"column_end":12},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11160497,"byte_end":11160503,"line_start":386,"line_end":386,"column_start":18,"column_end":24},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7283},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11161216,"byte_end":11161222,"line_start":420,"line_end":420,"column_start":18,"column_end":24},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7283},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11161348,"byte_end":11161353,"line_start":431,"line_end":431,"column_start":6,"column_end":11},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/driver/mod.rs","byte_start":11162066,"byte_end":11162071,"line_start":456,"line_end":456,"column_start":21,"column_end":26},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7058},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11217967,"byte_end":11217972,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7298},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11218213,"byte_end":11218218,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219118,"byte_end":11219123,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7298},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219150,"byte_end":11219155,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7298},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219617,"byte_end":11219624,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219712,"byte_end":11219719,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7327},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219863,"byte_end":11219870,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7327},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/error.rs","byte_start":11219907,"byte_end":11219912,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":635}},"from":{"krate":1,"index":2782},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11221454,"byte_end":11221461,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225558,"byte_end":11225565,"line_start":161,"line_end":161,"column_start":35,"column_end":42},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225694,"byte_end":11225701,"line_start":167,"line_end":167,"column_start":35,"column_end":42},"kind":{"Impl":{"id":638}},"from":{"krate":1,"index":8306},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225816,"byte_end":11225823,"line_start":173,"line_end":173,"column_start":29,"column_end":36},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11225988,"byte_end":11225995,"line_start":181,"line_end":181,"column_start":35,"column_end":42},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":2177}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11226100,"byte_end":11226107,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11226248,"byte_end":11226255,"line_start":195,"line_end":195,"column_start":29,"column_end":36},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11226416,"byte_end":11226423,"line_start":203,"line_end":203,"column_start":35,"column_end":42},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/instant.rs","byte_start":11226530,"byte_end":11226537,"line_start":209,"line_end":209,"column_start":21,"column_end":28},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7341},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/interval.rs","byte_start":11230715,"byte_end":11230723,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11235619,"byte_end":11235626,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/time/timeout.rs","byte_start":11236164,"byte_end":11236171,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7605},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/bit.rs","byte_start":11236816,"byte_end":11236820,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/bit.rs","byte_start":11238248,"byte_end":11238252,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7516},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11242195,"byte_end":11242202,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":7408}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243402,"byte_end":11243406,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7416},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243443,"byte_end":11243447,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7416},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243484,"byte_end":11243494,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":7423},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243531,"byte_end":11243541,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7423},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243578,"byte_end":11243581,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11243618,"byte_end":11243621,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11244237,"byte_end":11244241,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11249847,"byte_end":11249851,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7398},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11249990,"byte_end":11249999,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11250566,"byte_end":11250575,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":7404},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11250733,"byte_end":11250736,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11250998,"byte_end":11251001,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11251268,"byte_end":11251271,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7410},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11251392,"byte_end":11251396,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11253903,"byte_end":11253907,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11254251,"byte_end":11254255,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7416},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11254603,"byte_end":11254607,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11254969,"byte_end":11254979,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11255916,"byte_end":11255926,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7423},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11256069,"byte_end":11256074,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11256957,"byte_end":11256961,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11257521,"byte_end":11257526,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/slab.rs","byte_start":11257852,"byte_end":11257859,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138133,"byte_end":138143,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":138213,"byte_end":138223,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":140797,"byte_end":140805,"line_start":100,"line_end":100,"column_start":31,"column_end":39},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":140842,"byte_end":140850,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":140901,"byte_end":140911,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":141146,"byte_end":141156,"line_start":116,"line_end":116,"column_start":15,"column_end":25},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":144162,"byte_end":144172,"line_start":210,"line_end":210,"column_start":30,"column_end":40},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":144529,"byte_end":144539,"line_start":225,"line_end":225,"column_start":15,"column_end":25},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":144726,"byte_end":144736,"line_start":232,"line_end":232,"column_start":27,"column_end":37},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":145914,"byte_end":145924,"line_start":278,"line_end":278,"column_start":19,"column_end":29},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":146293,"byte_end":146304,"line_start":292,"line_end":292,"column_start":33,"column_end":44},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":146984,"byte_end":146992,"line_start":317,"line_end":317,"column_start":9,"column_end":17},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/linked_list.rs","byte_start":148575,"byte_end":148583,"line_start":366,"line_end":366,"column_start":24,"column_end":32},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/wake.rs","byte_start":11265140,"byte_end":11265144,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":7567}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/wake.rs","byte_start":11265147,"byte_end":11265151,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":7567}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.5.0/src/util/wake.rs","byte_start":11265462,"byte_end":11265470,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":7591},"to":{"krate":2,"index":2281}}]}