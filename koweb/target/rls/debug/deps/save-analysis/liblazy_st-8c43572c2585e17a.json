{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2","program":"/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","lazy_st","--edition=2018","/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8c43572c2585e17a","-C","extra-filename=-8c43572c2585e17a","--out-dir","/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","-L","dependency=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/liblazy_st-8c43572c2585e17a.rmeta"},"prelude":{"crate_id":{"name":"lazy_st","disambiguator":[8243138629242992064,13052196171819611531]},"crate_root":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src","external_crates":[{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}}],"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":0,"byte_end":6426,"line_start":1,"line_end":236,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":0,"byte_end":6426,"line_start":1,"line_end":236,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":76},{"krate":0,"index":12},{"krate":0,"index":78},{"krate":0,"index":13},{"krate":0,"index":80},{"krate":0,"index":44},{"krate":0,"index":49},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":53},{"krate":0,"index":64},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":40}],"decl_id":null,"docs":" Single-threaded lazy evaluation.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"/ Single-threaded lazy evaluation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":12,"byte_end":48,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":49,"byte_end":52,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Lazy evaluation allows you to define computations whose","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":53,"byte_end":112,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/ evaluation is deferred to when they are actually needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":113,"byte_end":173,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ This can be also achieved with closures; however,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":174,"byte_end":227,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ in case of lazy evaluation, the output of computations is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":228,"byte_end":289,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ calculated only once and stored in a cache.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":290,"byte_end":337,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":338,"byte_end":341,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Lazy evaluation is useful if you have an expensive computation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":342,"byte_end":408,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ of which you might need the result more than once during runtime,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":409,"byte_end":478,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ but you do not know in advance whether you will need it at all.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":479,"byte_end":546,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":547,"byte_end":550,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Let us consider an example, where we first use a closure to defer evaluation:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":551,"byte_end":632,"line_start":15,"line_end":15,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":633,"byte_end":636,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":637,"byte_end":644,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ fn expensive() -> i32 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":645,"byte_end":672,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/     println!(\"I am expensive to evaluate!\"); 7","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":673,"byte_end":723,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":724,"byte_end":729,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":730,"byte_end":733,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":734,"byte_end":749,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     let a = || expensive(); // Nothing is printed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":750,"byte_end":804,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":805,"byte_end":808,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(a(), 7); // \"I am expensive to evaluate!\" is printed here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":809,"byte_end":885,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":886,"byte_end":889,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     let b = [a(), a()]; // \"I am expensive to evaluate!\" is printed twice","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":890,"byte_end":967,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/     assert_eq!(b, [7, 7]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":968,"byte_end":998,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":999,"byte_end":1004,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1005,"byte_end":1012,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1013,"byte_end":1016,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Contrast this with using lazy evaluation:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1017,"byte_end":1062,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1063,"byte_end":1066,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1067,"byte_end":1074,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # use lazy_st::lazy;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1075,"byte_end":1099,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ fn expensive() -> i32 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1100,"byte_end":1127,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/     println!(\"I am expensive to evaluate!\"); 7","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1128,"byte_end":1178,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1179,"byte_end":1184,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1185,"byte_end":1188,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1189,"byte_end":1204,"line_start":40,"line_end":40,"column_start":1,"column_end":16}},{"value":"/     let a = lazy!(expensive()); // Nothing is printed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1205,"byte_end":1263,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     // Thunks are just smart pointers!","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1268,"byte_end":1310,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(*a, 7); // \"I am expensive to evaluate!\" is printed here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1311,"byte_end":1386,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1387,"byte_end":1390,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     let b = [*a, *a]; // Nothing is printed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1391,"byte_end":1439,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(b, [7, 7]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1440,"byte_end":1470,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1471,"byte_end":1476,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1477,"byte_end":1484,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1485,"byte_end":1488,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Lazy values from this crate cannot be shared between threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1489,"byte_end":1554,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ If you need this, please consider using the `lazy-mt` crate.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1555,"byte_end":1619,"line_start":52,"line_end":52,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1838,"byte_end":1843,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"Thunk","qualname":"::Thunk","value":"","parent":null,"children":[],"decl_id":null,"docs":" A lazily evaluated value.\n","sig":null,"attributes":[{"value":"/ A lazily evaluated value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1780,"byte_end":1809,"line_start":62,"line_end":62,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1940,"byte_end":1944,"line_start":67,"line_end":67,"column_start":10,"column_end":14},"name":"Lazy","qualname":"::Lazy","value":"Thunk<Box<FnOnce() -> T>, T>","parent":null,"children":[],"decl_id":null,"docs":" A lazily evaluated value produced from a closure.\n","sig":null,"attributes":[{"value":"/ A lazily evaluated value produced from a closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":1877,"byte_end":1930,"line_start":66,"line_end":66,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2766,"byte_end":2769,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Thunk<E, V>>::new","value":"pub fn new(E) -> Thunk<E, V>","parent":null,"children":[],"decl_id":null,"docs":" Create a lazily evaluated value from\n a value implementing the `Evaluate` trait.","sig":null,"attributes":[{"value":"/ Create a lazily evaluated value from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2304,"byte_end":2344,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/ a value implementing the `Evaluate` trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2349,"byte_end":2395,"line_start":88,"line_end":88,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2400,"byte_end":2403,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The `lazy!` macro is preferred if you want to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2408,"byte_end":2457,"line_start":90,"line_end":90,"column_start":5,"column_end":54}},{"value":"/ construct values from closures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2462,"byte_end":2497,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2502,"byte_end":2505,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2510,"byte_end":2517,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ # use lazy_st::Thunk;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2522,"byte_end":2547,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/ let expensive = Thunk::new(|| { println!(\"Evaluated!\"); 7 });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2552,"byte_end":2617,"line_start":95,"line_end":95,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(*expensive, 7); // \"Evaluated!\" gets printed here.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2622,"byte_end":2687,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(*expensive, 7); // Nothing printed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2692,"byte_end":2742,"line_start":97,"line_end":97,"column_start":5,"column_end":55}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2747,"byte_end":2754,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3058,"byte_end":3067,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"evaluated","qualname":"<Thunk<E, V>>::evaluated","value":"pub fn evaluated(V) -> Thunk<E, V>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, evaluated, thunk from a value.","sig":null,"attributes":[{"value":"/ Create a new, evaluated, thunk from a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2851,"byte_end":2899,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2904,"byte_end":2907,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2912,"byte_end":2919,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # use lazy_st::{Thunk, Lazy};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2924,"byte_end":2957,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ let x: Lazy<u32> = Thunk::evaluated(10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2962,"byte_end":3006,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*x, 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3011,"byte_end":3034,"line_start":108,"line_end":108,"column_start":5,"column_end":28}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3039,"byte_end":3046,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3187,"byte_end":3192,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"force","qualname":"<Thunk<E, V>>::force","value":"pub fn force(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Force evaluation of a thunk.\n","sig":null,"attributes":[{"value":"/ Force evaluation of a thunk.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3143,"byte_end":3175,"line_start":114,"line_end":114,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3835,"byte_end":3841,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Thunk<E, V>>::unwrap","value":"pub fn unwrap(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Force the evaluation of a thunk and get the value, consuming the thunk.","sig":null,"attributes":[{"value":"/ Force the evaluation of a thunk and get the value, consuming the thunk.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3622,"byte_end":3697,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3702,"byte_end":3705,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3710,"byte_end":3717,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # use lazy_st::lazy;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3722,"byte_end":3746,"line_start":132,"line_end":132,"column_start":5,"column_end":29}},{"value":"/ let val = lazy!(7);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3751,"byte_end":3774,"line_start":133,"line_end":133,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(val.unwrap(), 7);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3779,"byte_end":3811,"line_start":134,"line_end":134,"column_start":5,"column_end":37}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3816,"byte_end":3823,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5304,"byte_end":5312,"line_start":179,"line_end":179,"column_start":11,"column_end":19},"name":"Evaluate","qualname":"::Evaluate","value":"Evaluate<T>","parent":null,"children":[{"krate":0,"index":26}],"decl_id":null,"docs":" Generalisation of lazy evaluation to other types than closures.","sig":null,"attributes":[{"value":"/ Generalisation of lazy evaluation to other types than closures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":3992,"byte_end":4059,"line_start":145,"line_end":145,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4060,"byte_end":4063,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ The main use case for implementing this trait is the following:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4064,"byte_end":4131,"line_start":147,"line_end":147,"column_start":1,"column_end":68}},{"value":"/ Let us suppose that you construct a large number of lazy values using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4132,"byte_end":4205,"line_start":148,"line_end":148,"column_start":1,"column_end":74}},{"value":"/ only one function `f` with different values `x1`, ..., `xn` of type `T`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4206,"byte_end":4282,"line_start":149,"line_end":149,"column_start":1,"column_end":77}},{"value":"/ i.e. `lazy!(f(x1))`, ..., `lazy!(f(xn))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4283,"byte_end":4328,"line_start":150,"line_end":150,"column_start":1,"column_end":46}},{"value":"/ In this case, you may consider implementing `Evaluate` for `T` such that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4329,"byte_end":4405,"line_start":151,"line_end":151,"column_start":1,"column_end":77}},{"value":"/ `evaluate(x)` yields `f(x)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4406,"byte_end":4438,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"/ This allows you to use `Thunk::new(x)` instead of `lazy!(f(x))`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4439,"byte_end":4507,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/ saving time and space because","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4508,"byte_end":4541,"line_start":154,"line_end":154,"column_start":1,"column_end":34}},{"value":"/ any such `Thunk` will contain only `x` instead of both `f` and `x`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4542,"byte_end":4613,"line_start":155,"line_end":155,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4614,"byte_end":4617,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Let us look at an example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4618,"byte_end":4648,"line_start":157,"line_end":157,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4649,"byte_end":4652,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4653,"byte_end":4660,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # use lazy_st::{Thunk, Evaluate};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4661,"byte_end":4698,"line_start":160,"line_end":160,"column_start":1,"column_end":38}},{"value":"/ struct User(usize);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4699,"byte_end":4722,"line_start":161,"line_end":161,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4723,"byte_end":4726,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ impl Evaluate<String> for User {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4727,"byte_end":4763,"line_start":163,"line_end":163,"column_start":1,"column_end":37}},{"value":"/     fn evaluate(self) -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4764,"byte_end":4801,"line_start":164,"line_end":164,"column_start":1,"column_end":38}},{"value":"/         format!(\"User no. {}\", self.0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4802,"byte_end":4844,"line_start":165,"line_end":165,"column_start":1,"column_end":43}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4845,"byte_end":4854,"line_start":166,"line_end":166,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4855,"byte_end":4860,"line_start":167,"line_end":167,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4861,"byte_end":4864,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ let root = Thunk::new(User(0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4865,"byte_end":4900,"line_start":169,"line_end":169,"column_start":1,"column_end":36}},{"value":"/ let mere_mortal = Thunk::evaluated(String::from(\"Someone else\"));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4901,"byte_end":4970,"line_start":170,"line_end":170,"column_start":1,"column_end":70}},{"value":"/ let user = if true { root } else { mere_mortal };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":4971,"byte_end":5024,"line_start":171,"line_end":171,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(*user, \"User no. 0\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5025,"byte_end":5061,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"/ ~~~","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5062,"byte_end":5069,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5070,"byte_end":5073,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ Note that this trait is quite similar to the `Into` trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5074,"byte_end":5136,"line_start":175,"line_end":175,"column_start":1,"column_end":63}},{"value":"/ Unfortunately, it seems that we cannot use `Into` here,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5137,"byte_end":5196,"line_start":176,"line_end":176,"column_start":1,"column_end":60}},{"value":"/ because we cannot implement it for instances of `FnOnce`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5197,"byte_end":5258,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/ which is necessary for `Lazy`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5259,"byte_end":5293,"line_start":178,"line_end":178,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5325,"byte_end":5333,"line_start":180,"line_end":180,"column_start":8,"column_end":16},"name":"evaluate","qualname":"::Evaluate::evaluate","value":"pub fn evaluate(Self) -> T","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2260,"byte_end":2265,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5391,"byte_end":5392,"line_start":183,"line_end":183,"column_start":43,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5558,"byte_end":5563,"line_start":196,"line_end":196,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5932,"byte_end":5937,"line_start":210,"line_end":210,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":6193,"byte_end":6198,"line_start":225,"line_end":225,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":2260,"byte_end":2265,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":44},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5391,"byte_end":5392,"line_start":183,"line_end":183,"column_start":43,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":28},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5558,"byte_end":5563,"line_start":196,"line_end":196,"column_start":22,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":44},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":5932,"byte_end":5937,"line_start":210,"line_end":210,"column_start":22,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":44},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy-st-0.2.2/src/lib.rs","byte_start":6193,"byte_end":6198,"line_start":225,"line_end":225,"column_start":25,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":44},"to":{"krate":1,"index":2294}}]}