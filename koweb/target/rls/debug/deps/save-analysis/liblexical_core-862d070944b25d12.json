{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6","program":"/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","lexical_core","--edition=2018","/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"arrayvec\"","--cfg","feature=\"correct\"","--cfg","feature=\"default\"","--cfg","feature=\"ryu\"","--cfg","feature=\"static_assertions\"","--cfg","feature=\"std\"","--cfg","feature=\"table\"","-C","metadata=862d070944b25d12","-C","extra-filename=-862d070944b25d12","--out-dir","/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","-L","dependency=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps","--extern","arrayvec=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libarrayvec-fbe761f36f74ff46.rmeta","--extern","bitflags=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libbitflags-b92ca587e146b6d0.rmeta","--extern","cfg_if=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libcfg_if-f4ca369f7d863b9e.rmeta","--extern","ryu=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libryu-6f1439902e974c9a.rmeta","--extern","static_assertions=/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/libstatic_assertions-1ea86a8de2102781.rmeta","--cap-lints","allow","--cfg","limb_width_64","--error-format=json","--sysroot","/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kami/Programing/wasm/bachelorproject/koweb/target/rls/debug/deps/liblexical_core-862d070944b25d12.rmeta"},"prelude":{"crate_id":{"name":"lexical_core","disambiguator":[17733101748644712188,9688203411696895825]},"crate_root":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src","external_crates":[{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[1155024563974712189,5296233732488635092]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":19,"id":{"name":"arrayvec","disambiguator":[2192177813696330719,1557707845843209336]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/table.rs","num":20,"id":{"name":"static_assertions","disambiguator":[5454445224912342609,15398878863716879438]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","num":21,"id":{"name":"ryu","disambiguator":[12385791474953323649,7271826897424459808]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","num":22,"id":{"name":"bitflags","disambiguator":[5197155782297472329,411879984473129548]}}],"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":0,"byte_end":20808,"line_start":1,"line_end":572,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8307,"byte_end":8308,"line_start":198,"line_end":198,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"FromLexical, Result, ToLexical, FromLexicalLossy","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":0,"byte_end":20808,"line_start":1,"line_end":572,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":795},{"krate":0,"index":5},{"krate":0,"index":7},{"krate":0,"index":532},{"krate":0,"index":651},{"krate":0,"index":683},{"krate":0,"index":757},{"krate":0,"index":765},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793}],"decl_id":null,"docs":" Fast lexical conversion routines for a no_std environment.","sig":null,"attributes":[{"value":"/ Fast lexical conversion routines for a no_std environment.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":63,"byte_end":66,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ lexical-core is a low-level API for number-to-string and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":67,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ string-to-number conversions, without requiring a system","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":128,"byte_end":188,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/ allocator. If you would like to use a convenient, high-level","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":189,"byte_end":253,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/ API, please look at [lexical](https://crates.io/crates/lexical)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":254,"byte_end":321,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/ instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":322,"byte_end":334,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":335,"byte_end":338,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":339,"byte_end":360,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":361,"byte_end":364,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":365,"byte_end":376,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ extern crate lexical_core;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":377,"byte_end":407,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":408,"byte_end":411,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ // String to number using Rust slices.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":412,"byte_end":454,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/ // The argument is the byte string parsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":455,"byte_end":501,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"/ let f: f32 = lexical_core::parse(b\"3.5\").unwrap();   // 3.5","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":502,"byte_end":565,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ let i: i32 = lexical_core::parse(b\"15\").unwrap();    // 15","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":566,"byte_end":628,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":629,"byte_end":632,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // All lexical_core parsers are checked, they validate the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":633,"byte_end":695,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ // input data is entirely correct, and stop parsing when invalid data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":696,"byte_end":769,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ // is found, or upon numerical overflow.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":770,"byte_end":814,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ let r = lexical_core::parse::<u8>(b\"256\"); // Err(ErrorCode::Overflow.into())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":815,"byte_end":896,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ let r = lexical_core::parse::<u8>(b\"1a5\"); // Err(ErrorCode::InvalidDigit.into())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":897,"byte_end":982,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":983,"byte_end":986,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // In order to extract and parse a number from a substring of the input","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":987,"byte_end":1062,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ // data, use `parse_partial`. These functions return the parsed value and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1063,"byte_end":1140,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ // the number of processed digits, allowing you to extract and parse the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1141,"byte_end":1217,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ // number in a single pass.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1218,"byte_end":1249,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ let r = lexical_core::parse_partial::<i8>(b\"3a5\"); // Ok((3, 1))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1250,"byte_end":1318,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // If an insufficiently long buffer is passed, the serializer will panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1323,"byte_end":1400,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ // PANICS","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1401,"byte_end":1414,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ let mut buf = [b'0'; 1];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1415,"byte_end":1443,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ //let slc = lexical_core::write::<i64>(15, &mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1444,"byte_end":1501,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1502,"byte_end":1505,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // In order to guarantee the buffer is long enough, always ensure there","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1506,"byte_end":1581,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ // are at least `T::FORMATTED_SIZE` bytes, which requires the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1582,"byte_end":1647,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/ // `lexical_core::Number` trait to be in scope.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1648,"byte_end":1699,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ use lexical_core::Number;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1700,"byte_end":1729,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/ let mut buf = [b'0'; f64::FORMATTED_SIZE];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1730,"byte_end":1776,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/ let slc = lexical_core::write::<f64>(15.1, &mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1777,"byte_end":1834,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(slc, b\"15.1\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1835,"byte_end":1864,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1865,"byte_end":1868,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // When the `radix` feature is enabled, for decimal floats, using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1869,"byte_end":1938,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"/ // `T::FORMATTED_SIZE` may significantly overestimate the space","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":1939,"byte_end":2006,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/ // required to format the number. Therefore, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2007,"byte_end":2059,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ // `T::FORMATTED_SIZE_DECIMAL` constants allow you to get a much","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2060,"byte_end":2128,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ // tighter bound on the space required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2129,"byte_end":2172,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/ let mut buf = [b'0'; f64::FORMATTED_SIZE_DECIMAL];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2173,"byte_end":2227,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"/ let slc = lexical_core::write::<f64>(15.1, &mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2228,"byte_end":2285,"line_start":50,"line_end":50,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(slc, b\"15.1\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2286,"byte_end":2315,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2316,"byte_end":2323,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2324,"byte_end":2327,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Conversion API","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2328,"byte_end":2348,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2349,"byte_end":2352,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **To String**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2353,"byte_end":2370,"line_start":56,"line_end":56,"column_start":1,"column_end":18}},{"value":"/ - [`write`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2371,"byte_end":2386,"line_start":57,"line_end":57,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2447,"byte_end":2450,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **From String**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2451,"byte_end":2470,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/ - [`parse`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2471,"byte_end":2486,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"/ - [`parse_partial`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2701,"byte_end":2724,"line_start":65,"line_end":65,"column_start":1,"column_end":24}},{"value":"/ - [`parse_lossy`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":2963,"byte_end":2984,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/ - [`parse_partial_lossy`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3217,"byte_end":3246,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3503,"byte_end":3506,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Configuration Settings","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3507,"byte_end":3535,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3536,"byte_end":3539,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ **Get Configuration**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3540,"byte_end":3565,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/ - [`get_exponent_default_char`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3566,"byte_end":3601,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"/ - [`get_nan_string`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3771,"byte_end":3795,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"/ - [`get_inf_string`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3796,"byte_end":3820,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"/ - [`get_infinity_string`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3821,"byte_end":3850,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3851,"byte_end":3854,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ **Set Configuration**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3855,"byte_end":3880,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"/ - [`set_exponent_default_char`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":3881,"byte_end":3916,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/ - [`set_nan_string`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":4086,"byte_end":4110,"line_start":92,"line_end":92,"column_start":1,"column_end":25}},{"value":"/ - [`set_inf_string`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":4111,"byte_end":4135,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"/ - [`set_infinity_string`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":4136,"byte_end":4165,"line_start":94,"line_end":94,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":4166,"byte_end":4169,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`write`]: fn.write.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":4170,"byte_end":4198,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"/ [`parse`]: fn.parse.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":4278,"byte_end":4306,"line_start":98,"line_end":98,"column_start":1,"column_end":29}},{"value":"/ [`parse_partial`]: fn.parse_partial.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":4586,"byte_end":4630,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"/ [`parse_lossy`]: fn.parse_lossy.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":4958,"byte_end":4998,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"/ [`parse_partial_lossy`]: fn.parse_partial_lossy.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":5314,"byte_end":5370,"line_start":110,"line_end":110,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":5734,"byte_end":5737,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`get_exponent_default_char`]: fn.get_exponent_default_char.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":5738,"byte_end":5806,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"/ [`get_nan_string`]: fn.get_nan_string.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6034,"byte_end":6080,"line_start":118,"line_end":118,"column_start":1,"column_end":47}},{"value":"/ [`get_inf_string`]: fn.get_inf_string.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6081,"byte_end":6127,"line_start":119,"line_end":119,"column_start":1,"column_end":47}},{"value":"/ [`get_infinity_string`]: fn.get_infinity_string.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6128,"byte_end":6184,"line_start":120,"line_end":120,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6185,"byte_end":6188,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`set_exponent_default_char`]: fn.set_exponent_default_char.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6189,"byte_end":6257,"line_start":122,"line_end":122,"column_start":1,"column_end":69}},{"value":"/ [`set_nan_string`]: fn.set_nan_string.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6485,"byte_end":6531,"line_start":125,"line_end":125,"column_start":1,"column_end":47}},{"value":"/ [`set_inf_string`]: fn.set_inf_string.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6532,"byte_end":6578,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/ [`set_infinity_string`]: fn.set_infinity_string.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6579,"byte_end":6635,"line_start":127,"line_end":127,"column_start":1,"column_end":57}},{"value":"allow(unused_doc_comments)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":6681,"byte_end":6711,"line_start":130,"line_end":130,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":26848,"byte_end":26859,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"FromLexical","qualname":"::util::traits::FromLexical","value":"FromLexical: Number","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" Trait for numerical types that can be parsed from bytes.\n","sig":null,"attributes":[{"value":"/ Trait for numerical types that can be parsed from bytes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":26777,"byte_end":26837,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27416,"byte_end":27428,"line_start":39,"line_end":39,"column_start":8,"column_end":20},"name":"from_lexical","qualname":"::util::traits::FromLexical::from_lexical","value":"pub fn from_lexical(&[u8]) -> Result<Self>","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Checked parser for a string-to-number conversion.","sig":null,"attributes":[{"value":"/ Checked parser for a string-to-number conversion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":26874,"byte_end":26927,"line_start":27,"line_end":27,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":26932,"byte_end":26935,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This method parses the entire string, returning an error if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":26940,"byte_end":27003,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/ any invalid digits are found during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27008,"byte_end":27056,"line_start":30,"line_end":30,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27061,"byte_end":27064,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` containing either the parsed value,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27069,"byte_end":27127,"line_start":32,"line_end":32,"column_start":5,"column_end":63}},{"value":"/ or an error containing any errors that occurred during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27132,"byte_end":27199,"line_start":33,"line_end":33,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27204,"byte_end":27207,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Numeric overflow takes precedence over the presence of an invalid","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27212,"byte_end":27281,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ digit, and therefore may mask an invalid digit error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27286,"byte_end":27343,"line_start":36,"line_end":36,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27348,"byte_end":27351,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27356,"byte_end":27408,"line_start":38,"line_end":38,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27968,"byte_end":27988,"line_start":52,"line_end":52,"column_start":8,"column_end":28},"name":"from_lexical_partial","qualname":"::util::traits::FromLexical::from_lexical_partial","value":"pub fn from_lexical_partial(&[u8]) -> Result<(Self, usize)>","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Checked parser for a string-to-number conversion.","sig":null,"attributes":[{"value":"/ Checked parser for a string-to-number conversion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27465,"byte_end":27518,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27523,"byte_end":27526,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method parses until an invalid digit is found (or the end","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27531,"byte_end":27597,"line_start":43,"line_end":43,"column_start":5,"column_end":71}},{"value":"/ of the string), returning the number of processed digits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27602,"byte_end":27662,"line_start":44,"line_end":44,"column_start":5,"column_end":65}},{"value":"/ and the parsed value until that point.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27667,"byte_end":27709,"line_start":45,"line_end":45,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27714,"byte_end":27717,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` containing either the parsed value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27722,"byte_end":27779,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ and the number of processed digits, or an error containing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27784,"byte_end":27846,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/ any errors that occurred during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27851,"byte_end":27895,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27900,"byte_end":27903,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":27908,"byte_end":27960,"line_start":51,"line_end":51,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30594,"byte_end":30610,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"name":"FromLexicalLossy","qualname":"::util::traits::FromLexicalLossy","value":"FromLexicalLossy: FromLexical","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" Trait for floating-point types that can be parsed using lossy algorithms from bytes.\n","sig":null,"attributes":[{"value":"/ Trait for floating-point types that can be parsed using lossy algorithms from bytes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30495,"byte_end":30583,"line_start":129,"line_end":129,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31113,"byte_end":31131,"line_start":141,"line_end":141,"column_start":8,"column_end":26},"name":"from_lexical_lossy","qualname":"::util::traits::FromLexicalLossy::from_lexical_lossy","value":"pub fn from_lexical_lossy(&[u8]) -> Result<Self>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Lossy, checked parser for a string-to-number conversion.","sig":null,"attributes":[{"value":"/ Lossy, checked parser for a string-to-number conversion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30630,"byte_end":30690,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30695,"byte_end":30698,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This method parses the entire string, returning an error if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30703,"byte_end":30766,"line_start":133,"line_end":133,"column_start":5,"column_end":68}},{"value":"/ any invalid digits are found during parsing. This parser is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30771,"byte_end":30834,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ lossy, so numerical rounding may occur during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30839,"byte_end":30897,"line_start":135,"line_end":135,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30902,"byte_end":30905,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` containing either the parsed value,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30910,"byte_end":30968,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/ or an error containing any errors that occurred during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30973,"byte_end":31040,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31045,"byte_end":31048,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31053,"byte_end":31105,"line_start":140,"line_end":140,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31756,"byte_end":31782,"line_start":155,"line_end":155,"column_start":8,"column_end":34},"name":"from_lexical_partial_lossy","qualname":"::util::traits::FromLexicalLossy::from_lexical_partial_lossy","value":"pub fn from_lexical_partial_lossy(&[u8]) -> Result<(Self, usize)>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Lossy, checked parser for a string-to-number conversion.","sig":null,"attributes":[{"value":"/ Lossy, checked parser for a string-to-number conversion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31168,"byte_end":31228,"line_start":143,"line_end":143,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31233,"byte_end":31236,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This method parses until an invalid digit is found (or the end","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31241,"byte_end":31307,"line_start":145,"line_end":145,"column_start":5,"column_end":71}},{"value":"/ of the string), returning the number of processed digits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31312,"byte_end":31372,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ and the parsed value until that point. This parser is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31377,"byte_end":31434,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"/ lossy, so numerical rounding may occur during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31439,"byte_end":31497,"line_start":148,"line_end":148,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31502,"byte_end":31505,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns a `Result` containing either the parsed value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31510,"byte_end":31567,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"/ and the number of processed digits, or an error containing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31572,"byte_end":31634,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ any errors that occurred during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31639,"byte_end":31683,"line_start":152,"line_end":152,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31688,"byte_end":31691,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":31696,"byte_end":31748,"line_start":154,"line_end":154,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44604,"byte_end":44613,"line_start":476,"line_end":476,"column_start":11,"column_end":20},"name":"ToLexical","qualname":"::util::traits::ToLexical","value":"ToLexical: Number","parent":null,"children":[{"krate":0,"index":33}],"decl_id":null,"docs":" Trait for numerical types that can be serialized to bytes.","sig":null,"attributes":[{"value":"/ Trait for numerical types that can be serialized to bytes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44161,"byte_end":44223,"line_start":467,"line_end":467,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44224,"byte_end":44227,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ To determine the number of bytes required to serialize a value to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44228,"byte_end":44297,"line_start":469,"line_end":469,"column_start":1,"column_end":70}},{"value":"/ string, check the associated constants from a required trait:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44298,"byte_end":44363,"line_start":470,"line_end":470,"column_start":1,"column_end":66}},{"value":"/ - [`FORMATTED_SIZE`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44364,"byte_end":44388,"line_start":471,"line_end":471,"column_start":1,"column_end":25}},{"value":"/ - [`FORMATTED_SIZE_DECIMAL`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44389,"byte_end":44421,"line_start":472,"line_end":472,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44422,"byte_end":44425,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ [`FORMATTED_SIZE`]: trait.Number.html#associatedconstant.FORMATTED_SIZE","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44426,"byte_end":44501,"line_start":474,"line_end":474,"column_start":1,"column_end":76}},{"value":"/ [`FORMATTED_SIZE_DECIMAL`]: trait.Number.html#associatedconstant.FORMATTED_SIZE_DECIMAL","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44502,"byte_end":44593,"line_start":475,"line_end":475,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":45332,"byte_end":45342,"line_start":493,"line_end":493,"column_start":8,"column_end":18},"name":"to_lexical","qualname":"::util::traits::ToLexical::to_lexical","value":"pub fn to_lexical<'a>(Self, &'a mut [u8]) -> &'a mut [u8]","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Serializer for a number-to-string conversion.","sig":null,"attributes":[{"value":"/ Serializer for a number-to-string conversion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44628,"byte_end":44677,"line_start":477,"line_end":477,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44682,"byte_end":44685,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Returns a subslice of the input buffer containing the written bytes,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44690,"byte_end":44762,"line_start":479,"line_end":479,"column_start":5,"column_end":77}},{"value":"/ starting from the same address in memory as the input slice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44767,"byte_end":44831,"line_start":480,"line_end":480,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44836,"byte_end":44839,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * `value`   - Number to serialize.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44844,"byte_end":44882,"line_start":482,"line_end":482,"column_start":5,"column_end":43}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44887,"byte_end":44939,"line_start":483,"line_end":483,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44944,"byte_end":44947,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44952,"byte_end":44964,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44969,"byte_end":44972,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Panics if the buffer is not of sufficient size. The caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44977,"byte_end":45039,"line_start":487,"line_end":487,"column_start":5,"column_end":67}},{"value":"/ must provide a slice of sufficient size. In order to ensure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":45044,"byte_end":45107,"line_start":488,"line_end":488,"column_start":5,"column_end":68}},{"value":"/ the function will not panic, ensure the buffer has at least","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":45112,"byte_end":45175,"line_start":489,"line_end":489,"column_start":5,"column_end":68}},{"value":"/ [`FORMATTED_SIZE_DECIMAL`] elements.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":45180,"byte_end":45220,"line_start":490,"line_end":490,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":45225,"byte_end":45228,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`FORMATTED_SIZE_DECIMAL`]: trait.Number.html#associatedconstant.FORMATTED_SIZE_DECIMAL","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":45233,"byte_end":45324,"line_start":492,"line_end":492,"column_start":5,"column_end":96}}]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":58284,"byte_end":58290,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"AsCast","qualname":"::util::cast::AsCast","value":"AsCast: AsPrimitive","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":58220,"byte_end":58273,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":58433,"byte_end":58440,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"as_cast","qualname":"::util::cast::AsCast::as_cast","value":"pub fn as_cast<N: AsPrimitive>(N) -> Self","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `AsPrimitive` trait.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":58310,"byte_end":58376,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `AsPrimitive` trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":58381,"byte_end":58425,"line_start":21,"line_end":21,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":59304,"byte_end":59311,"line_start":61,"line_end":61,"column_start":11,"column_end":18},"name":"TryCast","qualname":"::util::cast::TryCast","value":"TryCast<T>: Sized","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" Non-lossy cast between types. Returns None if new type cannot represent value.\n","sig":null,"attributes":[{"value":"/ Non-lossy cast between types. Returns None if new type cannot represent value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":59211,"byte_end":59293,"line_start":60,"line_end":60,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":59389,"byte_end":59397,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"try_cast","qualname":"::util::cast::TryCast::try_cast","value":"pub fn try_cast(Self) -> Option<T>","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Consume self and return the cast value (or None).\n","sig":null,"attributes":[{"value":"/ Consume self and return the cast value (or None).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":59328,"byte_end":59381,"line_start":62,"line_end":62,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":95},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103539,"byte_end":103564,"line_start":148,"line_end":148,"column_start":8,"column_end":33},"name":"get_exponent_default_char","qualname":"::util::config::get_exponent_default_char","value":"pub fn get_exponent_default_char() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get default character for the exponent symbol.","sig":null,"attributes":[{"value":"/ Get default character for the exponent symbol.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103392,"byte_end":103442,"line_start":144,"line_end":144,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103443,"byte_end":103446,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Default character for scientific notation, used when the `radix < 15`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103447,"byte_end":103521,"line_start":146,"line_end":146,"column_start":1,"column_end":75}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103522,"byte_end":103531,"line_start":147,"line_end":147,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":104192,"byte_end":104217,"line_start":173,"line_end":173,"column_start":15,"column_end":40},"name":"set_exponent_default_char","qualname":"::util::config::set_exponent_default_char","value":"pub unsafe fn set_exponent_default_char(u8)","parent":null,"children":[],"decl_id":null,"docs":" Set the default character for the exponent symbol.","sig":null,"attributes":[{"value":"/ Set the default character for the exponent symbol.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103627,"byte_end":103681,"line_start":155,"line_end":155,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103682,"byte_end":103685,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Default character for scientific notation, used when the `radix < 15`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103686,"byte_end":103760,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103761,"byte_end":103764,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ To change the expected, default character for an exponent,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103765,"byte_end":103827,"line_start":159,"line_end":159,"column_start":1,"column_end":63}},{"value":"/ change this value before using lexical.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103828,"byte_end":103871,"line_start":160,"line_end":160,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103872,"byte_end":103875,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ * `ch`      - Character for exponent symbol.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103876,"byte_end":103924,"line_start":162,"line_end":162,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103925,"byte_end":103928,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103929,"byte_end":103941,"line_start":164,"line_end":164,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103942,"byte_end":103945,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Do not call this function in threaded-code, as it is not thread-safe.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":103946,"byte_end":104019,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ Do not call this function after compiling any formats.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":104020,"byte_end":104078,"line_start":167,"line_end":167,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":104079,"byte_end":104082,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":104083,"byte_end":104095,"line_start":169,"line_end":169,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":104096,"byte_end":104099,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Panics if the character is in the character set `[A-Da-d.+\\-]`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":104100,"byte_end":104167,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":104168,"byte_end":104177,"line_start":172,"line_end":172,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106419,"byte_end":106433,"line_start":250,"line_end":250,"column_start":8,"column_end":22},"name":"get_nan_string","qualname":"::util::config::get_nan_string","value":"pub fn get_nan_string() -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get string representation of Not a Number as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get string representation of Not a Number as a byte slice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106339,"byte_end":106401,"line_start":248,"line_end":248,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106402,"byte_end":106411,"line_start":249,"line_end":249,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":98},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106917,"byte_end":106931,"line_start":272,"line_end":272,"column_start":15,"column_end":29},"name":"set_nan_string","qualname":"::util::config::set_nan_string","value":"pub unsafe fn set_nan_string(&[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set representation of Not a Number from a byte slice.","sig":null,"attributes":[{"value":"/ Set representation of Not a Number from a byte slice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106507,"byte_end":106564,"line_start":257,"line_end":257,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106565,"byte_end":106568,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ * `bytes`    - Slice of bytes to assign as NaN string representation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106569,"byte_end":106642,"line_start":259,"line_end":259,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106643,"byte_end":106646,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106647,"byte_end":106659,"line_start":261,"line_end":261,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106660,"byte_end":106663,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ Do not call this function in threaded-code, as it is not thread-safe.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106664,"byte_end":106737,"line_start":263,"line_end":263,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106738,"byte_end":106741,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106742,"byte_end":106754,"line_start":265,"line_end":265,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106755,"byte_end":106758,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ Panics if:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106759,"byte_end":106773,"line_start":267,"line_end":267,"column_start":1,"column_end":15}},{"value":"/ - `bytes.len() >= f32::FORMATTED_SIZE`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106774,"byte_end":106816,"line_start":268,"line_end":268,"column_start":1,"column_end":43}},{"value":"/ - `bytes` is empty","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106817,"byte_end":106839,"line_start":269,"line_end":269,"column_start":1,"column_end":23}},{"value":"/ - `bytes` does not start with an `'N'` or `'n'`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106840,"byte_end":106892,"line_start":270,"line_end":270,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":106893,"byte_end":106902,"line_start":271,"line_end":271,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107110,"byte_end":107124,"line_start":280,"line_end":280,"column_start":8,"column_end":22},"name":"get_inf_string","qualname":"::util::config::get_inf_string","value":"pub fn get_inf_string() -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the short representation of an Infinity literal as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get the short representation of an Infinity literal as a byte slice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107020,"byte_end":107092,"line_start":278,"line_end":278,"column_start":1,"column_end":73}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107093,"byte_end":107102,"line_start":279,"line_end":279,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107670,"byte_end":107684,"line_start":303,"line_end":303,"column_start":15,"column_end":29},"name":"set_inf_string","qualname":"::util::config::set_inf_string","value":"pub unsafe fn set_inf_string(&[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set the short representation of Infinity from a byte slice.","sig":null,"attributes":[{"value":"/ Set the short representation of Infinity from a byte slice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107198,"byte_end":107261,"line_start":287,"line_end":287,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107262,"byte_end":107265,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ * `bytes`    - Slice of bytes to assign as Infinity string representation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107266,"byte_end":107344,"line_start":289,"line_end":289,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107345,"byte_end":107348,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107349,"byte_end":107361,"line_start":291,"line_end":291,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107362,"byte_end":107365,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Do not call this function in threaded-code, as it is not thread-safe.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107366,"byte_end":107439,"line_start":293,"line_end":293,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107440,"byte_end":107443,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107444,"byte_end":107456,"line_start":295,"line_end":295,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107457,"byte_end":107460,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ Panics if:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107461,"byte_end":107475,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/ - `bytes.len() >= f32::FORMATTED_SIZE`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107476,"byte_end":107518,"line_start":298,"line_end":298,"column_start":1,"column_end":43}},{"value":"/ - `bytes.len() >= get_infinity_string().len()`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107519,"byte_end":107569,"line_start":299,"line_end":299,"column_start":1,"column_end":51}},{"value":"/ - `bytes` is empty","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107570,"byte_end":107592,"line_start":300,"line_end":300,"column_start":1,"column_end":23}},{"value":"/ - `bytes` does not start with an `'I'` or `'i'`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107593,"byte_end":107645,"line_start":301,"line_end":301,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107646,"byte_end":107655,"line_start":302,"line_end":302,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":101},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107903,"byte_end":107922,"line_start":311,"line_end":311,"column_start":8,"column_end":27},"name":"get_infinity_string","qualname":"::util::config::get_infinity_string","value":"pub fn get_infinity_string() -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the long representation of an Infinity literal as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get the long representation of an Infinity literal as a byte slice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107814,"byte_end":107885,"line_start":309,"line_end":309,"column_start":1,"column_end":72}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":107886,"byte_end":107895,"line_start":310,"line_end":310,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108466,"byte_end":108485,"line_start":334,"line_end":334,"column_start":15,"column_end":34},"name":"set_infinity_string","qualname":"::util::config::set_infinity_string","value":"pub unsafe fn set_infinity_string(&[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set the long representation of Infinity from a byte slice.","sig":null,"attributes":[{"value":"/ Set the long representation of Infinity from a byte slice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108001,"byte_end":108063,"line_start":318,"line_end":318,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108064,"byte_end":108067,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * `bytes`    - Slice of bytes to assign as Infinity string representation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108068,"byte_end":108146,"line_start":320,"line_end":320,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108147,"byte_end":108150,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108151,"byte_end":108163,"line_start":322,"line_end":322,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108164,"byte_end":108167,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ Do not call this function in threaded-code, as it is not thread-safe.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108168,"byte_end":108241,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108242,"byte_end":108245,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108246,"byte_end":108258,"line_start":326,"line_end":326,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108259,"byte_end":108262,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ Panics if:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108263,"byte_end":108277,"line_start":328,"line_end":328,"column_start":1,"column_end":15}},{"value":"/ - `bytes.len() >= f32::FORMATTED_SIZE`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108278,"byte_end":108320,"line_start":329,"line_end":329,"column_start":1,"column_end":43}},{"value":"/ - `bytes.len() < get_inf_string().len()`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108321,"byte_end":108365,"line_start":330,"line_end":330,"column_start":1,"column_end":45}},{"value":"/ - `bytes` is empty","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108366,"byte_end":108388,"line_start":331,"line_end":331,"column_start":1,"column_end":23}},{"value":"/ - `bytes` does not start with an `'I'` or `'i'`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108389,"byte_end":108441,"line_start":332,"line_end":332,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":108442,"byte_end":108451,"line_start":333,"line_end":333,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":115},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":112610,"byte_end":112621,"line_start":412,"line_end":412,"column_start":11,"column_end":22},"name":"BUFFER_SIZE","qualname":"::util::config::BUFFER_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of bytes required to serialize any number to string.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes required to serialize any number to string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":112528,"byte_end":112599,"line_start":411,"line_end":411,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1342},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195901,"byte_end":195909,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::util::error::ErrorCode::Overflow","value":"ErrorCode::Overflow","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Integral overflow occurred during numeric parsing.","sig":null,"attributes":[{"value":"/ Integral overflow occurred during numeric parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195745,"byte_end":195799,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195804,"byte_end":195807,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Numeric overflow takes precedence over the presence of an invalid","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195812,"byte_end":195881,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ digit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195886,"byte_end":195896,"line_start":36,"line_end":36,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196077,"byte_end":196086,"line_start":42,"line_end":42,"column_start":5,"column_end":14},"name":"Underflow","qualname":"::util::error::ErrorCode::Underflow","value":"ErrorCode::Underflow","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Integral underflow occurred during numeric parsing.","sig":null,"attributes":[{"value":"/ Integral underflow occurred during numeric parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195920,"byte_end":195975,"line_start":38,"line_end":38,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195980,"byte_end":195983,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Numeric overflow takes precedence over the presence of an invalid","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195988,"byte_end":196057,"line_start":40,"line_end":40,"column_start":5,"column_end":74}},{"value":"/ digit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196062,"byte_end":196072,"line_start":41,"line_end":41,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1348},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196152,"byte_end":196164,"line_start":44,"line_end":44,"column_start":5,"column_end":17},"name":"InvalidDigit","qualname":"::util::error::ErrorCode::InvalidDigit","value":"ErrorCode::InvalidDigit","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Invalid digit found before string termination.\n","sig":null,"attributes":[{"value":"/ Invalid digit found before string termination.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196097,"byte_end":196147,"line_start":43,"line_end":43,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196207,"byte_end":196212,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"Empty","qualname":"::util::error::ErrorCode::Empty","value":"ErrorCode::Empty","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Empty byte array found.\n","sig":null,"attributes":[{"value":"/ Empty byte array found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196175,"byte_end":196202,"line_start":45,"line_end":45,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1354},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196253,"byte_end":196266,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"EmptyMantissa","qualname":"::util::error::ErrorCode::EmptyMantissa","value":"ErrorCode::EmptyMantissa","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Empty mantissa found.\n","sig":null,"attributes":[{"value":"/ Empty mantissa found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196223,"byte_end":196248,"line_start":47,"line_end":47,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196307,"byte_end":196320,"line_start":50,"line_end":50,"column_start":5,"column_end":18},"name":"EmptyExponent","qualname":"::util::error::ErrorCode::EmptyExponent","value":"ErrorCode::EmptyExponent","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Empty exponent found.\n","sig":null,"attributes":[{"value":"/ Empty exponent found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196277,"byte_end":196302,"line_start":49,"line_end":49,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1360},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196360,"byte_end":196372,"line_start":52,"line_end":52,"column_start":5,"column_end":17},"name":"EmptyInteger","qualname":"::util::error::ErrorCode::EmptyInteger","value":"ErrorCode::EmptyInteger","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Empty integer found.\n","sig":null,"attributes":[{"value":"/ Empty integer found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196331,"byte_end":196355,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196413,"byte_end":196426,"line_start":54,"line_end":54,"column_start":5,"column_end":18},"name":"EmptyFraction","qualname":"::util::error::ErrorCode::EmptyFraction","value":"ErrorCode::EmptyFraction","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Empty fraction found.\n","sig":null,"attributes":[{"value":"/ Empty fraction found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196383,"byte_end":196408,"line_start":53,"line_end":53,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1366},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196487,"byte_end":196514,"line_start":56,"line_end":56,"column_start":5,"column_end":32},"name":"InvalidPositiveMantissaSign","qualname":"::util::error::ErrorCode::InvalidPositiveMantissaSign","value":"ErrorCode::InvalidPositiveMantissaSign","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Invalid positive mantissa sign was found.\n","sig":null,"attributes":[{"value":"/ Invalid positive mantissa sign was found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196437,"byte_end":196482,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1369},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196576,"byte_end":196595,"line_start":58,"line_end":58,"column_start":5,"column_end":24},"name":"MissingMantissaSign","qualname":"::util::error::ErrorCode::MissingMantissaSign","value":"ErrorCode::MissingMantissaSign","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Mantissa sign was required, but not found.\n","sig":null,"attributes":[{"value":"/ Mantissa sign was required, but not found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196525,"byte_end":196571,"line_start":57,"line_end":57,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1372},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196653,"byte_end":196668,"line_start":60,"line_end":60,"column_start":5,"column_end":20},"name":"InvalidExponent","qualname":"::util::error::ErrorCode::InvalidExponent","value":"ErrorCode::InvalidExponent","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Exponent was present but not allowed.\n","sig":null,"attributes":[{"value":"/ Exponent was present but not allowed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196607,"byte_end":196648,"line_start":59,"line_end":59,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1375},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196730,"byte_end":196757,"line_start":62,"line_end":62,"column_start":5,"column_end":32},"name":"InvalidPositiveExponentSign","qualname":"::util::error::ErrorCode::InvalidPositiveExponentSign","value":"ErrorCode::InvalidPositiveExponentSign","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Invalid positive exponent sign was found.\n","sig":null,"attributes":[{"value":"/ Invalid positive exponent sign was found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196680,"byte_end":196725,"line_start":61,"line_end":61,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1378},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196820,"byte_end":196839,"line_start":64,"line_end":64,"column_start":5,"column_end":24},"name":"MissingExponentSign","qualname":"::util::error::ErrorCode::MissingExponentSign","value":"ErrorCode::MissingExponentSign","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Exponent sign was required, but not found.\n","sig":null,"attributes":[{"value":"/ Exponent sign was required, but not found.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196769,"byte_end":196815,"line_start":63,"line_end":63,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1381},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196908,"byte_end":196931,"line_start":66,"line_end":66,"column_start":5,"column_end":28},"name":"ExponentWithoutFraction","qualname":"::util::error::ErrorCode::ExponentWithoutFraction","value":"ErrorCode::ExponentWithoutFraction","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Exponent was present without fraction component.\n","sig":null,"attributes":[{"value":"/ Exponent was present without fraction component.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196851,"byte_end":196903,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1384},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196986,"byte_end":197005,"line_start":68,"line_end":68,"column_start":5,"column_end":24},"name":"InvalidLeadingZeros","qualname":"::util::error::ErrorCode::InvalidLeadingZeros","value":"ErrorCode::InvalidLeadingZeros","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":" Integer had invalid leading zeros.\n","sig":null,"attributes":[{"value":"/ Integer had invalid leading zeros.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":196943,"byte_end":196981,"line_start":67,"line_end":67,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1387},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197160,"byte_end":197175,"line_start":73,"line_end":73,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::util::error::ErrorCode::__Nonexhaustive","value":"ErrorCode::__Nonexhaustive","parent":{"krate":0,"index":1341},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1341},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195729,"byte_end":195738,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"ErrorCode","qualname":"::util::error::ErrorCode","value":"pub enum ErrorCode {\n\n    /// Integral overflow occurred during numeric parsing.\n    ///\n    /// Numeric overflow takes precedence over the presence of an invalid\n    /// digit.\n    Overflow = ,\n\n    /// Integral underflow occurred during numeric parsing.\n    ///\n    /// Numeric overflow takes precedence over the presence of an invalid\n    /// digit.\n    Underflow = ,\n\n    /// Invalid digit found before string termination.\n    InvalidDigit = ,\n\n    /// Empty byte array found.\n    Empty = ,\n\n    /// Empty mantissa found.\n    EmptyMantissa = ,\n\n    /// Empty exponent found.\n    EmptyExponent = ,\n\n    /// Empty integer found.\n    EmptyInteger = ,\n\n    /// Empty fraction found.\n    EmptyFraction = ,\n\n    /// Invalid positive mantissa sign was found.\n    InvalidPositiveMantissaSign = ,\n\n    /// Mantissa sign was required, but not found.\n    MissingMantissaSign = ,\n\n    /// Exponent was present but not allowed.\n    InvalidExponent = ,\n\n    /// Invalid positive exponent sign was found.\n    InvalidPositiveExponentSign = ,\n\n    /// Exponent sign was required, but not found.\n    MissingExponentSign = ,\n\n    /// Exponent was present without fraction component.\n    ExponentWithoutFraction = ,\n\n    /// Integer had invalid leading zeros.\n    InvalidLeadingZeros = ,\n\n    #[doc(hidden)]\n    __Nonexhaustive = ,\n}","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387}],"decl_id":null,"docs":" Error code, indicating failure type.","sig":null,"attributes":[{"value":"/ Error code, indicating failure type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":194964,"byte_end":195004,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195005,"byte_end":195008,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Error messages are designating by an error code of less than 0.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195009,"byte_end":195076,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ This is to be compatible with C conventions. This enumeration is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195077,"byte_end":195145,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ FFI-compatible for interfacing with C code.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195146,"byte_end":195193,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195194,"byte_end":195197,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # FFI","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195198,"byte_end":195207,"line_start":14,"line_end":14,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195208,"byte_end":195211,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ For interfacing with FFI-code, this may be approximated by:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195212,"byte_end":195275,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195276,"byte_end":195287,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ const int32_t OVERFLOW = -1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195288,"byte_end":195320,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ const int32_t UNDERFLOW = -2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195321,"byte_end":195354,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ const int32_t INVALID_DIGIT = -3;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195355,"byte_end":195392,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ const int32_t EMPTY = -4;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195393,"byte_end":195422,"line_start":21,"line_end":21,"column_start":1,"column_end":30}},{"value":"/ const int32_t EMPTY_FRACTION = -5;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195423,"byte_end":195461,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ const int32_t EMPTY_EXPONENT = -6;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195462,"byte_end":195500,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195501,"byte_end":195508,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195509,"byte_end":195512,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195513,"byte_end":195525,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195526,"byte_end":195529,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Assigning any value outside the range `[-6, -1]` to value of type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195530,"byte_end":195599,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ ErrorCode may invoke undefined-behavior.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195600,"byte_end":195644,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"repr(i32)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":195645,"byte_end":195657,"line_start":30,"line_end":30,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1405},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197373,"byte_end":197378,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Error","qualname":"::util::error::Error","value":"Error { code, index }","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407}],"decl_id":null,"docs":" Error type for lexical parsing.","sig":null,"attributes":[{"value":"/ Error type for lexical parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197187,"byte_end":197222,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197223,"byte_end":197226,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This error is FFI-compatible for interfacing with C code.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197227,"byte_end":197288,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"repr(C)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197289,"byte_end":197299,"line_start":79,"line_end":79,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1406},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197448,"byte_end":197452,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"code","qualname":"::util::error::Error::code","value":"util::error::ErrorCode","parent":{"krate":0,"index":1405},"children":[],"decl_id":null,"docs":" Error code designating the type of error occurred.\n","sig":null,"attributes":[{"value":"/ Error code designating the type of error occurred.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197385,"byte_end":197439,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1407},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197532,"byte_end":197537,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"name":"index","qualname":"::util::error::Error::index","value":"usize","parent":{"krate":0,"index":1405},"children":[],"decl_id":null,"docs":" Optional position within the buffer for the error.\n","sig":null,"attributes":[{"value":"/ Optional position within the buffer for the error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197469,"byte_end":197523,"line_start":84,"line_end":84,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3878},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","byte_start":11162783,"byte_end":11162795,"line_start":9,"line_end":9,"column_start":16,"column_end":28},"name":"NumberFormat","qualname":"::util::format::not_feature_format::NumberFormat","value":"NumberFormat {  }","parent":null,"children":[{"krate":0,"index":3879}],"decl_id":null,"docs":" Dummy bitflags for the float format.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3917},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","byte_start":11162817,"byte_end":11162832,"line_start":10,"line_end":10,"column_start":15,"column_end":30},"name":"__NONEXHAUSTIVE","qualname":"::util::format::not_feature_format::NumberFormat::__NONEXHAUSTIVE","value":"NumberFormat","parent":{"krate":0,"index":3916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","byte_start":11162893,"byte_end":11162901,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"standard","qualname":"<NumberFormat>::standard","value":"pub fn standard() -> Option<NumberFormat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","byte_start":11162872,"byte_end":11162881,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","byte_start":11163000,"byte_end":11163015,"line_start":22,"line_end":22,"column_start":12,"column_end":27},"name":"digit_separator","qualname":"<NumberFormat>::digit_separator","value":"pub fn digit_separator(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","byte_start":11162979,"byte_end":11162988,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":190},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218225,"byte_end":218231,"line_start":17,"line_end":17,"column_start":11,"column_end":17},"name":"Number","qualname":"::util::num::Number","value":"Number: Primitive + iter::Product + iter::Sum + ops::Add<Output = Self> +\nops::AddAssign + ops::Div<Output = Self> + ops::DivAssign + ops::Mul<Output =\nSelf> + ops::MulAssign + ops::Rem<Output = Self> + ops::RemAssign +\nops::Sub<Output = Self> + ops::SubAssign","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193}],"decl_id":null,"docs":" Numerical type trait.\n","sig":null,"attributes":[{"value":"/ Numerical type trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218174,"byte_end":218199,"line_start":15,"line_end":15,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218645,"byte_end":218659,"line_start":34,"line_end":34,"column_start":11,"column_end":25},"name":"FORMATTED_SIZE","qualname":"::util::num::Number::FORMATTED_SIZE","value":"usize","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Maximum number of bytes required to serialize a number to string.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes required to serialize a number to string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218565,"byte_end":218634,"line_start":33,"line_end":33,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218762,"byte_end":218784,"line_start":36,"line_end":36,"column_start":11,"column_end":33},"name":"FORMATTED_SIZE_DECIMAL","qualname":"::util::num::Number::FORMATTED_SIZE_DECIMAL","value":"usize","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Maximum number of bytes required to serialize a number to a decimal string.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes required to serialize a number to a decimal string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218672,"byte_end":218751,"line_start":35,"line_end":35,"column_start":5,"column_end":84}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218859,"byte_end":218868,"line_start":38,"line_end":38,"column_start":11,"column_end":20},"name":"IS_SIGNED","qualname":"::util::num::Number::IS_SIGNED","value":"bool","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" If the type can hold a signed (negative) value.\n","sig":null,"attributes":[{"value":"/ If the type can hold a signed (negative) value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218797,"byte_end":218848,"line_start":37,"line_end":37,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":195},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220186,"byte_end":220193,"line_start":72,"line_end":72,"column_start":11,"column_end":18},"name":"Integer","qualname":"::util::num::Integer","value":"Integer: Number + Eq + Ord + fmt::Octal + fmt::LowerHex + fmt::UpperHex +\nops::BitAnd<Output = Self> + ops::BitAndAssign + ops::BitOr<Output = Self> +\nops::BitOrAssign + ops::BitXor<Output = Self> + ops::BitXorAssign + ops::Not +\nops::Shl<Self, Output = Self> + ops::Shl<u8, Output = Self> + ops::Shl<u16,\nOutput = Self> + ops::Shl<u32, Output = Self> + ops::Shl<u64, Output = Self> +\nops::Shl<usize, Output = Self> + ops::Shl<i8, Output = Self> + ops::Shl<i16,\nOutput = Self> + ops::Shl<i64, Output = Self> + ops::Shl<isize, Output =\nSelf> + ops::Shl<i32, Output = Self> + ops::ShlAssign<Self> +\nops::ShlAssign<u8> + ops::ShlAssign<u16> + ops::ShlAssign<u32> +\nops::ShlAssign<u64> + ops::ShlAssign<usize> + ops::ShlAssign<i8> +\nops::ShlAssign<i16> + ops::ShlAssign<i32> + ops::ShlAssign<i64> +\nops::ShlAssign<isize> + ops::Shr<Self, Output = Self> + ops::Shr<u8, Output =\nSelf> + ops::Shr<u16, Output = Self> + ops::Shr<u32, Output = Self> +\nops::Shr<u64, Output = Self> + ops::Shr<usize, Output = Self> + ops::Shr<i8,\nOutput = Self> + ops::Shr<i16, Output = Self> + ops::Shr<i64, Output = Self> +\nops::Shr<isize, Output = Self> + ops::Shr<i32, Output = Self> +\nops::ShrAssign<Self> + ops::ShrAssign<u8> + ops::ShrAssign<u16> +\nops::ShrAssign<u32> + ops::ShrAssign<u64> + ops::ShrAssign<usize> +\nops::ShrAssign<i8> + ops::ShrAssign<i16> + ops::ShrAssign<i32> +\nops::ShrAssign<i64> + ops::ShrAssign<isize>","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"decl_id":null,"docs":" Defines a trait that supports integral operations.\n","sig":null,"attributes":[{"value":"/ Defines a trait that supports integral operations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220106,"byte_end":220160,"line_start":70,"line_end":70,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221828,"byte_end":221832,"line_start":131,"line_end":131,"column_start":11,"column_end":15},"name":"ZERO","qualname":"::util::num::Integer::ZERO","value":"Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221850,"byte_end":221853,"line_start":132,"line_end":132,"column_start":11,"column_end":14},"name":"ONE","qualname":"::util::num::Integer::ONE","value":"Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221871,"byte_end":221874,"line_start":133,"line_end":133,"column_start":11,"column_end":14},"name":"TWO","qualname":"::util::num::Integer::TWO","value":"Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221892,"byte_end":221895,"line_start":134,"line_end":134,"column_start":11,"column_end":14},"name":"MAX","qualname":"::util::num::Integer::MAX","value":"Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221913,"byte_end":221916,"line_start":135,"line_end":135,"column_start":11,"column_end":14},"name":"MIN","qualname":"::util::num::Integer::MIN","value":"Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221934,"byte_end":221938,"line_start":136,"line_end":136,"column_start":11,"column_end":15},"name":"BITS","qualname":"::util::num::Integer::BITS","value":"usize","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221984,"byte_end":221993,"line_start":139,"line_end":139,"column_start":8,"column_end":17},"name":"max_value","qualname":"::util::num::Integer::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222012,"byte_end":222021,"line_start":140,"line_end":140,"column_start":8,"column_end":17},"name":"min_value","qualname":"::util::num::Integer::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222040,"byte_end":222050,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::util::num::Integer::count_ones","value":"pub fn count_ones(Self) -> u32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222072,"byte_end":222083,"line_start":142,"line_end":142,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::util::num::Integer::count_zeros","value":"pub fn count_zeros(Self) -> u32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222105,"byte_end":222118,"line_start":143,"line_end":143,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::util::num::Integer::leading_zeros","value":"pub fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222140,"byte_end":222154,"line_start":144,"line_end":144,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::util::num::Integer::trailing_zeros","value":"pub fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222176,"byte_end":222179,"line_start":145,"line_end":145,"column_start":8,"column_end":11},"name":"pow","qualname":"::util::num::Integer::pow","value":"pub fn pow(Self, u32) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222210,"byte_end":222221,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::util::num::Integer::checked_add","value":"pub fn checked_add(Self, Self) -> Option<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222261,"byte_end":222272,"line_start":147,"line_end":147,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::util::num::Integer::checked_sub","value":"pub fn checked_sub(Self, Self) -> Option<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222312,"byte_end":222323,"line_start":148,"line_end":148,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::util::num::Integer::checked_mul","value":"pub fn checked_mul(Self, Self) -> Option<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222363,"byte_end":222374,"line_start":149,"line_end":149,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::util::num::Integer::checked_div","value":"pub fn checked_div(Self, Self) -> Option<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222414,"byte_end":222425,"line_start":150,"line_end":150,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::util::num::Integer::checked_rem","value":"pub fn checked_rem(Self, Self) -> Option<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222465,"byte_end":222476,"line_start":151,"line_end":151,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::util::num::Integer::checked_neg","value":"pub fn checked_neg(Self) -> Option<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222507,"byte_end":222518,"line_start":152,"line_end":152,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::util::num::Integer::checked_shl","value":"pub fn checked_shl(Self, u32) -> Option<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222557,"byte_end":222568,"line_start":153,"line_end":153,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::util::num::Integer::checked_shr","value":"pub fn checked_shr(Self, u32) -> Option<Self>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222607,"byte_end":222619,"line_start":154,"line_end":154,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::util::num::Integer::wrapping_add","value":"pub fn wrapping_add(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222651,"byte_end":222663,"line_start":155,"line_end":155,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::util::num::Integer::wrapping_sub","value":"pub fn wrapping_sub(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222695,"byte_end":222707,"line_start":156,"line_end":156,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::util::num::Integer::wrapping_mul","value":"pub fn wrapping_mul(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222739,"byte_end":222751,"line_start":157,"line_end":157,"column_start":8,"column_end":20},"name":"wrapping_div","qualname":"::util::num::Integer::wrapping_div","value":"pub fn wrapping_div(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222783,"byte_end":222795,"line_start":158,"line_end":158,"column_start":8,"column_end":20},"name":"wrapping_rem","qualname":"::util::num::Integer::wrapping_rem","value":"pub fn wrapping_rem(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222827,"byte_end":222839,"line_start":159,"line_end":159,"column_start":8,"column_end":20},"name":"wrapping_neg","qualname":"::util::num::Integer::wrapping_neg","value":"pub fn wrapping_neg(Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222862,"byte_end":222874,"line_start":160,"line_end":160,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"::util::num::Integer::wrapping_shl","value":"pub fn wrapping_shl(Self, u32) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222905,"byte_end":222917,"line_start":161,"line_end":161,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"::util::num::Integer::wrapping_shr","value":"pub fn wrapping_shr(Self, u32) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":222948,"byte_end":222963,"line_start":162,"line_end":162,"column_start":8,"column_end":23},"name":"overflowing_add","qualname":"::util::num::Integer::overflowing_add","value":"pub fn overflowing_add(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223003,"byte_end":223018,"line_start":163,"line_end":163,"column_start":8,"column_end":23},"name":"overflowing_sub","qualname":"::util::num::Integer::overflowing_sub","value":"pub fn overflowing_sub(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223058,"byte_end":223073,"line_start":164,"line_end":164,"column_start":8,"column_end":23},"name":"overflowing_mul","qualname":"::util::num::Integer::overflowing_mul","value":"pub fn overflowing_mul(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223113,"byte_end":223128,"line_start":165,"line_end":165,"column_start":8,"column_end":23},"name":"overflowing_div","qualname":"::util::num::Integer::overflowing_div","value":"pub fn overflowing_div(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223168,"byte_end":223183,"line_start":166,"line_end":166,"column_start":8,"column_end":23},"name":"overflowing_rem","qualname":"::util::num::Integer::overflowing_rem","value":"pub fn overflowing_rem(Self, Self) -> (Self, bool)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223223,"byte_end":223238,"line_start":167,"line_end":167,"column_start":8,"column_end":23},"name":"overflowing_neg","qualname":"::util::num::Integer::overflowing_neg","value":"pub fn overflowing_neg(Self) -> (Self, bool)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223269,"byte_end":223284,"line_start":168,"line_end":168,"column_start":8,"column_end":23},"name":"overflowing_shl","qualname":"::util::num::Integer::overflowing_shl","value":"pub fn overflowing_shl(Self, u32) -> (Self, bool)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223323,"byte_end":223338,"line_start":169,"line_end":169,"column_start":8,"column_end":23},"name":"overflowing_shr","qualname":"::util::num::Integer::overflowing_shr","value":"pub fn overflowing_shr(Self, u32) -> (Self, bool)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223377,"byte_end":223391,"line_start":170,"line_end":170,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::util::num::Integer::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223423,"byte_end":223437,"line_start":171,"line_end":171,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::util::num::Integer::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223469,"byte_end":223483,"line_start":172,"line_end":172,"column_start":8,"column_end":22},"name":"saturating_mul","qualname":"::util::num::Integer::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223559,"byte_end":223563,"line_start":176,"line_end":176,"column_start":8,"column_end":12},"name":"zero","qualname":"::util::num::Integer::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Create literal zero.\n","sig":null,"attributes":[{"value":"/ Create literal zero.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223513,"byte_end":223537,"line_start":174,"line_end":174,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223542,"byte_end":223551,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223651,"byte_end":223654,"line_start":182,"line_end":182,"column_start":8,"column_end":11},"name":"one","qualname":"::util::num::Integer::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Create literal one.\n","sig":null,"attributes":[{"value":"/ Create literal one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223606,"byte_end":223629,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223634,"byte_end":223643,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223741,"byte_end":223744,"line_start":188,"line_end":188,"column_start":8,"column_end":11},"name":"two","qualname":"::util::num::Integer::two","value":"pub fn two() -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Create literal two.\n","sig":null,"attributes":[{"value":"/ Create literal two.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223696,"byte_end":223719,"line_start":186,"line_end":186,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223724,"byte_end":223733,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223844,"byte_end":223851,"line_start":194,"line_end":194,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::util::num::Integer::is_zero","value":"pub fn is_zero(Self) -> bool","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Check if value is equal to zero.\n","sig":null,"attributes":[{"value":"/ Check if value is equal to zero.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223786,"byte_end":223822,"line_start":192,"line_end":192,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223827,"byte_end":223836,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223963,"byte_end":223969,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"is_one","qualname":"::util::num::Integer::is_one","value":"pub fn is_one(Self) -> bool","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Check if value is equal to one.\n","sig":null,"attributes":[{"value":"/ Check if value is equal to one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223906,"byte_end":223941,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":223946,"byte_end":223955,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224186,"byte_end":224197,"line_start":209,"line_end":209,"column_start":8,"column_end":19},"name":"ceil_divmod","qualname":"::util::num::Integer::ceil_divmod","value":"pub fn ceil_divmod(Self, Self) -> (Self, i32)","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Get the fast ceiling of the quotient from integer division.\n Not safe, since the remainder can easily overflow.\n","sig":null,"attributes":[{"value":"/ Get the fast ceiling of the quotient from integer division.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224042,"byte_end":224105,"line_start":206,"line_end":206,"column_start":5,"column_end":68}},{"value":"/ Not safe, since the remainder can easily overflow.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224110,"byte_end":224164,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224169,"byte_end":224178,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224575,"byte_end":224583,"line_start":221,"line_end":221,"column_start":8,"column_end":16},"name":"ceil_div","qualname":"::util::num::Integer::ceil_div","value":"pub fn ceil_div(Self, Self) -> Self","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Get the fast ceiling of the quotient from integer division.\n Not safe, since the remainder can easily overflow.\n","sig":null,"attributes":[{"value":"/ Get the fast ceiling of the quotient from integer division.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224431,"byte_end":224494,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ Not safe, since the remainder can easily overflow.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224499,"byte_end":224553,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224558,"byte_end":224567,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224786,"byte_end":224794,"line_start":228,"line_end":228,"column_start":8,"column_end":16},"name":"ceil_mod","qualname":"::util::num::Integer::ceil_mod","value":"pub fn ceil_mod(Self, Self) -> i32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Get the fast ceiling modulus from integer division.\n Not safe, since the remainder can easily overflow.\n","sig":null,"attributes":[{"value":"/ Get the fast ceiling modulus from integer division.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224650,"byte_end":224705,"line_start":225,"line_end":225,"column_start":5,"column_end":60}},{"value":"/ Not safe, since the remainder can easily overflow.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224710,"byte_end":224764,"line_start":226,"line_end":226,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224769,"byte_end":224778,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224939,"byte_end":224949,"line_start":236,"line_end":236,"column_start":8,"column_end":18},"name":"bit_length","qualname":"::util::num::Integer::bit_length","value":"pub fn bit_length(Self) -> u32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Get the number of bits in a value.\n","sig":null,"attributes":[{"value":"/ Get the number of bits in a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224879,"byte_end":224917,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":224922,"byte_end":224931,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225066,"byte_end":225079,"line_start":243,"line_end":243,"column_start":8,"column_end":21},"name":"try_u8_or_max","qualname":"::util::num::Integer::try_u8_or_max","value":"pub fn try_u8_or_max(Self) -> u8","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225049,"byte_end":225058,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225152,"byte_end":225166,"line_start":248,"line_end":248,"column_start":8,"column_end":22},"name":"try_u16_or_max","qualname":"::util::num::Integer::try_u16_or_max","value":"pub fn try_u16_or_max(Self) -> u16","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225135,"byte_end":225144,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225240,"byte_end":225254,"line_start":253,"line_end":253,"column_start":8,"column_end":22},"name":"try_u32_or_max","qualname":"::util::num::Integer::try_u32_or_max","value":"pub fn try_u32_or_max(Self) -> u32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225223,"byte_end":225232,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225328,"byte_end":225342,"line_start":258,"line_end":258,"column_start":8,"column_end":22},"name":"try_u64_or_max","qualname":"::util::num::Integer::try_u64_or_max","value":"pub fn try_u64_or_max(Self) -> u64","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225311,"byte_end":225320,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225416,"byte_end":225431,"line_start":263,"line_end":263,"column_start":8,"column_end":23},"name":"try_u128_or_max","qualname":"::util::num::Integer::try_u128_or_max","value":"pub fn try_u128_or_max(Self) -> u128","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225399,"byte_end":225408,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225506,"byte_end":225522,"line_start":268,"line_end":268,"column_start":8,"column_end":24},"name":"try_usize_or_max","qualname":"::util::num::Integer::try_usize_or_max","value":"pub fn try_usize_or_max(Self) -> usize","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225489,"byte_end":225498,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225598,"byte_end":225611,"line_start":273,"line_end":273,"column_start":8,"column_end":21},"name":"try_i8_or_max","qualname":"::util::num::Integer::try_i8_or_max","value":"pub fn try_i8_or_max(Self) -> i8","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225581,"byte_end":225590,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225684,"byte_end":225698,"line_start":278,"line_end":278,"column_start":8,"column_end":22},"name":"try_i16_or_max","qualname":"::util::num::Integer::try_i16_or_max","value":"pub fn try_i16_or_max(Self) -> i16","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225667,"byte_end":225676,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225772,"byte_end":225786,"line_start":283,"line_end":283,"column_start":8,"column_end":22},"name":"try_i32_or_max","qualname":"::util::num::Integer::try_i32_or_max","value":"pub fn try_i32_or_max(Self) -> i32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225755,"byte_end":225764,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225860,"byte_end":225874,"line_start":288,"line_end":288,"column_start":8,"column_end":22},"name":"try_i64_or_max","qualname":"::util::num::Integer::try_i64_or_max","value":"pub fn try_i64_or_max(Self) -> i64","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225843,"byte_end":225852,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225948,"byte_end":225963,"line_start":293,"line_end":293,"column_start":8,"column_end":23},"name":"try_i128_or_max","qualname":"::util::num::Integer::try_i128_or_max","value":"pub fn try_i128_or_max(Self) -> i128","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":225931,"byte_end":225940,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226038,"byte_end":226054,"line_start":298,"line_end":298,"column_start":8,"column_end":24},"name":"try_isize_or_max","qualname":"::util::num::Integer::try_isize_or_max","value":"pub fn try_isize_or_max(Self) -> isize","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226021,"byte_end":226030,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226154,"byte_end":226167,"line_start":305,"line_end":305,"column_start":8,"column_end":21},"name":"try_u8_or_min","qualname":"::util::num::Integer::try_u8_or_min","value":"pub fn try_u8_or_min(Self) -> u8","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226137,"byte_end":226146,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226240,"byte_end":226254,"line_start":310,"line_end":310,"column_start":8,"column_end":22},"name":"try_u16_or_min","qualname":"::util::num::Integer::try_u16_or_min","value":"pub fn try_u16_or_min(Self) -> u16","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226223,"byte_end":226232,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226328,"byte_end":226342,"line_start":315,"line_end":315,"column_start":8,"column_end":22},"name":"try_u32_or_min","qualname":"::util::num::Integer::try_u32_or_min","value":"pub fn try_u32_or_min(Self) -> u32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226311,"byte_end":226320,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226416,"byte_end":226430,"line_start":320,"line_end":320,"column_start":8,"column_end":22},"name":"try_u64_or_min","qualname":"::util::num::Integer::try_u64_or_min","value":"pub fn try_u64_or_min(Self) -> u64","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226399,"byte_end":226408,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226504,"byte_end":226519,"line_start":325,"line_end":325,"column_start":8,"column_end":23},"name":"try_u128_or_min","qualname":"::util::num::Integer::try_u128_or_min","value":"pub fn try_u128_or_min(Self) -> u128","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226487,"byte_end":226496,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226594,"byte_end":226610,"line_start":330,"line_end":330,"column_start":8,"column_end":24},"name":"try_usize_or_min","qualname":"::util::num::Integer::try_usize_or_min","value":"pub fn try_usize_or_min(Self) -> usize","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226577,"byte_end":226586,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226686,"byte_end":226699,"line_start":335,"line_end":335,"column_start":8,"column_end":21},"name":"try_i8_or_min","qualname":"::util::num::Integer::try_i8_or_min","value":"pub fn try_i8_or_min(Self) -> i8","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226669,"byte_end":226678,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226772,"byte_end":226786,"line_start":340,"line_end":340,"column_start":8,"column_end":22},"name":"try_i16_or_min","qualname":"::util::num::Integer::try_i16_or_min","value":"pub fn try_i16_or_min(Self) -> i16","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226755,"byte_end":226764,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226860,"byte_end":226874,"line_start":345,"line_end":345,"column_start":8,"column_end":22},"name":"try_i32_or_min","qualname":"::util::num::Integer::try_i32_or_min","value":"pub fn try_i32_or_min(Self) -> i32","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226843,"byte_end":226852,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226948,"byte_end":226962,"line_start":350,"line_end":350,"column_start":8,"column_end":22},"name":"try_i64_or_min","qualname":"::util::num::Integer::try_i64_or_min","value":"pub fn try_i64_or_min(Self) -> i64","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":226931,"byte_end":226940,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":227036,"byte_end":227051,"line_start":355,"line_end":355,"column_start":8,"column_end":23},"name":"try_i128_or_min","qualname":"::util::num::Integer::try_i128_or_min","value":"pub fn try_i128_or_min(Self) -> i128","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":227019,"byte_end":227028,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":227126,"byte_end":227142,"line_start":360,"line_end":360,"column_start":8,"column_end":24},"name":"try_isize_or_min","qualname":"::util::num::Integer::try_isize_or_min","value":"pub fn try_isize_or_min(Self) -> isize","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":227109,"byte_end":227118,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":232835,"byte_end":232848,"line_start":578,"line_end":578,"column_start":11,"column_end":24},"name":"SignedInteger","qualname":"::util::num::SignedInteger","value":"SignedInteger: Integer + ops::Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"decl_id":null,"docs":" Defines a trait that supports signed integral operations.\n","sig":null,"attributes":[{"value":"/ Defines a trait that supports signed integral operations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":232748,"byte_end":232809,"line_start":576,"line_end":576,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":232920,"byte_end":232931,"line_start":581,"line_end":581,"column_start":8,"column_end":19},"name":"checked_abs","qualname":"::util::num::SignedInteger::checked_abs","value":"pub fn checked_abs(Self) -> Option<Self>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":232962,"byte_end":232974,"line_start":582,"line_end":582,"column_start":8,"column_end":20},"name":"wrapping_abs","qualname":"::util::num::SignedInteger::wrapping_abs","value":"pub fn wrapping_abs(Self) -> Self","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":232997,"byte_end":233012,"line_start":583,"line_end":583,"column_start":8,"column_end":23},"name":"overflowing_abs","qualname":"::util::num::SignedInteger::overflowing_abs","value":"pub fn overflowing_abs(Self) -> (Self, bool)","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":285},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233629,"byte_end":233644,"line_start":610,"line_end":610,"column_start":11,"column_end":26},"name":"UnsignedInteger","qualname":"::util::num::UnsignedInteger","value":"UnsignedInteger: Integer","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" Defines a trait that supports unsigned integral operations.\n","sig":null,"attributes":[{"value":"/ Defines a trait that supports unsigned integral operations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233540,"byte_end":233603,"line_start":608,"line_end":608,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233735,"byte_end":233741,"line_start":614,"line_end":614,"column_start":8,"column_end":14},"name":"is_odd","qualname":"::util::num::UnsignedInteger::is_odd","value":"pub fn is_odd(Self) -> bool","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Returns true if the least-significant bit is odd.\n","sig":null,"attributes":[{"value":"/ Returns true if the least-significant bit is odd.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233660,"byte_end":233713,"line_start":612,"line_end":612,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233718,"byte_end":233727,"line_start":613,"line_end":613,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233883,"byte_end":233890,"line_start":620,"line_end":620,"column_start":8,"column_end":15},"name":"is_even","qualname":"::util::num::UnsignedInteger::is_even","value":"pub fn is_even(Self) -> bool","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Returns true if the least-significant bit is even.\n","sig":null,"attributes":[{"value":"/ Returns true if the least-significant bit is even.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233807,"byte_end":233861,"line_start":618,"line_end":618,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233866,"byte_end":233875,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":289},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234184,"byte_end":234189,"line_start":637,"line_end":637,"column_start":11,"column_end":16},"name":"Float","qualname":"::util::num::Float","value":"Float: Number + ops::Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" Float information for native float types.\n","sig":null,"attributes":[{"value":"/ Float information for native float types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234113,"byte_end":234158,"line_start":635,"line_end":635,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":290},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234273,"byte_end":234281,"line_start":640,"line_end":640,"column_start":10,"column_end":18},"name":"Unsigned","qualname":"::util::num::Float::Unsigned","value":"type Unsigned: UnsignedInteger;","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Unsigned type of the same size.\n","sig":null,"attributes":[{"value":"/ Unsigned type of the same size.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234228,"byte_end":234263,"line_start":639,"line_end":639,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":291},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234328,"byte_end":234332,"line_start":643,"line_end":643,"column_start":11,"column_end":15},"name":"ZERO","qualname":"::util::num::Float::ZERO","value":"Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":292},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234350,"byte_end":234353,"line_start":644,"line_end":644,"column_start":11,"column_end":14},"name":"ONE","qualname":"::util::num::Float::ONE","value":"Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":293},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234371,"byte_end":234374,"line_start":645,"line_end":645,"column_start":11,"column_end":14},"name":"TWO","qualname":"::util::num::Float::TWO","value":"Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":294},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234392,"byte_end":234395,"line_start":646,"line_end":646,"column_start":11,"column_end":14},"name":"MAX","qualname":"::util::num::Float::MAX","value":"Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":295},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234413,"byte_end":234416,"line_start":647,"line_end":647,"column_start":11,"column_end":14},"name":"MIN","qualname":"::util::num::Float::MIN","value":"Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":296},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234434,"byte_end":234442,"line_start":648,"line_end":648,"column_start":11,"column_end":19},"name":"INFINITY","qualname":"::util::num::Float::INFINITY","value":"Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":297},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234460,"byte_end":234472,"line_start":649,"line_end":649,"column_start":11,"column_end":23},"name":"NEG_INFINITY","qualname":"::util::num::Float::NEG_INFINITY","value":"Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":298},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234490,"byte_end":234493,"line_start":650,"line_end":650,"column_start":11,"column_end":14},"name":"NAN","qualname":"::util::num::Float::NAN","value":"Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234511,"byte_end":234515,"line_start":651,"line_end":651,"column_start":11,"column_end":15},"name":"BITS","qualname":"::util::num::Float::BITS","value":"usize","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":300},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234569,"byte_end":234578,"line_start":654,"line_end":654,"column_start":11,"column_end":20},"name":"SIGN_MASK","qualname":"::util::num::Float::SIGN_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Bitmask for the sign bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the sign bit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234529,"byte_end":234558,"line_start":653,"line_end":653,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234666,"byte_end":234679,"line_start":656,"line_end":656,"column_start":11,"column_end":24},"name":"EXPONENT_MASK","qualname":"::util::num::Float::EXPONENT_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Bitmask for the exponent, including the hidden bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the exponent, including the hidden bit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234600,"byte_end":234655,"line_start":655,"line_end":655,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":302},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234795,"byte_end":234810,"line_start":658,"line_end":658,"column_start":11,"column_end":26},"name":"HIDDEN_BIT_MASK","qualname":"::util::num::Float::HIDDEN_BIT_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Bitmask for the hidden bit in exponent, which is an implicit 1 in the fraction.\n","sig":null,"attributes":[{"value":"/ Bitmask for the hidden bit in exponent, which is an implicit 1 in the fraction.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234701,"byte_end":234784,"line_start":657,"line_end":657,"column_start":5,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":303},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234909,"byte_end":234922,"line_start":660,"line_end":660,"column_start":11,"column_end":24},"name":"MANTISSA_MASK","qualname":"::util::num::Float::MANTISSA_MASK","value":"Self::Unsigned","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Bitmask for the mantissa (fraction), excluding the hidden bit.\n","sig":null,"attributes":[{"value":"/ Bitmask for the mantissa (fraction), excluding the hidden bit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234832,"byte_end":234898,"line_start":659,"line_end":659,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":304},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235005,"byte_end":235018,"line_start":665,"line_end":665,"column_start":11,"column_end":24},"name":"INFINITY_BITS","qualname":"::util::num::Float::INFINITY_BITS","value":"Self::Unsigned","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Positive infinity as bits.\n","sig":null,"attributes":[{"value":"/ Positive infinity as bits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234964,"byte_end":234994,"line_start":664,"line_end":664,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":305},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235081,"byte_end":235103,"line_start":667,"line_end":667,"column_start":11,"column_end":33},"name":"NEGATIVE_INFINITY_BITS","qualname":"::util::num::Float::NEGATIVE_INFINITY_BITS","value":"Self::Unsigned","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Positive infinity as bits.\n","sig":null,"attributes":[{"value":"/ Positive infinity as bits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235040,"byte_end":235070,"line_start":666,"line_end":666,"column_start":5,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235194,"byte_end":235207,"line_start":669,"line_end":669,"column_start":11,"column_end":24},"name":"MANTISSA_SIZE","qualname":"::util::num::Float::MANTISSA_SIZE","value":"i32","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Size of the significand (mantissa) without hidden bit.\n","sig":null,"attributes":[{"value":"/ Size of the significand (mantissa) without hidden bit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235125,"byte_end":235183,"line_start":668,"line_end":668,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":307},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235252,"byte_end":235265,"line_start":671,"line_end":671,"column_start":11,"column_end":24},"name":"EXPONENT_BIAS","qualname":"::util::num::Float::EXPONENT_BIAS","value":"i32","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Bias of the exponet\n","sig":null,"attributes":[{"value":"/ Bias of the exponet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235218,"byte_end":235241,"line_start":670,"line_end":670,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":308},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235328,"byte_end":235345,"line_start":673,"line_end":673,"column_start":11,"column_end":28},"name":"DENORMAL_EXPONENT","qualname":"::util::num::Float::DENORMAL_EXPONENT","value":"i32","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Exponent portion of a denormal float.\n","sig":null,"attributes":[{"value":"/ Exponent portion of a denormal float.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235276,"byte_end":235317,"line_start":672,"line_end":672,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":309},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235403,"byte_end":235415,"line_start":675,"line_end":675,"column_start":11,"column_end":23},"name":"MAX_EXPONENT","qualname":"::util::num::Float::MAX_EXPONENT","value":"i32","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Maximum exponent value in float.\n","sig":null,"attributes":[{"value":"/ Maximum exponent value in float.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235356,"byte_end":235392,"line_start":674,"line_end":674,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235507,"byte_end":235510,"line_start":680,"line_end":680,"column_start":8,"column_end":11},"name":"abs","qualname":"::util::num::Float::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235533,"byte_end":235537,"line_start":681,"line_end":681,"column_start":8,"column_end":12},"name":"ceil","qualname":"::util::num::Float::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235560,"byte_end":235563,"line_start":682,"line_end":682,"column_start":8,"column_end":11},"name":"exp","qualname":"::util::num::Float::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235586,"byte_end":235591,"line_start":683,"line_end":683,"column_start":8,"column_end":13},"name":"floor","qualname":"::util::num::Float::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235614,"byte_end":235616,"line_start":684,"line_end":684,"column_start":8,"column_end":10},"name":"ln","qualname":"::util::num::Float::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235639,"byte_end":235643,"line_start":685,"line_end":685,"column_start":8,"column_end":12},"name":"powi","qualname":"::util::num::Float::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235674,"byte_end":235678,"line_start":686,"line_end":686,"column_start":8,"column_end":12},"name":"powf","qualname":"::util::num::Float::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235710,"byte_end":235715,"line_start":687,"line_end":687,"column_start":8,"column_end":13},"name":"round","qualname":"::util::num::Float::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235738,"byte_end":235745,"line_start":688,"line_end":688,"column_start":8,"column_end":15},"name":"to_bits","qualname":"::util::num::Float::to_bits","value":"pub fn to_bits(Self) -> Self::Unsigned","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235778,"byte_end":235787,"line_start":689,"line_end":689,"column_start":8,"column_end":17},"name":"from_bits","qualname":"::util::num::Float::from_bits","value":"pub fn from_bits(Self::Unsigned) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235823,"byte_end":235839,"line_start":690,"line_end":690,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::util::num::Float::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235862,"byte_end":235878,"line_start":691,"line_end":691,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::util::num::Float::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235975,"byte_end":235982,"line_start":697,"line_end":697,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::util::num::Float::is_zero","value":"pub fn is_zero(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Check if value is equal to zero.\n","sig":null,"attributes":[{"value":"/ Check if value is equal to zero.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235917,"byte_end":235953,"line_start":695,"line_end":695,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":235958,"byte_end":235967,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236204,"byte_end":236210,"line_start":705,"line_end":705,"column_start":8,"column_end":14},"name":"is_one","qualname":"::util::num::Float::is_one","value":"pub fn is_one(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Check if value is equal to one.\n","sig":null,"attributes":[{"value":"/ Check if value is equal to one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236147,"byte_end":236182,"line_start":703,"line_end":703,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236187,"byte_end":236196,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236330,"byte_end":236341,"line_start":711,"line_end":711,"column_start":8,"column_end":19},"name":"is_denormal","qualname":"::util::num::Float::is_denormal","value":"pub fn is_denormal(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Returns true if the float is a denormal.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is a denormal.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236264,"byte_end":236308,"line_start":709,"line_end":709,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236313,"byte_end":236322,"line_start":710,"line_end":710,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236511,"byte_end":236521,"line_start":717,"line_end":717,"column_start":8,"column_end":18},"name":"is_special","qualname":"::util::num::Float::is_special","value":"pub fn is_special(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Returns true if the float is a NaN or Infinite.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is a NaN or Infinite.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236438,"byte_end":236489,"line_start":715,"line_end":715,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236494,"byte_end":236503,"line_start":716,"line_end":716,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236676,"byte_end":236682,"line_start":723,"line_end":723,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::util::num::Float::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Returns true if the float is NaN.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is NaN.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236617,"byte_end":236654,"line_start":721,"line_end":721,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236659,"byte_end":236668,"line_start":722,"line_end":722,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236853,"byte_end":236859,"line_start":729,"line_end":729,"column_start":8,"column_end":14},"name":"is_inf","qualname":"::util::num::Float::is_inf","value":"pub fn is_inf(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Returns true if the float is infinite.\n","sig":null,"attributes":[{"value":"/ Returns true if the float is infinite.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236789,"byte_end":236831,"line_start":727,"line_end":727,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236836,"byte_end":236845,"line_start":728,"line_end":728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237057,"byte_end":237063,"line_start":735,"line_end":735,"column_start":8,"column_end":14},"name":"is_odd","qualname":"::util::num::Float::is_odd","value":"pub fn is_odd(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Returns true if the float's least-significant mantissa bit is odd.\n","sig":null,"attributes":[{"value":"/ Returns true if the float's least-significant mantissa bit is odd.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":236965,"byte_end":237035,"line_start":733,"line_end":733,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237040,"byte_end":237049,"line_start":734,"line_end":734,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237216,"byte_end":237223,"line_start":741,"line_end":741,"column_start":8,"column_end":15},"name":"is_even","qualname":"::util::num::Float::is_even","value":"pub fn is_even(Self) -> bool","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Returns true if the float's least-significant mantissa bit is even.\n","sig":null,"attributes":[{"value":"/ Returns true if the float's least-significant mantissa bit is even.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237123,"byte_end":237194,"line_start":739,"line_end":739,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237199,"byte_end":237208,"line_start":740,"line_end":740,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237338,"byte_end":237346,"line_start":747,"line_end":747,"column_start":8,"column_end":16},"name":"exponent","qualname":"::util::num::Float::exponent","value":"pub fn exponent(Self) -> i32","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Get exponent component from the float.\n","sig":null,"attributes":[{"value":"/ Get exponent component from the float.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237274,"byte_end":237316,"line_start":745,"line_end":745,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237321,"byte_end":237330,"line_start":746,"line_end":746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237706,"byte_end":237714,"line_start":759,"line_end":759,"column_start":8,"column_end":16},"name":"mantissa","qualname":"::util::num::Float::mantissa","value":"pub fn mantissa(Self) -> Self::Unsigned","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Get mantissa (significand) component from float.\n","sig":null,"attributes":[{"value":"/ Get mantissa (significand) component from float.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237632,"byte_end":237684,"line_start":757,"line_end":757,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237689,"byte_end":237698,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237992,"byte_end":237996,"line_start":771,"line_end":771,"column_start":8,"column_end":12},"name":"next","qualname":"::util::num::Float::next","value":"pub fn next(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Get next greater float.\n","sig":null,"attributes":[{"value":"/ Get next greater float.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237943,"byte_end":237970,"line_start":769,"line_end":769,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":237975,"byte_end":237984,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":238580,"byte_end":238593,"line_start":788,"line_end":788,"column_start":8,"column_end":21},"name":"next_positive","qualname":"::util::num::Float::next_positive","value":"pub fn next_positive(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Get next greater float for a positive float.\n Value must be >= 0.0 and < INFINITY.\n","sig":null,"attributes":[{"value":"/ Get next greater float for a positive float.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":238465,"byte_end":238513,"line_start":785,"line_end":785,"column_start":5,"column_end":53}},{"value":"/ Value must be >= 0.0 and < INFINITY.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":238518,"byte_end":238558,"line_start":786,"line_end":786,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":238563,"byte_end":238572,"line_start":787,"line_end":787,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":238842,"byte_end":238846,"line_start":795,"line_end":795,"column_start":8,"column_end":12},"name":"prev","qualname":"::util::num::Float::prev","value":"pub fn prev(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Get previous greater float, such that `self.prev().next() == self`.\n","sig":null,"attributes":[{"value":"/ Get previous greater float, such that `self.prev().next() == self`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":238749,"byte_end":238820,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":238825,"byte_end":238834,"line_start":794,"line_end":794,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239437,"byte_end":239450,"line_start":812,"line_end":812,"column_start":8,"column_end":21},"name":"prev_positive","qualname":"::util::num::Float::prev_positive","value":"pub fn prev_positive(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Get previous greater float for a positive float.\n Value must be > 0.0.\n","sig":null,"attributes":[{"value":"/ Get previous greater float for a positive float.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239334,"byte_end":239386,"line_start":809,"line_end":809,"column_start":5,"column_end":57}},{"value":"/ Value must be > 0.0.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239391,"byte_end":239415,"line_start":810,"line_end":810,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239420,"byte_end":239429,"line_start":811,"line_end":811,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239673,"byte_end":239692,"line_start":819,"line_end":819,"column_start":8,"column_end":27},"name":"round_positive_even","qualname":"::util::num::Float::round_positive_even","value":"pub fn round_positive_even(Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Round a positive number to even.\n","sig":null,"attributes":[{"value":"/ Round a positive number to even.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239615,"byte_end":239651,"line_start":817,"line_end":817,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239656,"byte_end":239665,"line_start":818,"line_end":818,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239895,"byte_end":239905,"line_start":829,"line_end":829,"column_start":8,"column_end":18},"name":"max_finite","qualname":"::util::num::Float::max_finite","value":"pub fn max_finite(Self, Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Get the max of two finite numbers.\n","sig":null,"attributes":[{"value":"/ Get the max of two finite numbers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239835,"byte_end":239873,"line_start":827,"line_end":827,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":239878,"byte_end":239887,"line_start":828,"line_end":828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":240141,"byte_end":240151,"line_start":836,"line_end":836,"column_start":8,"column_end":18},"name":"min_finite","qualname":"::util::num::Float::min_finite","value":"pub fn min_finite(Self, Self) -> Self","parent":{"krate":0,"index":289},"children":[],"decl_id":null,"docs":" Get the min of two finite numbers.\n","sig":null,"attributes":[{"value":"/ Get the min of two finite numbers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":240081,"byte_end":240119,"line_start":834,"line_end":834,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":240124,"byte_end":240133,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":413},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254862,"byte_end":254873,"line_start":7,"line_end":7,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::util::primitive::AsPrimitive","value":"AsPrimitive: Copy + PartialEq + PartialOrd + Send + Sync","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" Type that can be converted to primitive with `as`.\n","sig":null,"attributes":[{"value":"/ Type that can be converted to primitive with `as`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254797,"byte_end":254851,"line_start":6,"line_end":6,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254928,"byte_end":254933,"line_start":8,"line_end":8,"column_start":8,"column_end":13},"name":"as_u8","qualname":"::util::primitive::AsPrimitive::as_u8","value":"pub fn as_u8(Self) -> u8","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254954,"byte_end":254960,"line_start":9,"line_end":9,"column_start":8,"column_end":14},"name":"as_u16","qualname":"::util::primitive::AsPrimitive::as_u16","value":"pub fn as_u16(Self) -> u16","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254982,"byte_end":254988,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"as_u32","qualname":"::util::primitive::AsPrimitive::as_u32","value":"pub fn as_u32(Self) -> u32","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255010,"byte_end":255016,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"as_u64","qualname":"::util::primitive::AsPrimitive::as_u64","value":"pub fn as_u64(Self) -> u64","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255038,"byte_end":255045,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"as_u128","qualname":"::util::primitive::AsPrimitive::as_u128","value":"pub fn as_u128(Self) -> u128","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255068,"byte_end":255076,"line_start":13,"line_end":13,"column_start":8,"column_end":16},"name":"as_usize","qualname":"::util::primitive::AsPrimitive::as_usize","value":"pub fn as_usize(Self) -> usize","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255100,"byte_end":255105,"line_start":14,"line_end":14,"column_start":8,"column_end":13},"name":"as_i8","qualname":"::util::primitive::AsPrimitive::as_i8","value":"pub fn as_i8(Self) -> i8","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255126,"byte_end":255132,"line_start":15,"line_end":15,"column_start":8,"column_end":14},"name":"as_i16","qualname":"::util::primitive::AsPrimitive::as_i16","value":"pub fn as_i16(Self) -> i16","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255154,"byte_end":255160,"line_start":16,"line_end":16,"column_start":8,"column_end":14},"name":"as_i32","qualname":"::util::primitive::AsPrimitive::as_i32","value":"pub fn as_i32(Self) -> i32","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255182,"byte_end":255188,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"as_i64","qualname":"::util::primitive::AsPrimitive::as_i64","value":"pub fn as_i64(Self) -> i64","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255210,"byte_end":255217,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"as_i128","qualname":"::util::primitive::AsPrimitive::as_i128","value":"pub fn as_i128(Self) -> i128","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255240,"byte_end":255248,"line_start":19,"line_end":19,"column_start":8,"column_end":16},"name":"as_isize","qualname":"::util::primitive::AsPrimitive::as_isize","value":"pub fn as_isize(Self) -> isize","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255272,"byte_end":255278,"line_start":20,"line_end":20,"column_start":8,"column_end":14},"name":"as_f32","qualname":"::util::primitive::AsPrimitive::as_f32","value":"pub fn as_f32(Self) -> f32","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":255300,"byte_end":255306,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"as_f64","qualname":"::util::primitive::AsPrimitive::as_f64","value":"pub fn as_f64(Self) -> f64","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":431},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":259140,"byte_end":259149,"line_start":195,"line_end":195,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::util::primitive::Primitive","value":"Primitive: 'static + fmt::Debug + fmt::Display + TryPrimitive","parent":null,"children":[],"decl_id":null,"docs":" Primitive type trait (which all have static lifetimes).\n","sig":null,"attributes":[{"value":"/ Primitive type trait (which all have static lifetimes).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":259070,"byte_end":259129,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":476},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/result.rs","byte_start":273311,"byte_end":273317,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Result","qualname":"::util::result::Result","value":"StdResult<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized Result type for lexical operations.\n","sig":null,"attributes":[{"value":"/ A specialized Result type for lexical operations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/result.rs","byte_start":273248,"byte_end":273301,"line_start":6,"line_end":6,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2375},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11169015,"byte_end":11169021,"line_start":191,"line_end":191,"column_start":10,"column_end":16},"name":"Output","qualname":"::util::sequence::RSliceIndex::Output","value":"type Output: ?Sized;","parent":{"krate":0,"index":2373},"children":[],"decl_id":null,"docs":" Output type for the index.\n","sig":null,"attributes":[{"value":"/ Output type for the index.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11168975,"byte_end":11169005,"line_start":190,"line_end":190,"column_start":5,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":574},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":681769,"byte_end":681780,"line_start":147,"line_end":147,"column_start":10,"column_end":21},"name":"IntegerIter","qualname":"::atof::algorithm::format::traits::FastDataInterface::IntegerIter","value":"type IntegerIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Integer digits iterator type.\n","sig":null,"attributes":[{"value":"/ Integer digits iterator type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":681726,"byte_end":681759,"line_start":146,"line_end":146,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":575},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":681883,"byte_end":681895,"line_start":150,"line_end":150,"column_start":10,"column_end":22},"name":"FractionIter","qualname":"::atof::algorithm::format::traits::FastDataInterface::FractionIter","value":"type FractionIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Float digits iterator type.\n","sig":null,"attributes":[{"value":"/ Float digits iterator type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":681842,"byte_end":681873,"line_start":149,"line_end":149,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":576},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":682001,"byte_end":682013,"line_start":153,"line_end":153,"column_start":10,"column_end":22},"name":"ExponentIter","qualname":"::atof::algorithm::format::traits::FastDataInterface::ExponentIter","value":"type ExponentIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Exponent digits iterator type.\n","sig":null,"attributes":[{"value":"/ Exponent digits iterator type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":681957,"byte_end":681991,"line_start":152,"line_end":152,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":577},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":682147,"byte_end":682160,"line_start":157,"line_end":157,"column_start":10,"column_end":23},"name":"SlowInterface","qualname":"::atof::algorithm::format::traits::FastDataInterface::SlowInterface","value":"type SlowInterface: SlowDataInterface<'a>;","parent":{"krate":0,"index":572},"children":[],"decl_id":null,"docs":" Associated slow data type.\n","sig":null,"attributes":[{"value":"/ Associated slow data type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":682075,"byte_end":682105,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"correct\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":682110,"byte_end":682137,"line_start":156,"line_end":156,"column_start":5,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":598},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":693883,"byte_end":693894,"line_start":492,"line_end":492,"column_start":10,"column_end":21},"name":"IntegerIter","qualname":"::atof::algorithm::format::traits::SlowDataInterface::IntegerIter","value":"type IntegerIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Integer digits iterator type.\n","sig":null,"attributes":[{"value":"/ Integer digits iterator type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":693840,"byte_end":693873,"line_start":491,"line_end":491,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":599},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":693997,"byte_end":694009,"line_start":495,"line_end":495,"column_start":10,"column_end":22},"name":"FractionIter","qualname":"::atof::algorithm::format::traits::SlowDataInterface::FractionIter","value":"type FractionIter: ConsumedIterator<Item=&'a u8> + AsPtrIterator<'a, u8>;","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Float digits iterator type.\n","sig":null,"attributes":[{"value":"/ Float digits iterator type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":693956,"byte_end":693987,"line_start":494,"line_end":494,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2832},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11239646,"byte_end":11239654,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"Mantissa","qualname":"::atof::algorithm::alias::FloatType::Mantissa","value":"type Mantissa: Mantissa;","parent":{"krate":0,"index":2831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2833},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11239675,"byte_end":11239688,"line_start":17,"line_end":17,"column_start":10,"column_end":23},"name":"ExtendedFloat","qualname":"::atof::algorithm::alias::FloatType::ExtendedFloat","value":"type ExtendedFloat: ExtendedFloatType<Self>;","parent":{"krate":0,"index":2831},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3033},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11878370,"byte_end":11878381,"line_start":2255,"line_end":2255,"column_start":10,"column_end":21},"name":"StorageType","qualname":"::atof::algorithm::math::SharedOps::StorageType","value":"type StorageType: CloneableVecLike<Limb>;","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":" Underlying storage type for a SmallOps.\n","sig":null,"attributes":[{"value":"/ Underlying storage type for a SmallOps.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11878317,"byte_end":11878360,"line_start":2254,"line_end":2254,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":784},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9429,"byte_end":9434,"line_start":238,"line_end":238,"column_start":8,"column_end":13},"name":"write","qualname":"::write","value":"pub fn write<'a, N: ToLexical>(N, &'a mut [u8]) -> &'a mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Write number to string.","sig":null,"attributes":[{"value":"/ Write number to string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8311,"byte_end":8338,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8339,"byte_end":8342,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Returns a subslice of the input buffer containing the written bytes,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8343,"byte_end":8415,"line_start":202,"line_end":202,"column_start":1,"column_end":73}},{"value":"/ starting from the same address in memory as the input slice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8416,"byte_end":8480,"line_start":203,"line_end":203,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8481,"byte_end":8484,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ * `value`   - Number to serialize.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8485,"byte_end":8523,"line_start":205,"line_end":205,"column_start":1,"column_end":39}},{"value":"/ * `bytes`   - Slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8524,"byte_end":8576,"line_start":206,"line_end":206,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8577,"byte_end":8580,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8581,"byte_end":8593,"line_start":208,"line_end":208,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8594,"byte_end":8597,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer may not be large enough to hold the serialized","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8598,"byte_end":8669,"line_start":210,"line_end":210,"column_start":1,"column_end":72}},{"value":"/ number. In order to ensure the function will not panic, provide a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8670,"byte_end":8739,"line_start":211,"line_end":211,"column_start":1,"column_end":70}},{"value":"/ buffer with at least `{integer}::FORMATTED_SIZE_DECIMAL` elements.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8740,"byte_end":8810,"line_start":212,"line_end":212,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8811,"byte_end":8814,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8815,"byte_end":8828,"line_start":214,"line_end":214,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8829,"byte_end":8832,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8833,"byte_end":8840,"line_start":216,"line_end":216,"column_start":1,"column_end":8}},{"value":"/ // import `Number` trait to get the `FORMATTED_SIZE_DECIMAL` of the number.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8841,"byte_end":8920,"line_start":217,"line_end":217,"column_start":1,"column_end":80}},{"value":"/ use lexical_core::Number;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8921,"byte_end":8950,"line_start":218,"line_end":218,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8951,"byte_end":8954,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0u8; f32::FORMATTED_SIZE_DECIMAL];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":8955,"byte_end":9011,"line_start":220,"line_end":220,"column_start":1,"column_end":57}},{"value":"/ let float = 3.14159265359_f32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9012,"byte_end":9046,"line_start":221,"line_end":221,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9047,"byte_end":9050,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ lexical_core::write(float, &mut buffer);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9051,"byte_end":9095,"line_start":223,"line_end":223,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9096,"byte_end":9099,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&buffer[0..9], b\"3.1415927\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9100,"byte_end":9144,"line_start":225,"line_end":225,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9145,"byte_end":9152,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9153,"byte_end":9156,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This will panic, because the buffer is not large enough:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9157,"byte_end":9217,"line_start":228,"line_end":228,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9218,"byte_end":9221,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ ```should_panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9222,"byte_end":9241,"line_start":230,"line_end":230,"column_start":1,"column_end":20}},{"value":"/ // note: the buffer is only one byte large","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9242,"byte_end":9288,"line_start":231,"line_end":231,"column_start":1,"column_end":47}},{"value":"/ let mut buffer = [0u8; 1];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9289,"byte_end":9319,"line_start":232,"line_end":232,"column_start":1,"column_end":31}},{"value":"/ let float = 3.14159265359_f32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9320,"byte_end":9354,"line_start":233,"line_end":233,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9355,"byte_end":9358,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ lexical_core::write(float, &mut buffer);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9359,"byte_end":9403,"line_start":235,"line_end":235,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9404,"byte_end":9411,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":9412,"byte_end":9421,"line_start":237,"line_end":237,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":787},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10620,"byte_end":10625,"line_start":277,"line_end":277,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse","value":"pub fn parse<N: FromLexical>(&[u8]) -> Result<N>","parent":null,"children":[],"decl_id":null,"docs":" Parse number from string.","sig":null,"attributes":[{"value":"/ Parse number from string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10394,"byte_end":10423,"line_start":270,"line_end":270,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10424,"byte_end":10427,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ This method parses the entire string, returning an error if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10428,"byte_end":10491,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ any invalid digits are found during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10492,"byte_end":10540,"line_start":273,"line_end":273,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10541,"byte_end":10544,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10545,"byte_end":10602,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10603,"byte_end":10612,"line_start":276,"line_end":276,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10989,"byte_end":11002,"line_start":291,"line_end":291,"column_start":8,"column_end":21},"name":"parse_partial","qualname":"::parse_partial","value":"pub fn parse_partial<N: FromLexical>(&[u8]) -> Result<(N, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Parse number from string.","sig":null,"attributes":[{"value":"/ Parse number from string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10705,"byte_end":10734,"line_start":283,"line_end":283,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10735,"byte_end":10738,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This method parses until an invalid digit is found (or the end","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10739,"byte_end":10805,"line_start":285,"line_end":285,"column_start":1,"column_end":67}},{"value":"/ of the string), returning the number of processed digits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10806,"byte_end":10866,"line_start":286,"line_end":286,"column_start":1,"column_end":61}},{"value":"/ and the parsed value until that point.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10867,"byte_end":10909,"line_start":287,"line_end":287,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10910,"byte_end":10913,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10914,"byte_end":10971,"line_start":289,"line_end":289,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":10972,"byte_end":10981,"line_start":290,"line_end":290,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":791},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11407,"byte_end":11418,"line_start":305,"line_end":305,"column_start":8,"column_end":19},"name":"parse_lossy","qualname":"::parse_lossy","value":"pub fn parse_lossy<N: FromLexicalLossy>(&[u8]) -> Result<N>","parent":null,"children":[],"decl_id":null,"docs":" Lossily parse number from string.","sig":null,"attributes":[{"value":"/ Lossily parse number from string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11099,"byte_end":11136,"line_start":297,"line_end":297,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11137,"byte_end":11140,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ This method parses the entire string, returning an error if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11141,"byte_end":11204,"line_start":299,"line_end":299,"column_start":1,"column_end":64}},{"value":"/ any invalid digits are found during parsing. This parser is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11205,"byte_end":11268,"line_start":300,"line_end":300,"column_start":1,"column_end":64}},{"value":"/ lossy, so numerical rounding may occur during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11269,"byte_end":11327,"line_start":301,"line_end":301,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11328,"byte_end":11331,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11332,"byte_end":11389,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11390,"byte_end":11399,"line_start":304,"line_end":304,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":793},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11875,"byte_end":11894,"line_start":320,"line_end":320,"column_start":8,"column_end":27},"name":"parse_partial_lossy","qualname":"::parse_partial_lossy","value":"pub fn parse_partial_lossy<N: FromLexicalLossy>(&[u8]) -> Result<(N, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Lossily parse number from string.","sig":null,"attributes":[{"value":"/ Lossily parse number from string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11509,"byte_end":11546,"line_start":311,"line_end":311,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11547,"byte_end":11550,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ This method parses until an invalid digit is found (or the end","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11551,"byte_end":11617,"line_start":313,"line_end":313,"column_start":1,"column_end":67}},{"value":"/ of the string), returning the number of processed digits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11618,"byte_end":11678,"line_start":314,"line_end":314,"column_start":1,"column_end":61}},{"value":"/ and the parsed value until that point. This parser is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11679,"byte_end":11736,"line_start":315,"line_end":315,"column_start":1,"column_end":58}},{"value":"/ lossy, so numerical rounding may occur during parsing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11737,"byte_end":11795,"line_start":316,"line_end":316,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11796,"byte_end":11799,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ * `bytes`   - Byte slice containing a numeric string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11800,"byte_end":11857,"line_start":318,"line_end":318,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/lib.rs","byte_start":11858,"byte_end":11867,"line_start":319,"line_end":319,"column_start":1,"column_end":10}}]}],"impls":[{"id":210,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":95547,"byte_end":95564,"line_start":66,"line_end":66,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197574,"byte_end":197579,"line_start":88,"line_end":88,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197717,"byte_end":197722,"line_start":95,"line_end":95,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197862,"byte_end":197867,"line_start":102,"line_end":102,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":198056,"byte_end":198061,"line_start":109,"line_end":109,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","byte_start":11162853,"byte_end":11162865,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/iterator.rs","byte_start":211712,"byte_end":211713,"line_start":19,"line_end":19,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/iterator.rs","byte_start":212211,"byte_end":212215,"line_start":36,"line_end":36,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11166878,"byte_end":11166889,"line_start":117,"line_end":117,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11170847,"byte_end":11170858,"line_start":259,"line_end":259,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11171155,"byte_end":11171169,"line_start":275,"line_end":275,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11171340,"byte_end":11171354,"line_start":284,"line_end":284,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11172384,"byte_end":11172392,"line_start":335,"line_end":335,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":2423},{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11192469,"byte_end":11192477,"line_start":1048,"line_end":1048,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11198305,"byte_end":11198313,"line_start":1276,"line_end":1276,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11201037,"byte_end":11201045,"line_start":1388,"line_end":1388,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/standard.rs","byte_start":702034,"byte_end":702059,"line_start":52,"line_end":52,"column_start":34,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11240615,"byte_end":11240628,"line_start":56,"line_end":56,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11241012,"byte_end":11241025,"line_start":78,"line_end":78,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11243305,"byte_end":11243311,"line_start":87,"line_end":87,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11243526,"byte_end":11243532,"line_start":96,"line_end":96,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":3124},{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11243831,"byte_end":11243837,"line_start":110,"line_end":110,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11243861,"byte_end":11243867,"line_start":113,"line_end":113,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11244617,"byte_end":11244625,"line_start":140,"line_end":140,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11244882,"byte_end":11244890,"line_start":150,"line_end":150,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":3143},{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11245191,"byte_end":11245199,"line_start":164,"line_end":164,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11245388,"byte_end":11245396,"line_start":172,"line_end":172,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11245599,"byte_end":11245612,"line_start":182,"line_end":182,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11245826,"byte_end":11245839,"line_start":191,"line_end":191,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11246054,"byte_end":11246067,"line_start":200,"line_end":200,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3150}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/cached.rs","byte_start":11247236,"byte_end":11247254,"line_start":19,"line_end":19,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/cached.rs","byte_start":11248187,"byte_end":11248205,"line_start":53,"line_end":53,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/cached.rs","byte_start":11248871,"byte_end":11248884,"line_start":78,"line_end":78,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3156}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/cached.rs","byte_start":11249068,"byte_end":11249081,"line_start":85,"line_end":85,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/convert.rs","byte_start":867746,"byte_end":867759,"line_start":80,"line_end":80,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/convert.rs","byte_start":868002,"byte_end":868015,"line_start":88,"line_end":88,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/float.rs","byte_start":869674,"byte_end":869687,"line_start":33,"line_end":33,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3647},{"krate":0,"index":3649},{"krate":0,"index":3651},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3663},{"krate":0,"index":3664},{"krate":0,"index":3665},{"krate":0,"index":3667},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3677},{"krate":0,"index":3678}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/float.rs","byte_start":880768,"byte_end":880781,"line_start":423,"line_end":423,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3679}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":26861,"byte_end":26867,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":190},"to":{"krate":0,"index":24}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":30612,"byte_end":30623,"line_start":130,"line_end":130,"column_start":29,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":24},"to":{"krate":0,"index":28}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/traits.rs","byte_start":44615,"byte_end":44621,"line_start":476,"line_end":476,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":190},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":58292,"byte_end":58303,"line_start":19,"line_end":19,"column_start":19,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":413},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/cast.rs","byte_start":59316,"byte_end":59321,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/config.rs","byte_start":95547,"byte_end":95564,"line_start":66,"line_end":66,"column_start":6,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197574,"byte_end":197579,"line_start":88,"line_end":88,"column_start":26,"column_end":31},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197717,"byte_end":197722,"line_start":95,"line_end":95,"column_start":35,"column_end":40},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":197862,"byte_end":197867,"line_start":102,"line_end":102,"column_start":18,"column_end":23},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1405},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/error.rs","byte_start":198056,"byte_end":198061,"line_start":109,"line_end":109,"column_start":19,"column_end":24},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1405},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/format/not_feature_format.rs","byte_start":11162853,"byte_end":11162865,"line_start":15,"line_end":15,"column_start":6,"column_end":18},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/iterator.rs","byte_start":211568,"byte_end":211576,"line_start":14,"line_end":14,"column_start":36,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":5625},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/iterator.rs","byte_start":211712,"byte_end":211713,"line_start":19,"line_end":19,"column_start":49,"column_end":50},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":150},"to":{"krate":0,"index":147}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/iterator.rs","byte_start":212062,"byte_end":212070,"line_start":31,"line_end":31,"column_start":44,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":5625},"to":{"krate":0,"index":152}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/iterator.rs","byte_start":212211,"byte_end":212215,"line_start":36,"line_end":36,"column_start":45,"column_end":49},"kind":{"Impl":{"id":217}},"from":{"krate":2,"index":7511},"to":{"krate":0,"index":152}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218237,"byte_end":218246,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":431},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218276,"byte_end":218283,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":5492},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218292,"byte_end":218295,"line_start":20,"line_end":20,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":5488},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218325,"byte_end":218328,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2146},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218353,"byte_end":218362,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2177},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218374,"byte_end":218377,"line_start":24,"line_end":24,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2161},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218402,"byte_end":218411,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2189},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218423,"byte_end":218426,"line_start":26,"line_end":26,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2156},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218451,"byte_end":218460,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218472,"byte_end":218475,"line_start":28,"line_end":28,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2167},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218500,"byte_end":218509,"line_start":29,"line_end":29,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2193},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218521,"byte_end":218524,"line_start":30,"line_end":30,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2151},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":218549,"byte_end":218558,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":190}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220212,"byte_end":220218,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":0,"index":190},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220221,"byte_end":220223,"line_start":74,"line_end":74,"column_start":14,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":1803},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220226,"byte_end":220229,"line_start":74,"line_end":74,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1830},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220256,"byte_end":220261,"line_start":76,"line_end":76,"column_start":10,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":6960},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220269,"byte_end":220277,"line_start":76,"line_end":76,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":6964},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220285,"byte_end":220293,"line_start":76,"line_end":76,"column_start":39,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":6966},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220322,"byte_end":220328,"line_start":78,"line_end":78,"column_start":10,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2202},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220353,"byte_end":220365,"line_start":79,"line_end":79,"column_start":10,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2229},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220377,"byte_end":220382,"line_start":80,"line_end":80,"column_start":10,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":2207},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220407,"byte_end":220418,"line_start":81,"line_end":81,"column_start":10,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":2233},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220430,"byte_end":220436,"line_start":82,"line_end":82,"column_start":10,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":2212},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220461,"byte_end":220473,"line_start":83,"line_end":83,"column_start":10,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2237},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220485,"byte_end":220488,"line_start":84,"line_end":84,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2198},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220500,"byte_end":220503,"line_start":85,"line_end":85,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220534,"byte_end":220537,"line_start":86,"line_end":86,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220566,"byte_end":220569,"line_start":87,"line_end":87,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220599,"byte_end":220602,"line_start":88,"line_end":88,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220632,"byte_end":220635,"line_start":89,"line_end":89,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220665,"byte_end":220668,"line_start":90,"line_end":90,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220700,"byte_end":220703,"line_start":91,"line_end":91,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220732,"byte_end":220735,"line_start":92,"line_end":92,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220765,"byte_end":220768,"line_start":93,"line_end":93,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220798,"byte_end":220801,"line_start":94,"line_end":94,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220833,"byte_end":220836,"line_start":95,"line_end":95,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2217},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220866,"byte_end":220875,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220893,"byte_end":220902,"line_start":97,"line_end":97,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220918,"byte_end":220927,"line_start":98,"line_end":98,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220944,"byte_end":220953,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220970,"byte_end":220979,"line_start":100,"line_end":100,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":220996,"byte_end":221005,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221024,"byte_end":221033,"line_start":102,"line_end":102,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221049,"byte_end":221058,"line_start":103,"line_end":103,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221075,"byte_end":221084,"line_start":104,"line_end":104,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221101,"byte_end":221110,"line_start":105,"line_end":105,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221127,"byte_end":221136,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2241},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221155,"byte_end":221158,"line_start":107,"line_end":107,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221189,"byte_end":221192,"line_start":108,"line_end":108,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221221,"byte_end":221224,"line_start":109,"line_end":109,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221254,"byte_end":221257,"line_start":110,"line_end":110,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221287,"byte_end":221290,"line_start":111,"line_end":111,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221320,"byte_end":221323,"line_start":112,"line_end":112,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221355,"byte_end":221358,"line_start":113,"line_end":113,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221387,"byte_end":221390,"line_start":114,"line_end":114,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221420,"byte_end":221423,"line_start":115,"line_end":115,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221453,"byte_end":221456,"line_start":116,"line_end":116,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221488,"byte_end":221491,"line_start":117,"line_end":117,"column_start":10,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2223},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221521,"byte_end":221530,"line_start":118,"line_end":118,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221548,"byte_end":221557,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221573,"byte_end":221582,"line_start":120,"line_end":120,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221599,"byte_end":221608,"line_start":121,"line_end":121,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221625,"byte_end":221634,"line_start":122,"line_end":122,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221651,"byte_end":221660,"line_start":123,"line_end":123,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221679,"byte_end":221688,"line_start":124,"line_end":124,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221704,"byte_end":221713,"line_start":125,"line_end":125,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221730,"byte_end":221739,"line_start":126,"line_end":126,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221756,"byte_end":221765,"line_start":127,"line_end":127,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":221782,"byte_end":221791,"line_start":128,"line_end":128,"column_start":10,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2246},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":232850,"byte_end":232857,"line_start":578,"line_end":578,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":195},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":232865,"byte_end":232868,"line_start":578,"line_end":578,"column_start":41,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2173},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":233646,"byte_end":233653,"line_start":610,"line_end":610,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":195},"to":{"krate":0,"index":285}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234191,"byte_end":234197,"line_start":637,"line_end":637,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":190},"to":{"krate":0,"index":289}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/num.rs","byte_start":234205,"byte_end":234208,"line_start":637,"line_end":637,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2173},"to":{"krate":0,"index":289}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254875,"byte_end":254879,"line_start":7,"line_end":7,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":413}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254882,"byte_end":254891,"line_start":7,"line_end":7,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1798},"to":{"krate":0,"index":413}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254894,"byte_end":254904,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":1841},"to":{"krate":0,"index":413}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254907,"byte_end":254911,"line_start":7,"line_end":7,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":413}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":254914,"byte_end":254918,"line_start":7,"line_end":7,"column_start":63,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":413}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":259166,"byte_end":259171,"line_start":195,"line_end":195,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":6953},"to":{"krate":0,"index":431}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":259179,"byte_end":259186,"line_start":195,"line_end":195,"column_start":50,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":6958},"to":{"krate":0,"index":431}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/primitive.rs","byte_start":259189,"byte_end":259201,"line_start":195,"line_end":195,"column_start":60,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":2226},"to":{"krate":0,"index":431}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/pow.rs","byte_start":260816,"byte_end":260821,"line_start":17,"line_end":17,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":289},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/pow.rs","byte_start":260824,"byte_end":260837,"line_start":17,"line_end":17,"column_start":47,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":500},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/pow.rs","byte_start":260840,"byte_end":260850,"line_start":17,"line_end":17,"column_start":63,"column_end":73},"kind":"SuperTrait","from":{"krate":0,"index":2324},"to":{"krate":0,"index":439}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/pow.rs","byte_start":261051,"byte_end":261066,"line_start":28,"line_end":28,"column_start":40,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":439},"to":{"krate":0,"index":442}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11166878,"byte_end":11166889,"line_start":117,"line_end":117,"column_start":22,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2361},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11170847,"byte_end":11170858,"line_start":259,"line_end":259,"column_start":35,"column_end":46},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2391},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11171155,"byte_end":11171169,"line_start":275,"line_end":275,"column_start":39,"column_end":53},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2400},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11171340,"byte_end":11171354,"line_start":284,"line_end":284,"column_start":42,"column_end":56},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2400},"to":{"krate":2,"index":2366}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11172384,"byte_end":11172392,"line_start":335,"line_end":335,"column_start":63,"column_end":71},"kind":{"Impl":{"id":313}},"from":{"krate":19,"index":218},"to":{"krate":0,"index":2413}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11175498,"byte_end":11175511,"line_start":456,"line_end":456,"column_start":25,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":2413},"to":{"krate":0,"index":2471}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11192469,"byte_end":11192477,"line_start":1048,"line_end":1048,"column_start":59,"column_end":67},"kind":{"Impl":{"id":314}},"from":{"krate":19,"index":218},"to":{"krate":0,"index":2471}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11194777,"byte_end":11194784,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":2606}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11194797,"byte_end":11194809,"line_start":1138,"line_end":1138,"column_start":11,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":5525},"to":{"krate":0,"index":2606}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11194825,"byte_end":11194837,"line_start":1139,"line_end":1139,"column_start":11,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":5529},"to":{"krate":0,"index":2606}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11194849,"byte_end":11194857,"line_start":1140,"line_end":1140,"column_start":10,"column_end":18},"kind":"SuperTrait","from":{"krate":2,"index":2294},"to":{"krate":0,"index":2606}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11194878,"byte_end":11194884,"line_start":1141,"line_end":1141,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":5538},"to":{"krate":0,"index":2606}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11194894,"byte_end":11194903,"line_start":1142,"line_end":1142,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":2471},"to":{"krate":0,"index":2606}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11198305,"byte_end":11198313,"line_start":1276,"line_end":1276,"column_start":57,"column_end":65},"kind":{"Impl":{"id":315}},"from":{"krate":19,"index":218},"to":{"krate":0,"index":2606}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11200379,"byte_end":11200383,"line_start":1364,"line_end":1364,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":2646}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11200386,"byte_end":11200393,"line_start":1364,"line_end":1364,"column_start":60,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":2606},"to":{"krate":0,"index":2646}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/util/sequence.rs","byte_start":11201037,"byte_end":11201045,"line_start":1388,"line_end":1388,"column_start":66,"column_end":74},"kind":{"Impl":{"id":316}},"from":{"krate":19,"index":218},"to":{"krate":0,"index":2646}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":677839,"byte_end":677844,"line_start":9,"line_end":9,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":552}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":678694,"byte_end":678699,"line_start":37,"line_end":37,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":562}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":681694,"byte_end":681715,"line_start":145,"line_end":145,"column_start":41,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":552},"to":{"krate":0,"index":572}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/traits.rs","byte_start":693808,"byte_end":693829,"line_start":490,"line_end":490,"column_start":41,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":562},"to":{"krate":0,"index":596}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/format/standard.rs","byte_start":702034,"byte_end":702059,"line_start":52,"line_end":52,"column_start":34,"column_end":59},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2710},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11239572,"byte_end":11239585,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":738},"to":{"krate":0,"index":2831}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11239597,"byte_end":11239610,"line_start":13,"line_end":13,"column_start":5,"column_end":18},"kind":"SuperTrait","from":{"krate":0,"index":738},"to":{"krate":0,"index":2831}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11239623,"byte_end":11239634,"line_start":14,"line_end":14,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":442},"to":{"krate":0,"index":2831}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11240027,"byte_end":11240035,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"kind":"SuperTrait","from":{"krate":0,"index":707},"to":{"krate":0,"index":2840}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11240042,"byte_end":11240053,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":2939},"to":{"krate":0,"index":2840}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11240211,"byte_end":11240221,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"kind":"SuperTrait","from":{"krate":0,"index":2866},"to":{"krate":0,"index":2843}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11240241,"byte_end":11240245,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":1997},"to":{"krate":0,"index":2843}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11240615,"byte_end":11240628,"line_start":56,"line_end":56,"column_start":33,"column_end":46},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":2843}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/alias.rs","byte_start":11241012,"byte_end":11241025,"line_start":78,"line_end":78,"column_start":33,"column_end":46},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":2843}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11243305,"byte_end":11243311,"line_start":87,"line_end":87,"column_start":18,"column_end":24},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":3113},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11243526,"byte_end":11243532,"line_start":96,"line_end":96,"column_start":20,"column_end":26},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":3113},"to":{"krate":0,"index":3032}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11243831,"byte_end":11243837,"line_start":110,"line_end":110,"column_start":19,"column_end":25},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":3113},"to":{"krate":0,"index":3038}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11243861,"byte_end":11243867,"line_start":113,"line_end":113,"column_start":19,"column_end":25},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":3113},"to":{"krate":0,"index":3039}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11244617,"byte_end":11244625,"line_start":140,"line_end":140,"column_start":18,"column_end":26},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":3130},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11244882,"byte_end":11244890,"line_start":150,"line_end":150,"column_start":20,"column_end":28},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":3130},"to":{"krate":0,"index":3032}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11245191,"byte_end":11245199,"line_start":164,"line_end":164,"column_start":19,"column_end":27},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3130},"to":{"krate":0,"index":3038}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11245388,"byte_end":11245396,"line_start":172,"line_end":172,"column_start":19,"column_end":27},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3130},"to":{"krate":0,"index":3039}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11245599,"byte_end":11245612,"line_start":182,"line_end":182,"column_start":26,"column_end":39},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":2866}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11245826,"byte_end":11245839,"line_start":191,"line_end":191,"column_start":26,"column_end":39},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":2866}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/bignum.rs","byte_start":11246054,"byte_end":11246067,"line_start":200,"line_end":200,"column_start":27,"column_end":40},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":2866}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/cached.rs","byte_start":11247236,"byte_end":11247254,"line_start":19,"line_end":19,"column_start":19,"column_end":37},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/cached.rs","byte_start":11248187,"byte_end":11248205,"line_start":53,"line_end":53,"column_start":19,"column_end":37},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/cached.rs","byte_start":11248871,"byte_end":11248884,"line_start":78,"line_end":78,"column_start":33,"column_end":46},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":2893}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/cached.rs","byte_start":11249068,"byte_end":11249081,"line_start":85,"line_end":85,"column_start":34,"column_end":47},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":2893}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/errors.rs","byte_start":11808859,"byte_end":11808867,"line_start":12,"line_end":12,"column_start":24,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":707},"to":{"krate":0,"index":2939}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11821837,"byte_end":11821846,"line_start":180,"line_end":180,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2471},"to":{"krate":0,"index":2952}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11824810,"byte_end":11824819,"line_start":297,"line_end":297,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2471},"to":{"krate":0,"index":2959}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11827992,"byte_end":11828001,"line_start":423,"line_end":423,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2471},"to":{"krate":0,"index":2967}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11832679,"byte_end":11832688,"line_start":601,"line_end":601,"column_start":17,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":2471},"to":{"krate":0,"index":2977}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11878287,"byte_end":11878292,"line_start":2253,"line_end":2253,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":3032}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11878295,"byte_end":11878300,"line_start":2253,"line_end":2253,"column_start":57,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":3032}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11878303,"byte_end":11878310,"line_start":2253,"line_end":2253,"column_start":65,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":3032}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11884579,"byte_end":11884588,"line_start":2485,"line_end":2485,"column_start":48,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":3032},"to":{"krate":0,"index":3038}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/algorithm/math.rs","byte_start":11892798,"byte_end":11892806,"line_start":2822,"line_end":2822,"column_start":48,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":3038},"to":{"krate":0,"index":3039}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atof/api.rs","byte_start":755330,"byte_end":755335,"line_start":19,"line_end":19,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":289},"to":{"krate":0,"index":646}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/atoi/api.rs","byte_start":806119,"byte_end":806126,"line_start":9,"line_end":9,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":195},"to":{"krate":0,"index":660}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/convert.rs","byte_start":867746,"byte_end":867759,"line_start":80,"line_end":80,"column_start":28,"column_end":41},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":3613},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/convert.rs","byte_start":868002,"byte_end":868015,"line_start":88,"line_end":88,"column_start":38,"column_end":51},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":3613},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/float.rs","byte_start":869674,"byte_end":869687,"line_start":33,"line_end":33,"column_start":19,"column_end":32},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":3613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/float.rs","byte_start":880768,"byte_end":880781,"line_start":423,"line_end":423,"column_start":6,"column_end":19},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":3613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/mantissa.rs","byte_start":909817,"byte_end":909832,"line_start":6,"line_end":6,"column_start":21,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":285},"to":{"krate":0,"index":707}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/float/rounding.rs","byte_start":915961,"byte_end":915966,"line_start":165,"line_end":165,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":289},"to":{"krate":0,"index":738}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/ftoa/api.rs","byte_start":935849,"byte_end":935854,"line_start":71,"line_end":71,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":289},"to":{"krate":0,"index":760}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/itoa/api.rs","byte_start":986715,"byte_end":986722,"line_start":46,"line_end":46,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":773},"to":{"krate":0,"index":779}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/lexical-core-0.7.6/src/itoa/api.rs","byte_start":986725,"byte_end":986740,"line_start":46,"line_end":46,"column_start":34,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":285},"to":{"krate":0,"index":779}}]}